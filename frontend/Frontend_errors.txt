     7 |   React.ElementRef<typeof ScrollAreaPrimitive.Root>,
  >  8 |   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>
       |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     9 | >(({ className, children, ...props }, ref) => (
    10 |   <ScrollAreaPrimitive.Root
    11 |     ref={ref}

ERROR in src/components/ui/scroll-area.tsx:9:6
TS2339: Property 'className' does not exist on type '{}'.
     7 |   React.ElementRef<typeof ScrollAreaPrimitive.Root>,
     8 |   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>
  >  9 | >(({ className, children, ...props }, ref) => (
       |      ^^^^^^^^^
    10 |   <ScrollAreaPrimitive.Root
    11 |     ref={ref}
    12 |     className={cn("relative overflow-hidden", className)}

ERROR in src/components/ui/scroll-area.tsx:9:17
TS2339: Property 'children' does not exist on type '{}'.
     7 |   React.ElementRef<typeof ScrollAreaPrimitive.Root>,
     8 |   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>
  >  9 | >(({ className, children, ...props }, ref) => (
       |                 ^^^^^^^^
    10 |   <ScrollAreaPrimitive.Root
    11 |     ref={ref}
    12 |     className={cn("relative overflow-hidden", className)}

ERROR in src/components/ui/scroll-area.tsx:10:4
TS2786: 'ScrollAreaPrimitive.Root' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<ScrollAreaProps & RefAttributes<HTMLDivElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<ScrollAreaProps & RefAttributes<HTMLDivElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
     8 |   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>
     9 | >(({ className, children, ...props }, ref) => (
  > 10 |   <ScrollAreaPrimitive.Root
       |    ^^^^^^^^^^^^^^^^^^^^^^^^
    11 |     ref={ref}
    12 |     className={cn("relative overflow-hidden", className)}
    13 |     {...props}

ERROR in src/components/ui/scroll-area.tsx:15:6
TS2786: 'ScrollAreaPrimitive.Viewport' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<ScrollAreaViewportProps & RefAttributes<HTMLDivElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<ScrollAreaViewportProps & RefAttributes<HTMLDivElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    13 |     {...props}
    14 |   >
  > 15 |     <ScrollAreaPrimitive.Viewport className="h-full w-full rounded-[inherit]">
       |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    16 |       {children}
    17 |     </ScrollAreaPrimitive.Viewport>
    18 |     <ScrollBar />

ERROR in src/components/ui/scroll-area.tsx:19:6
TS2786: 'ScrollAreaPrimitive.Corner' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<ScrollAreaCornerProps & RefAttributes<HTMLDivElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<ScrollAreaCornerProps & RefAttributes<HTMLDivElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    17 |     </ScrollAreaPrimitive.Viewport>
    18 |     <ScrollBar />
  > 19 |     <ScrollAreaPrimitive.Corner />
       |      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    20 |   </ScrollAreaPrimitive.Root>
    21 | ))
    22 | ScrollArea.displayName = ScrollAreaPrimitive.Root.displayName

ERROR in src/components/ui/scroll-area.tsx:25:20
TS2344: Type 'ForwardRefExoticComponent<ScrollAreaScrollbarProps & RefAttributes<HTMLDivElement>>' does not satisfy the constraint 'keyof IntrinsicElements | ForwardRefExoticComponent<any> | (new (props: any) => Component<any, {}, any>) | ((props: any, deprecatedLegacyContext?: any) => ReactNode)'.
  Type 'ForwardRefExoticComponent<ScrollAreaScrollbarProps & RefAttributes<HTMLDivElement>>' is not assignable to type 'ForwardRefExoticComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    23 |
    24 | const ScrollBar = React.forwardRef<
  > 25 |   React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,
       |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    26 |   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>
    27 | >(({ className, orientation = "vertical", ...props }, ref) => (
    28 |   <ScrollAreaPrimitive.ScrollAreaScrollbar

ERROR in src/components/ui/scroll-area.tsx:26:34
TS2344: Type 'ForwardRefExoticComponent<ScrollAreaScrollbarProps & RefAttributes<HTMLDivElement>>' does not satisfy the constraint 'ElementType<any, keyof IntrinsicElements>'.
  Type 'ForwardRefExoticComponent<ScrollAreaScrollbarProps & RefAttributes<HTMLDivElement>>' is not assignable to type 'FunctionComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    24 | const ScrollBar = React.forwardRef<
    25 |   React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,
  > 26 |   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>
       |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    27 | >(({ className, orientation = "vertical", ...props }, ref) => (
    28 |   <ScrollAreaPrimitive.ScrollAreaScrollbar
    29 |     ref={ref}

ERROR in src/components/ui/scroll-area.tsx:27:6
TS2339: Property 'className' does not exist on type '{}'.
    25 |   React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,
    26 |   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>
  > 27 | >(({ className, orientation = "vertical", ...props }, ref) => (
       |      ^^^^^^^^^
    28 |   <ScrollAreaPrimitive.ScrollAreaScrollbar
    29 |     ref={ref}
    30 |     orientation={orientation}

ERROR in src/components/ui/scroll-area.tsx:27:17
TS2339: Property 'orientation' does not exist on type '{}'.
    25 |   React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,
    26 |   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>
  > 27 | >(({ className, orientation = "vertical", ...props }, ref) => (
       |                 ^^^^^^^^^^^
    28 |   <ScrollAreaPrimitive.ScrollAreaScrollbar
    29 |     ref={ref}
    30 |     orientation={orientation}

ERROR in src/components/ui/scroll-area.tsx:28:4
TS2786: 'ScrollAreaPrimitive.ScrollAreaScrollbar' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<ScrollAreaScrollbarProps & RefAttributes<HTMLDivElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<ScrollAreaScrollbarProps & RefAttributes<HTMLDivElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    26 |   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>
    27 | >(({ className, orientation = "vertical", ...props }, ref) => (
  > 28 |   <ScrollAreaPrimitive.ScrollAreaScrollbar
       |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    29 |     ref={ref}
    30 |     orientation={orientation}
    31 |     className={cn(

ERROR in src/components/ui/scroll-area.tsx:41:6
TS2786: 'ScrollAreaPrimitive.ScrollAreaThumb' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<ScrollAreaThumbProps & RefAttributes<HTMLDivElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<ScrollAreaThumbProps & RefAttributes<HTMLDivElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    39 |     {...props}
    40 |   >
  > 41 |     <ScrollAreaPrimitive.ScrollAreaThumb className="relative flex-1 rounded-full bg-border" />
       |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    42 |   </ScrollAreaPrimitive.ScrollAreaScrollbar>
    43 | ))
    44 | ScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName

ERROR in src/components/ui/sheet.tsx:19:6
TS2339: Property 'className' does not exist on type 'Omit<DialogOverlayProps & RefAttributes<HTMLDivElement>, "ref">'.
    17 |   React.ElementRef<typeof SheetPrimitive.Overlay>,
    18 |   React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>
  > 19 | >(({ className, ...props }, ref) => (
       |      ^^^^^^^^^
    20 |   <SheetPrimitive.Overlay
    21 |     className={cn(
    22 |       "fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",

ERROR in src/components/ui/sheet.tsx:21:5
TS2322: Type '{ ref: ForwardedRef<HTMLDivElement>; key?: Key | null | undefined; forceMount?: true | undefined; className: string; }' is not assignable to type 'IntrinsicAttributes & DialogOverlayProps & RefAttributes<HTMLDivElement>'.
  Property 'className' does not exist on type 'IntrinsicAttributes & DialogOverlayProps & RefAttributes<HTMLDivElement>'.
    19 | >(({ className, ...props }, ref) => (
    20 |   <SheetPrimitive.Overlay
  > 21 |     className={cn(
       |     ^^^^^^^^^
    22 |       "fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
    23 |       className
    24 |     )}

ERROR in src/components/ui/sheet.tsx:57:22
TS2339: Property 'className' does not exist on type 'SheetContentProps'.
    55 |   React.ElementRef<typeof SheetPrimitive.Content>,
    56 |   SheetContentProps
  > 57 | >(({ side = "right", className, children, ...props }, ref) => (
       |                      ^^^^^^^^^
    58 |   <SheetPortal>
    59 |     <SheetOverlay />
    60 |     <SheetPrimitive.Content

ERROR in src/components/ui/sheet.tsx:57:33
TS2339: Property 'children' does not exist on type 'SheetContentProps'.
    55 |   React.ElementRef<typeof SheetPrimitive.Content>,
    56 |   SheetContentProps
  > 57 | >(({ side = "right", className, children, ...props }, ref) => (
       |                                 ^^^^^^^^
    58 |   <SheetPortal>
    59 |     <SheetOverlay />
    60 |     <SheetPrimitive.Content

ERROR in src/components/ui/sheet.tsx:60:6
TS2322: Type '{ children: any[]; key?: Key | null | undefined; onOpenAutoFocus?: any; onCloseAutoFocus?: any; forceMount?: true | undefined; ref: ForwardedRef<HTMLDivElement>; className: string; }' is not assignable to type 'IntrinsicAttributes & DialogContentProps & RefAttributes<HTMLDivElement>'.
  Property 'children' does not exist on type 'IntrinsicAttributes & DialogContentProps & RefAttributes<HTMLDivElement>'.
    58 |   <SheetPortal>
    59 |     <SheetOverlay />
  > 60 |     <SheetPrimitive.Content
       |      ^^^^^^^^^^^^^^^^^^^^^^
    61 |       ref={ref}
    62 |       className={cn(sheetVariants({ side }), className)}
    63 |       {...props}

ERROR in src/components/ui/sheet.tsx:66:8
TS2322: Type '{ children: Element[]; className: string; }' is not assignable to type 'IntrinsicAttributes & DialogCloseProps & RefAttributes<HTMLButtonElement>'.
  Property 'children' does not exist on type 'IntrinsicAttributes & DialogCloseProps & RefAttributes<HTMLButtonElement>'.
    64 |     >
    65 |       {children}
  > 66 |       <SheetPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary data-[state=open]:text-secondary-foreground">
       |        ^^^^^^^^^^^^^^^^^^^^
    67 |         <X className="h-4 w-4" />
    68 |         <span className="sr-only">Close</span>
    69 |       </SheetPrimitive.Close>

ERROR in src/components/ui/sheet.tsx:67:10
TS2786: 'X' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    65 |       {children}
    66 |       <SheetPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary data-[state=open]:text-secondary-foreground">
  > 67 |         <X className="h-4 w-4" />
       |          ^
    68 |         <span className="sr-only">Close</span>
    69 |       </SheetPrimitive.Close>
    70 |     </SheetPrimitive.Content>

ERROR in src/components/ui/sheet.tsx:106:6
TS2339: Property 'className' does not exist on type 'Omit<DialogTitleProps & RefAttributes<HTMLHeadingElement>, "ref">'.
    104 |   React.ElementRef<typeof SheetPrimitive.Title>,
    105 |   React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>
  > 106 | >(({ className, ...props }, ref) => (
        |      ^^^^^^^^^
    107 |   <SheetPrimitive.Title
    108 |     ref={ref}
    109 |     className={cn("text-lg font-semibold text-foreground", className)}

ERROR in src/components/ui/sheet.tsx:109:5
TS2322: Type '{ key?: Key | null | undefined; ref: ForwardedRef<HTMLHeadingElement>; className: string; }' is not assignable to type 'IntrinsicAttributes & DialogTitleProps & RefAttributes<HTMLHeadingElement>'.
  Property 'className' does not exist on type 'IntrinsicAttributes & DialogTitleProps & RefAttributes<HTMLHeadingElement>'.
    107 |   <SheetPrimitive.Title
    108 |     ref={ref}
  > 109 |     className={cn("text-lg font-semibold text-foreground", className)}
        |     ^^^^^^^^^
    110 |     {...props}
    111 |   />
    112 | ))

ERROR in src/components/ui/sheet.tsx:118:6
TS2339: Property 'className' does not exist on type 'Omit<DialogDescriptionProps & RefAttributes<HTMLParagraphElement>, "ref">'.
    116 |   React.ElementRef<typeof SheetPrimitive.Description>,
    117 |   React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>
  > 118 | >(({ className, ...props }, ref) => (
        |      ^^^^^^^^^
    119 |   <SheetPrimitive.Description
    120 |     ref={ref}
    121 |     className={cn("text-sm text-muted-foreground", className)}

ERROR in src/components/ui/sheet.tsx:121:5
TS2322: Type '{ key?: Key | null | undefined; ref: ForwardedRef<HTMLParagraphElement>; className: string; }' is not assignable to type 'IntrinsicAttributes & DialogDescriptionProps & RefAttributes<HTMLParagraphElement>'.
  Property 'className' does not exist on type 'IntrinsicAttributes & DialogDescriptionProps & RefAttributes<HTMLParagraphElement>'.
    119 |   <SheetPrimitive.Description
    120 |     ref={ref}
  > 121 |     className={cn("text-sm text-muted-foreground", className)}
        |     ^^^^^^^^^
    122 |     {...props}
    123 |   />
    124 | ))

ERROR in src/features/auth/authSlice.ts:25:17
TS2345: Argument of type '(credentials: { email: string; password: string; }, { rejectWithValue }: GetThunkAPI<{ rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction> | undefined; extra?: unknown; serializedErrorType?: unknown; pendingMeta?: unknown; fulfilledMeta?: unknown; rejectedMeta?: unknown; }...' is not assignable to parameter of type 'AsyncThunkPayloadCreator<{ token: string; data: { user: UserProfile; }; }, { email: string; password: string; }, { rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction> | undefined; ... 4 more ...; rejectedMeta?: unknown; }>'.
  Type 'Promise<unknown>' is not assignable to type 'AsyncThunkPayloadCreatorReturnValue<{ token: string; data: { user: UserProfile; }; }, { rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction> | undefined; ... 4 more ...; rejectedMeta?: unknown; }>'.
    Type 'Promise<unknown>' is not assignable to type 'Promise<{ token: string; data: { user: UserProfile; }; } | RejectWithValue<string, unknown>>'.
      Type 'unknown' is not assignable to type '{ token: string; data: { user: UserProfile; }; } | RejectWithValue<string, unknown>'.
    23 |   { email: string; password: string },
    24 |   { rejectValue: string }
  > 25 | >('auth/login', async (credentials, { rejectWithValue }) => {
       |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    26 |   try {
    27 |     const response = await api.post('/auth/login', credentials);
    28 |     return response.data;

ERROR in src/features/auth/authSlice.ts:38:20
TS2345: Argument of type '(userData: { email: string; password: string; firstName: string; lastName: string; }, { rejectWithValue }: GetThunkAPI<{ rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction> | undefined; ... 4 more ...; rejectedMeta?: unknown; }>) => Promise<...>' is not assignable to parameter of type 'AsyncThunkPayloadCreator<{ token: string; data: { user: UserProfile; }; }, { email: string; password: string; firstName: string; lastName: string; }, { rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction> | undefined; ... 4 more ...; rejectedMeta?: unknown; }>'.
  Type 'Promise<unknown>' is not assignable to type 'AsyncThunkPayloadCreatorReturnValue<{ token: string; data: { user: UserProfile; }; }, { rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction> | undefined; ... 4 more ...; rejectedMeta?: unknown; }>'.
    Type 'Promise<unknown>' is not assignable to type 'Promise<{ token: string; data: { user: UserProfile; }; } | RejectWithValue<string, unknown>>'.
      Type 'unknown' is not assignable to type '{ token: string; data: { user: UserProfile; }; } | RejectWithValue<string, unknown>'.
    36 |   { email: string; password: string; firstName: string; lastName: string },
    37 |   { rejectValue: string }
  > 38 | >('auth/register', async (userData, { rejectWithValue }) => {
       |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    39 |   try {
    40 |     const response = await api.post('/auth/register', userData);
    41 |     return response.data;

ERROR in src/features/auth/authSlice.ts:59:26
TS2345: Argument of type '(_: void, { rejectWithValue }: GetThunkAPI<{ rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction> | undefined; extra?: unknown; serializedErrorType?: unknown; pendingMeta?: unknown; fulfilledMeta?: unknown; rejectedMeta?: unknown; }>) => Promise<...>' is not assignable to parameter of type 'AsyncThunkPayloadCreator<UserProfile, void, { rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction> | undefined; extra?: unknown; serializedErrorType?: unknown; pendingMeta?: unknown; fulfilledMeta?: unknown; rejectedMeta?: unknown; }>'.
  Type 'Promise<unknown>' is not assignable to type 'AsyncThunkPayloadCreatorReturnValue<UserProfile, { rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction> | undefined; extra?: unknown; serializedErrorType?: unknown; pendingMeta?: unknown; fulfilledMeta?: unknown; rejectedMeta?: unknown; }>'.
    Type 'Promise<unknown>' is not assignable to type 'Promise<UserProfile | RejectWithValue<string, unknown>>'.
      Type 'unknown' is not assignable to type 'UserProfile | RejectWithValue<string, unknown>'.
    57 |   void,
    58 |   { rejectValue: string }
  > 59 | >('auth/getCurrentUser', async (_, { rejectWithValue }) => {
       |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    60 |   try {
    61 |     const response = await api.get('/auth/me');
    62 |     return response.data;

ERROR in src/features/auth/authSlice.ts:101:9
TS2322: Type '{}' is not assignable to type 'string'.
     99 |       .addCase(login.rejected, (state, action) => {
    100 |         state.loading = false;
  > 101 |         state.error = action.payload || 'Login failed';
        |         ^^^^^^^^^^^
    102 |       })
    103 |       // Register
    104 |       .addCase(register.pending, (state) => {

ERROR in src/features/auth/authSlice.ts:117:9
TS2322: Type '{}' is not assignable to type 'string'.
    115 |       .addCase(register.rejected, (state, action) => {
    116 |         state.loading = false;
  > 117 |         state.error = action.payload || 'Registration failed';
        |         ^^^^^^^^^^^
    118 |       })
    119 |       // Logout
    120 |       .addCase(logout.fulfilled, (state) => {

ERROR in src/features/auth/authSlice.ts:138:9
TS2322: Type '{}' is not assignable to type 'string'.
    136 |       .addCase(getCurrentUser.rejected, (state, action) => {
    137 |         state.loading = false;
  > 138 |         state.error = action.payload || 'Failed to fetch user';
        |         ^^^^^^^^^^^
    139 |         state.user = null;
    140 |         state.token = null;
    141 |         state.isAuthenticated = false;

ERROR in src/hooks/useAuth.ts:17:29
TS2345: Argument of type 'UserProfile' is not assignable to parameter of type '{ user: UserProfile; token: string; }'.
  Type 'UserProfile' is missing the following properties from type '{ user: UserProfile; token: string; }': user, token
    15 |       dispatch(loginStart());
    16 |       const user = await authService.login(credentials);
  > 17 |       dispatch(loginSuccess(user));
       |                             ^^^^
    18 |     } catch (error) {
    19 |       dispatch(loginFailure(error instanceof Error ? error.message : 'Login failed'));
    20 |     }

ERROR in src/hooks/useEventListener.ts:22:41
TS2345: Argument of type '(event: EventMap[K]) => void' is not assignable to parameter of type 'EventListenerOrEventListenerObject'.
  Type '(event: EventMap[K]) => void' is not assignable to type 'EventListener'.
    Types of parameters 'event' and 'evt' are incompatible.
      Type 'Event' is not assignable to type 'EventMap[K]'.
        Type 'Event' is not assignable to type 'ErrorEvent & MessageEvent<any> & UIEvent & Event & ProgressEvent<EventTarget> & SubmitEvent & ... 22 more ... & StorageEvent'.
          Type 'Event' is missing the following properties from type 'ErrorEvent': colno, error, filename, lineno, message
    20 |
    21 |     const eventListener = (event: EventMap[K]) => savedHandler.current(event);
  > 22 |     element.addEventListener(eventName, eventListener, options);
       |                                         ^^^^^^^^^^^^^
    23 |
    24 |     return () => {
    25 |       element.removeEventListener(eventName, eventListener, options);

ERROR in src/hooks/useEventListener.ts:25:46
TS2345: Argument of type '(event: EventMap[K]) => void' is not assignable to parameter of type 'EventListenerOrEventListenerObject'.
  Type '(event: EventMap[K]) => void' is not assignable to type 'EventListener'.
    Types of parameters 'event' and 'evt' are incompatible.
      Type 'Event' is not assignable to type 'EventMap[K]'.
        Type 'Event' is not assignable to type 'ErrorEvent & MessageEvent<any> & UIEvent & Event & ProgressEvent<EventTarget> & SubmitEvent & ... 22 more ... & StorageEvent'.
          Type 'Event' is missing the following properties from type 'ErrorEvent': colno, error, filename, lineno, message
    23 |
    24 |     return () => {
  > 25 |       element.removeEventListener(eventName, eventListener, options);
       |                                              ^^^^^^^^^^^^^
    26 |     };
    27 |   }, [eventName, element, options]);
    28 | };

ERROR in src/hooks/useLanguage.ts:3:29
TS2307: Cannot find module '../features/language/languageSlice' or its corresponding type declarations.
    1 | import { useSelector, useDispatch } from 'react-redux';
    2 | import { RootState, AppDispatch } from '../features/store';
  > 3 | import { setLanguage } from '../features/language/languageSlice';
      |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    4 |
    5 | export const useLanguage = () => {
    6 |   const dispatch = useDispatch<AppDispatch>();

ERROR in src/hooks/useLanguage.ts:7:71
TS2339: Property 'language' does not exist on type '{ auth: AuthState; inventory: InventoryState; contracts: ContractState; invoices: InvoiceState; users: UserState; settings: SettingsState; }'.
     5 | export const useLanguage = () => {
     6 |   const dispatch = useDispatch<AppDispatch>();
  >  7 |   const { currentLanguage } = useSelector((state: RootState) => state.language);
       |                                                                       ^^^^^^^^
     8 |
     9 |   const changeLanguage = (language: string) => {
    10 |     dispatch(setLanguage(language));

ERROR in src/hooks/useNotification.ts:3:53
TS2307: Cannot find module '../features/notifications/notificationSlice' or its corresponding type declarations.
    1 | import { useDispatch } from 'react-redux';
    2 | import { AppDispatch } from '../features/store';
  > 3 | import { addNotification, removeNotification } from '../features/notifications/notificationSlice';
      |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    4 |
    5 | export const useNotification = () => {
    6 |   const dispatch = useDispatch<AppDispatch>();

ERROR in src/hooks/useStockAccessToken.ts:2:35
TS2724: '"../services/stockAccessTokenService"' has no exported member named 'StockAccessToken'. Did you mean 'AccessToken'?
    1 | import { useState, useEffect, useCallback } from 'react';
  > 2 | import { stockAccessTokenService, StockAccessToken, StockAccessTokenRequest } from '../services/stockAccessTokenService';
      |                                   ^^^^^^^^^^^^^^^^
    3 |
    4 | interface UseStockAccessTokenResult {
    5 |   token: StockAccessToken | null;

ERROR in src/hooks/useStockAccessToken.ts:2:53
TS2614: Module '"../services/stockAccessTokenService"' has no exported member 'StockAccessTokenRequest'. Did you mean to use 'import StockAccessTokenRequest from "../services/stockAccessTokenService"' instead?
    1 | import { useState, useEffect, useCallback } from 'react';
  > 2 | import { stockAccessTokenService, StockAccessToken, StockAccessTokenRequest } from '../services/stockAccessTokenService';
      |                                                     ^^^^^^^^^^^^^^^^^^^^^^^
    3 |
    4 | interface UseStockAccessTokenResult {
    5 |   token: StockAccessToken | null;

ERROR in src/hooks/useStockAccessToken.ts:27:59
TS2339: Property 'getActiveAccessToken' does not exist on type 'StockAccessTokenService'.
    25 |
    26 |       try {
  > 27 |         const activeToken = await stockAccessTokenService.getActiveAccessToken(inventoryItem);
       |                                                           ^^^^^^^^^^^^^^^^^^^^
    28 |         setToken(activeToken);
    29 |       } catch (err) {
    30 |         setError(err instanceof Error ? err : new Error('Failed to load access token'));

ERROR in src/hooks/useStockAccessToken.ts:45:54
TS2554: Expected 3 arguments, but got 1.
    43 |
    44 |     try {
  > 45 |       const newToken = await stockAccessTokenService.requestAccessToken(request);
       |                                                      ^^^^^^^^^^^^^^^^^^
    46 |       setToken(newToken);
    47 |     } catch (err) {
    48 |       setError(err instanceof Error ? err : new Error('Failed to request access token'));

ERROR in src/hooks/useSubscription.ts:43:18
TS2339: Property 'subscription' does not exist on type 'UserProfile'.
    41 |
    42 |   const checkFeatureAccess = (featureName: string): boolean => {
  > 43 |     return user?.subscription?.features.includes(featureName) ?? false;
       |                  ^^^^^^^^^^^^
    44 |   };
    45 |
    46 |   return { quota, loading, checkFeatureAccess };

ERROR in src/hooks/useTheme.ts:7:11
TS2339: Property 'isDarkMode' does not exist on type 'ThemeState'.
     5 | export const useTheme = () => {
     6 |   const dispatch = useDispatch<AppDispatch>();
  >  7 |   const { isDarkMode } = useSelector((state: RootState) => state.theme);
       |           ^^^^^^^^^^
     8 |
     9 |   const toggleThemeMode = () => {
    10 |     dispatch(toggleTheme());

ERROR in src/hooks/useTheme.ts:14:23
TS2345: Argument of type 'boolean' is not assignable to parameter of type '"light" | "dark"'.
    12 |
    13 |   const setThemeMode = (isDark: boolean) => {
  > 14 |     dispatch(setTheme(isDark));
       |                       ^^^^^^
    15 |   };
    16 |
    17 |   return {

ERROR in src/main/backupHandlers.ts:2:27
TS2307: Cannot find module '../services/backupService' or its corresponding type declarations.
    1 | import { ipcMain } from 'electron';
  > 2 | import backupService from '../services/backupService';
      |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    3 |
    4 | export const setupBackupHandlers = () => {
    5 |   ipcMain.handle('backup:list', async () => {

ERROR in src/main/backupHandlers.ts:25:62
TS2304: Cannot find name 'BackupConfig'.
    23 |   });
    24 |
  > 25 |   ipcMain.handle('backup:set-config', (_, newConfig: Partial<BackupConfig>) => {
       |                                                              ^^^^^^^^^^^^
    26 |     backupService.updateConfig(newConfig);
    27 |     return backupService.getConfig();
    28 |   });

ERROR in src/modules/accounting/pages/columns.tsx:45:12
TS2786: 'ArrowUpDown' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    43 |         >
    44 |           Amount
  > 45 |           <ArrowUpDown className="ml-2 h-4 w-4" />
       |            ^^^^^^^^^^^
    46 |         </Button>
    47 |       )
    48 |     },

ERROR in src/modules/accounting/pages/columns.tsx:86:32
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    84 |       return (
    85 |         <DropdownMenu>
  > 86 |           <DropdownMenuTrigger asChild>
       |                                ^^^^^^^
    87 |             <Button variant="ghost" className="h-8 w-8 p-0">
    88 |               <span className="sr-only">Open menu</span>
    89 |               <MoreHorizontal className="h-4 w-4" />

ERROR in src/modules/accounting/pages/columns.tsx:89:16
TS2786: 'MoreHorizontal' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    87 |             <Button variant="ghost" className="h-8 w-8 p-0">
    88 |               <span className="sr-only">Open menu</span>
  > 89 |               <MoreHorizontal className="h-4 w-4" />
       |                ^^^^^^^^^^^^^^
    90 |             </Button>
    91 |           </DropdownMenuTrigger>
    92 |           <DropdownMenuContent align="end">

ERROR in src/modules/accounting/pages/columns.tsx:92:32
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    90 |             </Button>
    91 |           </DropdownMenuTrigger>
  > 92 |           <DropdownMenuContent align="end">
       |                                ^^^^^
    93 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
    94 |             <DropdownMenuItem
    95 |               onClick={() => navigator.clipboard.writeText(invoice.id)}

ERROR in src/modules/accounting/pages/columns.tsx:93:14
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
    91 |           </DropdownMenuTrigger>
    92 |           <DropdownMenuContent align="end">
  > 93 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
       |              ^^^^^^^^^^^^^^^^^
    94 |             <DropdownMenuItem
    95 |               onClick={() => navigator.clipboard.writeText(invoice.id)}
    96 |             >

ERROR in src/modules/accounting/pages/Contracts.tsx:34:36
TS2322: Type '{ id: string; contractNumber: string; startDate: string; endDate: string; client: string; value: number; status: string; }[]' is not assignable to type 'Invoice[]'.
  Type '{ id: string; contractNumber: string; startDate: string; endDate: string; client: string; value: number; status: string; }' is missing the following properties from type 'Invoice': invoiceNumber, date, customer, amount
    32 |         <Button>Create New Contract</Button>
    33 |       </div>
  > 34 |       <DataTable columns={columns} data={data} />
       |                                    ^^^^
    35 |     </div>
    36 |   );
    37 | }

ERROR in src/modules/accounting/pages/contracts/columns.tsx:50:12
TS2786: 'ArrowUpDown' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    48 |         >
    49 |           Value
  > 50 |           <ArrowUpDown className="ml-2 h-4 w-4" />
       |            ^^^^^^^^^^^
    51 |         </Button>
    52 |       )
    53 |     },

ERROR in src/modules/accounting/pages/contracts/columns.tsx:91:32
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    89 |       return (
    90 |         <DropdownMenu>
  > 91 |           <DropdownMenuTrigger asChild>
       |                                ^^^^^^^
    92 |             <Button variant="ghost" className="h-8 w-8 p-0">
    93 |               <span className="sr-only">Open menu</span>
    94 |               <MoreHorizontal className="h-4 w-4" />

ERROR in src/modules/accounting/pages/contracts/columns.tsx:94:16
TS2786: 'MoreHorizontal' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    92 |             <Button variant="ghost" className="h-8 w-8 p-0">
    93 |               <span className="sr-only">Open menu</span>
  > 94 |               <MoreHorizontal className="h-4 w-4" />
       |                ^^^^^^^^^^^^^^
    95 |             </Button>
    96 |           </DropdownMenuTrigger>
    97 |           <DropdownMenuContent align="end">

ERROR in src/modules/accounting/pages/contracts/columns.tsx:97:32
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
     95 |             </Button>
     96 |           </DropdownMenuTrigger>
  >  97 |           <DropdownMenuContent align="end">
        |                                ^^^^^
     98 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
     99 |             <DropdownMenuItem
    100 |               onClick={() => navigator.clipboard.writeText(contract.id)}

ERROR in src/modules/accounting/pages/contracts/columns.tsx:98:14
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
     96 |           </DropdownMenuTrigger>
     97 |           <DropdownMenuContent align="end">
  >  98 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
        |              ^^^^^^^^^^^^^^^^^
     99 |             <DropdownMenuItem
    100 |               onClick={() => navigator.clipboard.writeText(contract.id)}
    101 |             >

ERROR in src/modules/accounting/pages/Invoices.tsx:32:18
TS2322: Type 'ColumnDef<Invoice>[]' is not assignable to type 'ColumnDef<{ id: string; invoiceNumber: string; date: string; customer: string; amount: number; status: string; }, unknown>[]'.
  Type 'ColumnDef<Invoice>' is not assignable to type 'ColumnDef<{ id: string; invoiceNumber: string; date: string; customer: string; amount: number; status: string; }, unknown>'.
    Type 'ColumnDefBase<Invoice, unknown> & StringHeaderIdentifier' is not assignable to type 'ColumnDef<{ id: string; invoiceNumber: string; date: string; customer: string; amount: number; status: string; }, unknown>'.
      Type 'ColumnDefBase<Invoice, unknown> & StringHeaderIdentifier' is not assignable to type 'AccessorFnColumnDefBase<{ id: string; invoiceNumber: string; date: string; customer: string; amount: number; status: string; }, unknown> & IdIdentifier<{ id: string; invoiceNumber: string; date: string; customer: string; amount: number; status: string; }, unknown>'.
        Property 'accessorFn' is missing in type 'ColumnDefBase<Invoice, unknown> & StringHeaderIdentifier' but required in type 'AccessorFnColumnDefBase<{ id: string; invoiceNumber: string; date: string; customer: string; amount: number; status: string; }, unknown>'.
    30 |         <Button>Create New Invoice</Button>
    31 |       </div>
  > 32 |       <DataTable columns={columns} data={data} />
       |                  ^^^^^^^
    33 |     </div>
    34 |   );
    35 | }

ERROR in src/modules/accounting/pages/Proformas.tsx:32:36
TS2322: Type '{ id: string; proformaNumber: string; date: string; client: string; amount: number; status: string; }[]' is not assignable to type 'Invoice[]'.
  Type '{ id: string; proformaNumber: string; date: string; client: string; amount: number; status: string; }' is missing the following properties from type 'Invoice': invoiceNumber, customer
    30 |         <Button>Create New Proforma</Button>
    31 |       </div>
  > 32 |       <DataTable columns={columns} data={data} />
       |                                    ^^^^
    33 |     </div>
    34 |   );
    35 | }

ERROR in src/modules/accounting/pages/proformas/columns.tsx:45:12
TS2786: 'ArrowUpDown' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    43 |         >
    44 |           Amount
  > 45 |           <ArrowUpDown className="ml-2 h-4 w-4" />
       |            ^^^^^^^^^^^
    46 |         </Button>
    47 |       )
    48 |     },

ERROR in src/modules/accounting/pages/proformas/columns.tsx:88:32
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    86 |       return (
    87 |         <DropdownMenu>
  > 88 |           <DropdownMenuTrigger asChild>
       |                                ^^^^^^^
    89 |             <Button variant="ghost" className="h-8 w-8 p-0">
    90 |               <span className="sr-only">Open menu</span>
    91 |               <MoreHorizontal className="h-4 w-4" />

ERROR in src/modules/accounting/pages/proformas/columns.tsx:91:16
TS2786: 'MoreHorizontal' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    89 |             <Button variant="ghost" className="h-8 w-8 p-0">
    90 |               <span className="sr-only">Open menu</span>
  > 91 |               <MoreHorizontal className="h-4 w-4" />
       |                ^^^^^^^^^^^^^^
    92 |             </Button>
    93 |           </DropdownMenuTrigger>
    94 |           <DropdownMenuContent align="end">

ERROR in src/modules/accounting/pages/proformas/columns.tsx:94:32
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    92 |             </Button>
    93 |           </DropdownMenuTrigger>
  > 94 |           <DropdownMenuContent align="end">
       |                                ^^^^^
    95 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
    96 |             <DropdownMenuItem
    97 |               onClick={() => navigator.clipboard.writeText(proforma.id)}

ERROR in src/modules/accounting/pages/proformas/columns.tsx:95:14
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
    93 |           </DropdownMenuTrigger>
    94 |           <DropdownMenuContent align="end">
  > 95 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
       |              ^^^^^^^^^^^^^^^^^
    96 |             <DropdownMenuItem
    97 |               onClick={() => navigator.clipboard.writeText(proforma.id)}
    98 |             >

ERROR in src/modules/hr/DepartmentForm.tsx:9:18
TS2305: Module '"../../components/ui/select"' has no exported member 'SelectContent'.
     7 | import { Label } from '../../components/ui/label';
     8 | import { Textarea } from '../../components/ui/textarea';
  >  9 | import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../components/ui/select';
       |                  ^^^^^^^^^^^^^
    10 | import { Department } from '@/types/department';
    11 |
    12 | const departmentSchema = z.object({

ERROR in src/modules/hr/DepartmentForm.tsx:9:33
TS2305: Module '"../../components/ui/select"' has no exported member 'SelectItem'.
     7 | import { Label } from '../../components/ui/label';
     8 | import { Textarea } from '../../components/ui/textarea';
  >  9 | import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../components/ui/select';
       |                                 ^^^^^^^^^^
    10 | import { Department } from '@/types/department';
    11 |
    12 | const departmentSchema = z.object({

ERROR in src/modules/hr/DepartmentForm.tsx:9:45
TS2305: Module '"../../components/ui/select"' has no exported member 'SelectTrigger'.
     7 | import { Label } from '../../components/ui/label';
     8 | import { Textarea } from '../../components/ui/textarea';
  >  9 | import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../components/ui/select';
       |                                             ^^^^^^^^^^^^^
    10 | import { Department } from '@/types/department';
    11 |
    12 | const departmentSchema = z.object({

ERROR in src/modules/hr/DepartmentForm.tsx:9:60
TS2305: Module '"../../components/ui/select"' has no exported member 'SelectValue'.
     7 | import { Label } from '../../components/ui/label';
     8 | import { Textarea } from '../../components/ui/textarea';
  >  9 | import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../components/ui/select';
       |                                                            ^^^^^^^^^^^
    10 | import { Department } from '@/types/department';
    11 |
    12 | const departmentSchema = z.object({

ERROR in src/modules/hr/DepartmentForm.tsx:43:11
TS2322: Type '{ error: string | undefined; onChange: ChangeHandler; onBlur: ChangeHandler; ref: RefCallBack; name: "name"; min?: string | number | undefined; ... 6 more ...; id: string; }' is not assignable to type 'IntrinsicAttributes & InputProps & RefAttributes<HTMLInputElement>'.
  Property 'error' does not exist on type 'IntrinsicAttributes & InputProps & RefAttributes<HTMLInputElement>'. Did you mean 'onError'?
    41 |           id="name"
    42 |           {...register('name')}
  > 43 |           error={errors.name?.message}
       |           ^^^^^
    44 |         />
    45 |       </div>
    46 |

ERROR in src/modules/hr/DepartmentForm.tsx:52:11
TS2322: Type '{ error: string | undefined; onChange: ChangeHandler; onBlur: ChangeHandler; ref: RefCallBack; name: "description"; min?: string | number | undefined; ... 6 more ...; id: string; }' is not assignable to type 'IntrinsicAttributes & TextareaProps & RefAttributes<HTMLTextAreaElement>'.
  Property 'error' does not exist on type 'IntrinsicAttributes & TextareaProps & RefAttributes<HTMLTextAreaElement>'. Did you mean 'onError'?
    50 |           id="description"
    51 |           {...register('description')}
  > 52 |           error={errors.description?.message}
       |           ^^^^^
    53 |         />
    54 |       </div>
    55 |

ERROR in src/modules/hr/DepartmentForm.tsx:59:11
TS2322: Type '{ children: Element[]; onValueChange: (value: any) => void; defaultValue: any; }' is not assignable to type 'IntrinsicAttributes & SelectProps & RefAttributes<HTMLSelectElement>'.
  Property 'onValueChange' does not exist on type 'IntrinsicAttributes & SelectProps & RefAttributes<HTMLSelectElement>'. Did you mean 'onVolumeChange'?
    57 |         <Label htmlFor="manager">Manager</Label>
    58 |         <Select
  > 59 |           onValueChange={(value) => setValue('manager', value)}
       |           ^^^^^^^^^^^^^
    60 |           defaultValue={initialData?.manager}
    61 |         >
    62 |           <SelectTrigger>

ERROR in src/modules/hr/DepartmentForm.tsx:59:27
TS7006: Parameter 'value' implicitly has an 'any' type.
    57 |         <Label htmlFor="manager">Manager</Label>
    58 |         <Select
  > 59 |           onValueChange={(value) => setValue('manager', value)}
       |                           ^^^^^
    60 |           defaultValue={initialData?.manager}
    61 |         >
    62 |           <SelectTrigger>

ERROR in src/modules/hr/DepartmentForm.tsx:60:38
TS2551: Property 'manager' does not exist on type 'Department'. Did you mean 'managerId'?
    58 |         <Select
    59 |           onValueChange={(value) => setValue('manager', value)}
  > 60 |           defaultValue={initialData?.manager}
       |                                      ^^^^^^^
    61 |         >
    62 |           <SelectTrigger>
    63 |             <SelectValue placeholder="Select manager" />

ERROR in src/modules/hr/DepartmentList.tsx:53:18
TS2322: Type 'ColumnDef<Department>[]' is not assignable to type 'ColumnDef<unknown, unknown>[]'.
  Type 'ColumnDef<Department>' is not assignable to type 'ColumnDef<unknown, unknown>'.
    Type 'ColumnDefBase<Department, unknown> & StringHeaderIdentifier' is not assignable to type 'ColumnDef<unknown, unknown>'.
      Type 'ColumnDefBase<Department, unknown> & StringHeaderIdentifier' is not assignable to type 'AccessorFnColumnDefBase<unknown, unknown> & IdIdentifier<unknown, unknown>'.
        Property 'accessorFn' is missing in type 'ColumnDefBase<Department, unknown> & StringHeaderIdentifier' but required in type 'AccessorFnColumnDefBase<unknown, unknown>'.
    51 |     <div className="container mx-auto py-6">
    52 |       <h1 className="text-2xl font-bold mb-4">Departments</h1>
  > 53 |       <DataTable columns={columns} data={departments} loading={loading} />
       |                  ^^^^^^^
    54 |     </div>
    55 |   );
    56 | };

ERROR in src/modules/hr/DepartmentService.tsx:14:22
TS2322: Type '{ children: Element; value: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'value' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    12 |           <TabsTrigger value="add">Add Department</TabsTrigger>
    13 |         </TabsList>
  > 14 |         <TabsContent value="list">
       |                      ^^^^^
    15 |           <DepartmentList />
    16 |         </TabsContent>
    17 |         <TabsContent value="add">

ERROR in src/modules/hr/DepartmentService.tsx:17:22
TS2322: Type '{ children: Element; value: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'value' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    15 |           <DepartmentList />
    16 |         </TabsContent>
  > 17 |         <TabsContent value="add">
       |                      ^^^^^
    18 |           <DepartmentForm onSubmit={(data) => {
    19 |             // TODO: Handle form submission
    20 |             console.log(data);

ERROR in src/modules/hr/EmployeeDetails.tsx:71:51
TS2551: Property 'department' does not exist on type 'Employee'. Did you mean 'departmentId'?
    69 |                   Work Information
    70 |                 </Typography>
  > 71 |                 <Typography>Department: {employee.department}</Typography>
       |                                                   ^^^^^^^^^^
    72 |                 <Typography>Position: {employee.position}</Typography>
    73 |                 <Typography>Hire Date: {employee.hireDate}</Typography>
    74 |               </Paper>

ERROR in src/modules/hr/EmployeeDetails.tsx:72:49
TS2551: Property 'position' does not exist on type 'Employee'. Did you mean 'positionId'?
    70 |                 </Typography>
    71 |                 <Typography>Department: {employee.department}</Typography>
  > 72 |                 <Typography>Position: {employee.position}</Typography>
       |                                                 ^^^^^^^^
    73 |                 <Typography>Hire Date: {employee.hireDate}</Typography>
    74 |               </Paper>
    75 |             </Grid>

ERROR in src/modules/hr/EmployeeForm.tsx:91:42
TS2551: Property 'department' does not exist on type 'Employee'. Did you mean 'departmentId'?
    89 |               label="Department"
    90 |               {...register('department')}
  > 91 |               defaultValue={initialData?.department}
       |                                          ^^^^^^^^^^
    92 |             >
    93 |               {/* TODO: Add department options */}
    94 |             </Select>

ERROR in src/modules/hr/EmployeeForm.tsx:103:42
TS2551: Property 'position' does not exist on type 'Employee'. Did you mean 'positionId'?
    101 |               label="Position"
    102 |               {...register('position')}
  > 103 |               defaultValue={initialData?.position}
        |                                          ^^^^^^^^
    104 |             >
    105 |               {/* TODO: Add position options */}
    106 |             </Select>

ERROR in src/modules/hr/EmployeeList.tsx:59:38
TS2551: Property 'department' does not exist on type 'Employee'. Did you mean 'departmentId'?
    57 |                 <TableCell>{employee.lastName}</TableCell>
    58 |                 <TableCell>{employee.email}</TableCell>
  > 59 |                 <TableCell>{employee.department}</TableCell>
       |                                      ^^^^^^^^^^
    60 |                 <TableCell>{employee.position}</TableCell>
    61 |                 <TableCell>
    62 |                   <Button

ERROR in src/modules/hr/EmployeeList.tsx:60:38
TS2551: Property 'position' does not exist on type 'Employee'. Did you mean 'positionId'?
    58 |                 <TableCell>{employee.email}</TableCell>
    59 |                 <TableCell>{employee.department}</TableCell>
  > 60 |                 <TableCell>{employee.position}</TableCell>
       |                                      ^^^^^^^^
    61 |                 <TableCell>
    62 |                   <Button
    63 |                     variant="outlined"

ERROR in src/modules/hr/EmployeeService.tsx:14:22
TS2322: Type '{ children: Element; value: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'value' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    12 |           <TabsTrigger value="add">Add Employee</TabsTrigger>
    13 |         </TabsList>
  > 14 |         <TabsContent value="list">
       |                      ^^^^^
    15 |           <EmployeeList />
    16 |         </TabsContent>
    17 |         <TabsContent value="add">

ERROR in src/modules/hr/EmployeeService.tsx:15:12
TS2739: Type '{}' is missing the following properties from type 'EmployeeListProps': employees, loading
    13 |         </TabsList>
    14 |         <TabsContent value="list">
  > 15 |           <EmployeeList />
       |            ^^^^^^^^^^^^
    16 |         </TabsContent>
    17 |         <TabsContent value="add">
    18 |           <EmployeeForm onSubmit={(data) => {

ERROR in src/modules/hr/EmployeeService.tsx:17:22
TS2322: Type '{ children: Element; value: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'value' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    15 |           <EmployeeList />
    16 |         </TabsContent>
  > 17 |         <TabsContent value="add">
       |                      ^^^^^
    18 |           <EmployeeForm onSubmit={(data) => {
    19 |             // TODO: Handle form submission
    20 |             console.log(data);

ERROR in src/modules/hr/pages/Departments.tsx:32:18
TS2322: Type 'ColumnDef<Department>[]' is not assignable to type 'ColumnDef<{ id: string; name: string; description: string; manager: string; employeeCount: number; status: string; }, unknown>[]'.
  Type 'ColumnDef<Department>' is not assignable to type 'ColumnDef<{ id: string; name: string; description: string; manager: string; employeeCount: number; status: string; }, unknown>'.
    Type 'ColumnDefBase<Department, unknown> & StringHeaderIdentifier' is not assignable to type 'ColumnDef<{ id: string; name: string; description: string; manager: string; employeeCount: number; status: string; }, unknown>'.
      Type 'ColumnDefBase<Department, unknown> & StringHeaderIdentifier' is not assignable to type 'AccessorFnColumnDefBase<{ id: string; name: string; description: string; manager: string; employeeCount: number; status: string; }, unknown> & IdIdentifier<{ id: string; name: string; description: string; manager: string; employeeCount: number; status: string; }, unknown>'.
        Property 'accessorFn' is missing in type 'ColumnDefBase<Department, unknown> & StringHeaderIdentifier' but required in type 'AccessorFnColumnDefBase<{ id: string; name: string; description: string; manager: string; employeeCount: number; status: string; }, unknown>'.
    30 |         <Button>Add Department</Button>
    31 |       </div>
  > 32 |       <DataTable columns={columns} data={data} />
       |                  ^^^^^^^
    33 |     </div>
    34 |   );
    35 | }

ERROR in src/modules/hr/pages/departments/columns.tsx:67:32
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    65 |       return (
    66 |         <DropdownMenu>
  > 67 |           <DropdownMenuTrigger asChild>
       |                                ^^^^^^^
    68 |             <Button variant="ghost" className="h-8 w-8 p-0">
    69 |               <span className="sr-only">Open menu</span>
    70 |               <MoreHorizontal className="h-4 w-4" />

ERROR in src/modules/hr/pages/departments/columns.tsx:70:16
TS2786: 'MoreHorizontal' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    68 |             <Button variant="ghost" className="h-8 w-8 p-0">
    69 |               <span className="sr-only">Open menu</span>
  > 70 |               <MoreHorizontal className="h-4 w-4" />
       |                ^^^^^^^^^^^^^^
    71 |             </Button>
    72 |           </DropdownMenuTrigger>
    73 |           <DropdownMenuContent align="end">

ERROR in src/modules/hr/pages/departments/columns.tsx:73:32
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    71 |             </Button>
    72 |           </DropdownMenuTrigger>
  > 73 |           <DropdownMenuContent align="end">
       |                                ^^^^^
    74 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
    75 |             <DropdownMenuItem
    76 |               onClick={() => navigator.clipboard.writeText(department.id)}

ERROR in src/modules/hr/pages/departments/columns.tsx:74:14
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
    72 |           </DropdownMenuTrigger>
    73 |           <DropdownMenuContent align="end">
  > 74 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
       |              ^^^^^^^^^^^^^^^^^
    75 |             <DropdownMenuItem
    76 |               onClick={() => navigator.clipboard.writeText(department.id)}
    77 |             >

ERROR in src/modules/hr/pages/Employees.tsx:40:18
TS2322: Type 'ColumnDef<Employee>[]' is not assignable to type 'ColumnDef<{ id: string; firstName: string; lastName: string; email: string; phone: string; department: string; position: string; hireDate: string; salary: number; status: string; }, unknown>[]'.
  Type 'ColumnDef<Employee>' is not assignable to type 'ColumnDef<{ id: string; firstName: string; lastName: string; email: string; phone: string; department: string; position: string; hireDate: string; salary: number; status: string; }, unknown>'.
    Type 'ColumnDefBase<Employee, unknown> & StringHeaderIdentifier' is not assignable to type 'ColumnDef<{ id: string; firstName: string; lastName: string; email: string; phone: string; department: string; position: string; hireDate: string; salary: number; status: string; }, unknown>'.
      Type 'ColumnDefBase<Employee, unknown> & StringHeaderIdentifier' is not assignable to type 'AccessorFnColumnDefBase<{ id: string; firstName: string; lastName: string; email: string; phone: string; department: string; position: string; hireDate: string; salary: number; status: string; }, unknown> & IdIdentifier<...>'.
        Property 'accessorFn' is missing in type 'ColumnDefBase<Employee, unknown> & StringHeaderIdentifier' but required in type 'AccessorFnColumnDefBase<{ id: string; firstName: string; lastName: string; email: string; phone: string; department: string; position: string; hireDate: string; salary: number; status: string; }, unknown>'.
    38 |         <Button>Add Employee</Button>
    39 |       </div>
  > 40 |       <DataTable columns={columns} data={data} />
       |                  ^^^^^^^
    41 |     </div>
    42 |   );
    43 | }

ERROR in src/modules/hr/pages/employees/columns.tsx:87:32
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    85 |       return (
    86 |         <DropdownMenu>
  > 87 |           <DropdownMenuTrigger asChild>
       |                                ^^^^^^^
    88 |             <Button variant="ghost" className="h-8 w-8 p-0">
    89 |               <span className="sr-only">Open menu</span>
    90 |               <MoreHorizontal className="h-4 w-4" />

ERROR in src/modules/hr/pages/employees/columns.tsx:90:16
TS2786: 'MoreHorizontal' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    88 |             <Button variant="ghost" className="h-8 w-8 p-0">
    89 |               <span className="sr-only">Open menu</span>
  > 90 |               <MoreHorizontal className="h-4 w-4" />
       |                ^^^^^^^^^^^^^^
    91 |             </Button>
    92 |           </DropdownMenuTrigger>
    93 |           <DropdownMenuContent align="end">

ERROR in src/modules/hr/pages/employees/columns.tsx:93:32
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    91 |             </Button>
    92 |           </DropdownMenuTrigger>
  > 93 |           <DropdownMenuContent align="end">
       |                                ^^^^^
    94 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
    95 |             <DropdownMenuItem
    96 |               onClick={() => navigator.clipboard.writeText(employee.id)}

ERROR in src/modules/hr/pages/employees/columns.tsx:94:14
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
    92 |           </DropdownMenuTrigger>
    93 |           <DropdownMenuContent align="end">
  > 94 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
       |              ^^^^^^^^^^^^^^^^^
    95 |             <DropdownMenuItem
    96 |               onClick={() => navigator.clipboard.writeText(employee.id)}
    97 |             >

ERROR in src/modules/hr/pages/leave-requests/columns.tsx:64:32
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    62 |       return (
    63 |         <DropdownMenu>
  > 64 |           <DropdownMenuTrigger asChild>
       |                                ^^^^^^^
    65 |             <Button variant="ghost" className="h-8 w-8 p-0">
    66 |               <span className="sr-only">Open menu</span>
    67 |               <MoreHorizontal className="h-4 w-4" />

ERROR in src/modules/hr/pages/leave-requests/columns.tsx:67:16
TS2786: 'MoreHorizontal' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    65 |             <Button variant="ghost" className="h-8 w-8 p-0">
    66 |               <span className="sr-only">Open menu</span>
  > 67 |               <MoreHorizontal className="h-4 w-4" />
       |                ^^^^^^^^^^^^^^
    68 |             </Button>
    69 |           </DropdownMenuTrigger>
    70 |           <DropdownMenuContent align="end">

ERROR in src/modules/hr/pages/leave-requests/columns.tsx:70:32
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    68 |             </Button>
    69 |           </DropdownMenuTrigger>
  > 70 |           <DropdownMenuContent align="end">
       |                                ^^^^^
    71 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
    72 |             <DropdownMenuItem
    73 |               onClick={() => navigator.clipboard.writeText(request.id)}

ERROR in src/modules/hr/pages/leave-requests/columns.tsx:71:14
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
    69 |           </DropdownMenuTrigger>
    70 |           <DropdownMenuContent align="end">
  > 71 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
       |              ^^^^^^^^^^^^^^^^^
    72 |             <DropdownMenuItem
    73 |               onClick={() => navigator.clipboard.writeText(request.id)}
    74 |             >

ERROR in src/modules/hr/pages/LeaveRequests.tsx:34:18
TS2322: Type 'ColumnDef<LeaveRequest>[]' is not assignable to type 'ColumnDef<{ id: string; employee: string; type: string; startDate: string; endDate: string; status: string; reason: string; }, unknown>[]'.
  Type 'ColumnDef<LeaveRequest>' is not assignable to type 'ColumnDef<{ id: string; employee: string; type: string; startDate: string; endDate: string; status: string; reason: string; }, unknown>'.
    Type 'ColumnDefBase<LeaveRequest, unknown> & StringHeaderIdentifier' is not assignable to type 'ColumnDef<{ id: string; employee: string; type: string; startDate: string; endDate: string; status: string; reason: string; }, unknown>'.
      Type 'ColumnDefBase<LeaveRequest, unknown> & StringHeaderIdentifier' is not assignable to type 'AccessorFnColumnDefBase<{ id: string; employee: string; type: string; startDate: string; endDate: string; status: string; reason: string; }, unknown> & IdIdentifier<{ id: string; employee: string; ... 4 more ...; reason: string; }, unknown>'.
        Property 'accessorFn' is missing in type 'ColumnDefBase<LeaveRequest, unknown> & StringHeaderIdentifier' but required in type 'AccessorFnColumnDefBase<{ id: string; employee: string; type: string; startDate: string; endDate: string; status: string; reason: string; }, unknown>'.
    32 |         <Button>New Request</Button>
    33 |       </div>
  > 34 |       <DataTable columns={columns} data={data} />
       |                  ^^^^^^^
    35 |     </div>
    36 |   );
    37 | }

ERROR in src/modules/hr/pages/Payroll.tsx:34:18
TS2322: Type 'ColumnDef<Payroll>[]' is not assignable to type 'ColumnDef<{ id: string; employee: string; department: string; position: string; salary: number; paymentDate: string; status: string; }, unknown>[]'.
  Type 'ColumnDef<Payroll>' is not assignable to type 'ColumnDef<{ id: string; employee: string; department: string; position: string; salary: number; paymentDate: string; status: string; }, unknown>'.
    Type 'ColumnDefBase<Payroll, unknown> & StringHeaderIdentifier' is not assignable to type 'ColumnDef<{ id: string; employee: string; department: string; position: string; salary: number; paymentDate: string; status: string; }, unknown>'.
      Type 'ColumnDefBase<Payroll, unknown> & StringHeaderIdentifier' is not assignable to type 'AccessorFnColumnDefBase<{ id: string; employee: string; department: string; position: string; salary: number; paymentDate: string; status: string; }, unknown> & IdIdentifier<{ id: string; ... 5 more ...; status: string; }, unknown>'.
        Property 'accessorFn' is missing in type 'ColumnDefBase<Payroll, unknown> & StringHeaderIdentifier' but required in type 'AccessorFnColumnDefBase<{ id: string; employee: string; department: string; position: string; salary: number; paymentDate: string; status: string; }, unknown>'.
    32 |         <Button>Process Payroll</Button>
    33 |       </div>
  > 34 |       <DataTable columns={columns} data={data} />
       |                  ^^^^^^^
    35 |     </div>
    36 |   );
    37 | }

ERROR in src/modules/hr/pages/payroll/columns.tsx:73:32
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    71 |       return (
    72 |         <DropdownMenu>
  > 73 |           <DropdownMenuTrigger asChild>
       |                                ^^^^^^^
    74 |             <Button variant="ghost" className="h-8 w-8 p-0">
    75 |               <span className="sr-only">Open menu</span>
    76 |               <MoreHorizontal className="h-4 w-4" />

ERROR in src/modules/hr/pages/payroll/columns.tsx:76:16
TS2786: 'MoreHorizontal' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    74 |             <Button variant="ghost" className="h-8 w-8 p-0">
    75 |               <span className="sr-only">Open menu</span>
  > 76 |               <MoreHorizontal className="h-4 w-4" />
       |                ^^^^^^^^^^^^^^
    77 |             </Button>
    78 |           </DropdownMenuTrigger>
    79 |           <DropdownMenuContent align="end">

ERROR in src/modules/hr/pages/payroll/columns.tsx:79:32
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    77 |             </Button>
    78 |           </DropdownMenuTrigger>
  > 79 |           <DropdownMenuContent align="end">
       |                                ^^^^^
    80 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
    81 |             <DropdownMenuItem
    82 |               onClick={() => navigator.clipboard.writeText(payroll.id)}

ERROR in src/modules/hr/pages/payroll/columns.tsx:80:14
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
    78 |           </DropdownMenuTrigger>
    79 |           <DropdownMenuContent align="end">
  > 80 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
       |              ^^^^^^^^^^^^^^^^^
    81 |             <DropdownMenuItem
    82 |               onClick={() => navigator.clipboard.writeText(payroll.id)}
    83 |             >

ERROR in src/modules/hr/pages/performance-reviews/columns.tsx:67:32
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    65 |       return (
    66 |         <DropdownMenu>
  > 67 |           <DropdownMenuTrigger asChild>
       |                                ^^^^^^^
    68 |             <Button variant="ghost" className="h-8 w-8 p-0">
    69 |               <span className="sr-only">Open menu</span>
    70 |               <MoreHorizontal className="h-4 w-4" />

ERROR in src/modules/hr/pages/performance-reviews/columns.tsx:70:16
TS2786: 'MoreHorizontal' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    68 |             <Button variant="ghost" className="h-8 w-8 p-0">
    69 |               <span className="sr-only">Open menu</span>
  > 70 |               <MoreHorizontal className="h-4 w-4" />
       |                ^^^^^^^^^^^^^^
    71 |             </Button>
    72 |           </DropdownMenuTrigger>
    73 |           <DropdownMenuContent align="end">

ERROR in src/modules/hr/pages/performance-reviews/columns.tsx:73:32
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    71 |             </Button>
    72 |           </DropdownMenuTrigger>
  > 73 |           <DropdownMenuContent align="end">
       |                                ^^^^^
    74 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
    75 |             <DropdownMenuItem
    76 |               onClick={() => navigator.clipboard.writeText(review.id)}

ERROR in src/modules/hr/pages/performance-reviews/columns.tsx:74:14
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
    72 |           </DropdownMenuTrigger>
    73 |           <DropdownMenuContent align="end">
  > 74 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
       |              ^^^^^^^^^^^^^^^^^
    75 |             <DropdownMenuItem
    76 |               onClick={() => navigator.clipboard.writeText(review.id)}
    77 |             >

ERROR in src/modules/hr/pages/PerformanceReviews.tsx:32:18
TS2322: Type 'ColumnDef<PerformanceReview>[]' is not assignable to type 'ColumnDef<{ id: string; employee: string; reviewer: string; reviewDate: string; rating: number; status: string; }, unknown>[]'.
  Type 'ColumnDef<PerformanceReview>' is not assignable to type 'ColumnDef<{ id: string; employee: string; reviewer: string; reviewDate: string; rating: number; status: string; }, unknown>'.
    Type 'ColumnDefBase<PerformanceReview, unknown> & StringHeaderIdentifier' is not assignable to type 'ColumnDef<{ id: string; employee: string; reviewer: string; reviewDate: string; rating: number; status: string; }, unknown>'.
      Type 'ColumnDefBase<PerformanceReview, unknown> & StringHeaderIdentifier' is not assignable to type 'AccessorFnColumnDefBase<{ id: string; employee: string; reviewer: string; reviewDate: string; rating: number; status: string; }, unknown> & IdIdentifier<{ id: string; employee: string; reviewer: string; reviewDate: string; rating: number; status: string; }, unknown>'.
        Property 'accessorFn' is missing in type 'ColumnDefBase<PerformanceReview, unknown> & StringHeaderIdentifier' but required in type 'AccessorFnColumnDefBase<{ id: string; employee: string; reviewer: string; reviewDate: string; rating: number; status: string; }, unknown>'.
    30 |         <Button>New Review</Button>
    31 |       </div>
  > 32 |       <DataTable columns={columns} data={data} />
       |                  ^^^^^^^
    33 |     </div>
    34 |   );
    35 | }

ERROR in src/modules/hr/pages/Positions.tsx:34:18
TS2322: Type 'ColumnDef<Position>[]' is not assignable to type 'ColumnDef<{ id: string; title: string; department: string; minSalary: number; maxSalary: number; description: string; status: string; }, unknown>[]'.
  Type 'ColumnDef<Position>' is not assignable to type 'ColumnDef<{ id: string; title: string; department: string; minSalary: number; maxSalary: number; description: string; status: string; }, unknown>'.
    Type 'ColumnDefBase<Position, unknown> & StringHeaderIdentifier' is not assignable to type 'ColumnDef<{ id: string; title: string; department: string; minSalary: number; maxSalary: number; description: string; status: string; }, unknown>'.
      Type 'ColumnDefBase<Position, unknown> & StringHeaderIdentifier' is not assignable to type 'AccessorFnColumnDefBase<{ id: string; title: string; department: string; minSalary: number; maxSalary: number; description: string; status: string; }, unknown> & IdIdentifier<{ ...; }, unknown>'.
        Property 'accessorFn' is missing in type 'ColumnDefBase<Position, unknown> & StringHeaderIdentifier' but required in type 'AccessorFnColumnDefBase<{ id: string; title: string; department: string; minSalary: number; maxSalary: number; description: string; status: string; }, unknown>'.
    32 |         <Button>Add Position</Button>
    33 |       </div>
  > 34 |       <DataTable columns={columns} data={data} />
       |                  ^^^^^^^
    35 |     </div>
    36 |   );
    37 | }

ERROR in src/modules/hr/pages/positions/columns.tsx:81:32
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    79 |       return (
    80 |         <DropdownMenu>
  > 81 |           <DropdownMenuTrigger asChild>
       |                                ^^^^^^^
    82 |             <Button variant="ghost" className="h-8 w-8 p-0">
    83 |               <span className="sr-only">Open menu</span>
    84 |               <MoreHorizontal className="h-4 w-4" />

ERROR in src/modules/hr/pages/positions/columns.tsx:84:16
TS2786: 'MoreHorizontal' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    82 |             <Button variant="ghost" className="h-8 w-8 p-0">
    83 |               <span className="sr-only">Open menu</span>
  > 84 |               <MoreHorizontal className="h-4 w-4" />
       |                ^^^^^^^^^^^^^^
    85 |             </Button>
    86 |           </DropdownMenuTrigger>
    87 |           <DropdownMenuContent align="end">

ERROR in src/modules/hr/pages/positions/columns.tsx:87:32
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    85 |             </Button>
    86 |           </DropdownMenuTrigger>
  > 87 |           <DropdownMenuContent align="end">
       |                                ^^^^^
    88 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
    89 |             <DropdownMenuItem
    90 |               onClick={() => navigator.clipboard.writeText(position.id)}

ERROR in src/modules/hr/pages/positions/columns.tsx:88:14
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
    86 |           </DropdownMenuTrigger>
    87 |           <DropdownMenuContent align="end">
  > 88 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
       |              ^^^^^^^^^^^^^^^^^
    89 |             <DropdownMenuItem
    90 |               onClick={() => navigator.clipboard.writeText(position.id)}
    91 |             >

ERROR in src/modules/hr/pages/Recruitment.tsx:4:25
TS2306: File 'C:/Stock_HR/frontend/src/modules/hr/pages/recruitment/columns.tsx' is not a module.
    2 | import { Button } from '@/components/ui/button';
    3 | import { DataTable } from '@/components/ui/data-table';
  > 4 | import { columns } from './recruitment/columns';
      |                         ^^^^^^^^^^^^^^^^^^^^^^^
    5 |
    6 | const data = [
    7 |   {

ERROR in src/modules/hr/pages/Recruitment.tsx:34:8
TS2741: Property 'searchKey' is missing in type '{ columns: any; data: { id: string; position: string; department: string; candidate: string; applicationDate: string; status: string; source: string; }[]; }' but required in type 'DataTableProps<{ id: string; position: string; department: string; candidate: string; applicationDate: string; status: string; source: string; }, unknown>'.
    32 |         <Button>New Position</Button>
    33 |       </div>
  > 34 |       <DataTable columns={columns} data={data} />
       |        ^^^^^^^^^
    35 |     </div>
    36 |   );
    37 | }

ERROR in src/modules/hr/pages/Reports.tsx:32:18
TS2322: Type 'ColumnDef<Report>[]' is not assignable to type 'ColumnDef<{ id: string; title: string; type: string; createdBy: string; createdDate: string; status: string; }, unknown>[]'.
  Type 'ColumnDef<Report>' is not assignable to type 'ColumnDef<{ id: string; title: string; type: string; createdBy: string; createdDate: string; status: string; }, unknown>'.
    Type 'ColumnDefBase<Report, unknown> & StringHeaderIdentifier' is not assignable to type 'ColumnDef<{ id: string; title: string; type: string; createdBy: string; createdDate: string; status: string; }, unknown>'.
      Type 'ColumnDefBase<Report, unknown> & StringHeaderIdentifier' is not assignable to type 'AccessorFnColumnDefBase<{ id: string; title: string; type: string; createdBy: string; createdDate: string; status: string; }, unknown> & IdIdentifier<{ id: string; title: string; type: string; createdBy: string; createdDate: string; status: string; }, unknown>'.
        Property 'accessorFn' is missing in type 'ColumnDefBase<Report, unknown> & StringHeaderIdentifier' but required in type 'AccessorFnColumnDefBase<{ id: string; title: string; type: string; createdBy: string; createdDate: string; status: string; }, unknown>'.
    30 |         <Button>Generate Report</Button>
    31 |       </div>
  > 32 |       <DataTable columns={columns} data={data} />
       |                  ^^^^^^^
    33 |     </div>
    34 |   );
    35 | }

ERROR in src/modules/hr/pages/reports/columns.tsx:59:32
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    57 |       return (
    58 |         <DropdownMenu>
  > 59 |           <DropdownMenuTrigger asChild>
       |                                ^^^^^^^
    60 |             <Button variant="ghost" className="h-8 w-8 p-0">
    61 |               <span className="sr-only">Open menu</span>
    62 |               <MoreHorizontal className="h-4 w-4" />

ERROR in src/modules/hr/pages/reports/columns.tsx:62:16
TS2786: 'MoreHorizontal' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    60 |             <Button variant="ghost" className="h-8 w-8 p-0">
    61 |               <span className="sr-only">Open menu</span>
  > 62 |               <MoreHorizontal className="h-4 w-4" />
       |                ^^^^^^^^^^^^^^
    63 |             </Button>
    64 |           </DropdownMenuTrigger>
    65 |           <DropdownMenuContent align="end">

ERROR in src/modules/hr/pages/reports/columns.tsx:65:32
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    63 |             </Button>
    64 |           </DropdownMenuTrigger>
  > 65 |           <DropdownMenuContent align="end">
       |                                ^^^^^
    66 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
    67 |             <DropdownMenuItem
    68 |               onClick={() => navigator.clipboard.writeText(report.id)}

ERROR in src/modules/hr/pages/reports/columns.tsx:66:14
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
    64 |           </DropdownMenuTrigger>
    65 |           <DropdownMenuContent align="end">
  > 66 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
       |              ^^^^^^^^^^^^^^^^^
    67 |             <DropdownMenuItem
    68 |               onClick={() => navigator.clipboard.writeText(report.id)}
    69 |             >

ERROR in src/modules/hr/pages/Settings.tsx:11:8
TS2307: Cannot find module '@/components/ui/form' or its corresponding type declarations.
     9 |   FormLabel,
    10 |   FormMessage,
  > 11 | } from '@/components/ui/form';
       |        ^^^^^^^^^^^^^^^^^^^^^^
    12 | import { Input } from '@/components/ui/input';
    13 | import { Switch } from '@/components/ui/switch';
    14 | import { useForm } from 'react-hook-form';

ERROR in src/modules/hr/pages/Settings.tsx:54:24
TS7031: Binding element 'field' implicitly has an 'any' type.
    52 |             control={form.control}
    53 |             name="companyName"
  > 54 |             render={({ field }) => (
       |                        ^^^^^
    55 |               <FormItem>
    56 |                 <FormLabel>Company Name</FormLabel>
    57 |                 <FormControl>

ERROR in src/modules/hr/pages/Settings.tsx:70:24
TS7031: Binding element 'field' implicitly has an 'any' type.
    68 |             control={form.control}
    69 |             name="defaultLeaveDays"
  > 70 |             render={({ field }) => (
       |                        ^^^^^
    71 |               <FormItem>
    72 |                 <FormLabel>Default Leave Days</FormLabel>
    73 |                 <FormControl>

ERROR in src/modules/hr/pages/Settings.tsx:91:24
TS7031: Binding element 'field' implicitly has an 'any' type.
    89 |             control={form.control}
    90 |             name="enableAutoApproval"
  > 91 |             render={({ field }) => (
       |                        ^^^^^
    92 |               <FormItem className="flex flex-row items-center justify-between rounded-lg border p-4">
    93 |                 <div className="space-y-0.5">
    94 |                   <FormLabel className="text-base">Auto-approval</FormLabel>

ERROR in src/modules/hr/pages/Settings.tsx:102:21
TS2322: Type '{ checked: any; onCheckedChange: any; }' is not assignable to type 'IntrinsicAttributes & SwitchProps & RefAttributes<HTMLInputElement>'.
  Property 'onCheckedChange' does not exist on type 'IntrinsicAttributes & SwitchProps & RefAttributes<HTMLInputElement>'.
    100 |                   <Switch
    101 |                     checked={field.value}
  > 102 |                     onCheckedChange={field.onChange}
        |                     ^^^^^^^^^^^^^^^
    103 |                   />
    104 |                 </FormControl>
    105 |               </FormItem>

ERROR in src/modules/hr/pages/Settings.tsx:111:24
TS7031: Binding element 'field' implicitly has an 'any' type.
    109 |             control={form.control}
    110 |             name="enableEmailNotifications"
  > 111 |             render={({ field }) => (
        |                        ^^^^^
    112 |               <FormItem className="flex flex-row items-center justify-between rounded-lg border p-4">
    113 |                 <div className="space-y-0.5">
    114 |                   <FormLabel className="text-base">Email Notifications</FormLabel>

ERROR in src/modules/hr/pages/Settings.tsx:122:21
TS2322: Type '{ checked: any; onCheckedChange: any; }' is not assignable to type 'IntrinsicAttributes & SwitchProps & RefAttributes<HTMLInputElement>'.
  Property 'onCheckedChange' does not exist on type 'IntrinsicAttributes & SwitchProps & RefAttributes<HTMLInputElement>'.
    120 |                   <Switch
    121 |                     checked={field.value}
  > 122 |                     onCheckedChange={field.onChange}
        |                     ^^^^^^^^^^^^^^^
    123 |                   />
    124 |                 </FormControl>
    125 |               </FormItem>

ERROR in src/modules/hr/pages/Settings.tsx:131:24
TS7031: Binding element 'field' implicitly has an 'any' type.
    129 |             control={form.control}
    130 |             name="payrollRunDate"
  > 131 |             render={({ field }) => (
        |                        ^^^^^
    132 |               <FormItem>
    133 |                 <FormLabel>Payroll Run Date</FormLabel>
    134 |                 <FormControl>

ERROR in src/modules/hr/pages/Training.tsx:34:18
TS2322: Type 'ColumnDef<Training>[]' is not assignable to type 'ColumnDef<{ id: string; title: string; trainer: string; startDate: string; endDate: string; location: string; status: string; }, unknown>[]'.
  Type 'ColumnDef<Training>' is not assignable to type 'ColumnDef<{ id: string; title: string; trainer: string; startDate: string; endDate: string; location: string; status: string; }, unknown>'.
    Type 'ColumnDefBase<Training, unknown> & StringHeaderIdentifier' is not assignable to type 'ColumnDef<{ id: string; title: string; trainer: string; startDate: string; endDate: string; location: string; status: string; }, unknown>'.
      Type 'ColumnDefBase<Training, unknown> & StringHeaderIdentifier' is not assignable to type 'AccessorFnColumnDefBase<{ id: string; title: string; trainer: string; startDate: string; endDate: string; location: string; status: string; }, unknown> & IdIdentifier<{ id: string; ... 5 more ...; status: string; }, unknown>'.
        Property 'accessorFn' is missing in type 'ColumnDefBase<Training, unknown> & StringHeaderIdentifier' but required in type 'AccessorFnColumnDefBase<{ id: string; title: string; trainer: string; startDate: string; endDate: string; location: string; status: string; }, unknown>'.
    32 |         <Button>New Training</Button>
    33 |       </div>
  > 34 |       <DataTable columns={columns} data={data} />
       |                  ^^^^^^^
    35 |     </div>
    36 |   );
    37 | }

ERROR in src/modules/hr/pages/training/columns.tsx:65:32
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    63 |       return (
    64 |         <DropdownMenu>
  > 65 |           <DropdownMenuTrigger asChild>
       |                                ^^^^^^^
    66 |             <Button variant="ghost" className="h-8 w-8 p-0">
    67 |               <span className="sr-only">Open menu</span>
    68 |               <MoreHorizontal className="h-4 w-4" />

ERROR in src/modules/hr/pages/training/columns.tsx:68:16
TS2786: 'MoreHorizontal' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    66 |             <Button variant="ghost" className="h-8 w-8 p-0">
    67 |               <span className="sr-only">Open menu</span>
  > 68 |               <MoreHorizontal className="h-4 w-4" />
       |                ^^^^^^^^^^^^^^
    69 |             </Button>
    70 |           </DropdownMenuTrigger>
    71 |           <DropdownMenuContent align="end">

ERROR in src/modules/hr/pages/training/columns.tsx:71:32
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    69 |             </Button>
    70 |           </DropdownMenuTrigger>
  > 71 |           <DropdownMenuContent align="end">
       |                                ^^^^^
    72 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
    73 |             <DropdownMenuItem
    74 |               onClick={() => navigator.clipboard.writeText(training.id)}

ERROR in src/modules/hr/pages/training/columns.tsx:72:14
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
    70 |           </DropdownMenuTrigger>
    71 |           <DropdownMenuContent align="end">
  > 72 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
       |              ^^^^^^^^^^^^^^^^^
    73 |             <DropdownMenuItem
    74 |               onClick={() => navigator.clipboard.writeText(training.id)}
    75 |             >

ERROR in src/modules/hr/PositionForm.tsx:9:18
TS2305: Module '"@/components/ui/select"' has no exported member 'SelectContent'.
     7 | import { Label } from '@/components/ui/label';
     8 | import { Textarea } from '@/components/ui/textarea';
  >  9 | import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
       |                  ^^^^^^^^^^^^^
    10 | import { Position } from '@/types/position';
    11 |
    12 | const positionSchema = z.object({

ERROR in src/modules/hr/PositionForm.tsx:9:33
TS2305: Module '"@/components/ui/select"' has no exported member 'SelectItem'.
     7 | import { Label } from '@/components/ui/label';
     8 | import { Textarea } from '@/components/ui/textarea';
  >  9 | import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
       |                                 ^^^^^^^^^^
    10 | import { Position } from '@/types/position';
    11 |
    12 | const positionSchema = z.object({

ERROR in src/modules/hr/PositionForm.tsx:9:45
TS2305: Module '"@/components/ui/select"' has no exported member 'SelectTrigger'.
     7 | import { Label } from '@/components/ui/label';
     8 | import { Textarea } from '@/components/ui/textarea';
  >  9 | import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
       |                                             ^^^^^^^^^^^^^
    10 | import { Position } from '@/types/position';
    11 |
    12 | const positionSchema = z.object({

ERROR in src/modules/hr/PositionForm.tsx:9:60
TS2305: Module '"@/components/ui/select"' has no exported member 'SelectValue'.
     7 | import { Label } from '@/components/ui/label';
     8 | import { Textarea } from '@/components/ui/textarea';
  >  9 | import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
       |                                                            ^^^^^^^^^^^
    10 | import { Position } from '@/types/position';
    11 |
    12 | const positionSchema = z.object({

ERROR in src/modules/hr/PositionForm.tsx:44:11
TS2322: Type '{ error: string | undefined; onChange: ChangeHandler; onBlur: ChangeHandler; ref: RefCallBack; name: "title"; min?: string | number | undefined; ... 6 more ...; id: string; }' is not assignable to type 'IntrinsicAttributes & InputProps & RefAttributes<HTMLInputElement>'.
  Property 'error' does not exist on type 'IntrinsicAttributes & InputProps & RefAttributes<HTMLInputElement>'. Did you mean 'onError'?
    42 |           id="title"
    43 |           {...register('title')}
  > 44 |           error={errors.title?.message}
       |           ^^^^^
    45 |         />
    46 |       </div>
    47 |

ERROR in src/modules/hr/PositionForm.tsx:51:11
TS2322: Type '{ children: Element[]; onValueChange: (value: any) => void; defaultValue: any; }' is not assignable to type 'IntrinsicAttributes & SelectProps & RefAttributes<HTMLSelectElement>'.
  Property 'onValueChange' does not exist on type 'IntrinsicAttributes & SelectProps & RefAttributes<HTMLSelectElement>'. Did you mean 'onVolumeChange'?
    49 |         <Label htmlFor="department">Department</Label>
    50 |         <Select
  > 51 |           onValueChange={(value) => setValue('department', value)}
       |           ^^^^^^^^^^^^^
    52 |           defaultValue={initialData?.department}
    53 |         >
    54 |           <SelectTrigger>

ERROR in src/modules/hr/PositionForm.tsx:51:27
TS7006: Parameter 'value' implicitly has an 'any' type.
    49 |         <Label htmlFor="department">Department</Label>
    50 |         <Select
  > 51 |           onValueChange={(value) => setValue('department', value)}
       |                           ^^^^^
    52 |           defaultValue={initialData?.department}
    53 |         >
    54 |           <SelectTrigger>

ERROR in src/modules/hr/PositionForm.tsx:52:38
TS2551: Property 'department' does not exist on type 'Position'. Did you mean 'departmentId'?
    50 |         <Select
    51 |           onValueChange={(value) => setValue('department', value)}
  > 52 |           defaultValue={initialData?.department}
       |                                      ^^^^^^^^^^
    53 |         >
    54 |           <SelectTrigger>
    55 |             <SelectValue placeholder="Select department" />

ERROR in src/modules/hr/PositionForm.tsx:66:11
TS2322: Type '{ children: Element[]; onValueChange: (value: any) => void; defaultValue: any; }' is not assignable to type 'IntrinsicAttributes & SelectProps & RefAttributes<HTMLSelectElement>'.
  Property 'onValueChange' does not exist on type 'IntrinsicAttributes & SelectProps & RefAttributes<HTMLSelectElement>'. Did you mean 'onVolumeChange'?
    64 |         <Label htmlFor="level">Level</Label>
    65 |         <Select
  > 66 |           onValueChange={(value) => setValue('level', value)}
       |           ^^^^^^^^^^^^^
    67 |           defaultValue={initialData?.level}
    68 |         >
    69 |           <SelectTrigger>

ERROR in src/modules/hr/PositionForm.tsx:66:27
TS7006: Parameter 'value' implicitly has an 'any' type.
    64 |         <Label htmlFor="level">Level</Label>
    65 |         <Select
  > 66 |           onValueChange={(value) => setValue('level', value)}
       |                           ^^^^^
    67 |           defaultValue={initialData?.level}
    68 |         >
    69 |           <SelectTrigger>

ERROR in src/modules/hr/PositionForm.tsx:67:38
TS2339: Property 'level' does not exist on type 'Position'.
    65 |         <Select
    66 |           onValueChange={(value) => setValue('level', value)}
  > 67 |           defaultValue={initialData?.level}
       |                                      ^^^^^
    68 |         >
    69 |           <SelectTrigger>
    70 |             <SelectValue placeholder="Select level" />

ERROR in src/modules/hr/PositionForm.tsx:89:11
TS2322: Type '{ error: string | undefined; onChange: ChangeHandler; onBlur: ChangeHandler; ref: RefCallBack; name: "description"; min?: string | number | undefined; ... 6 more ...; id: string; }' is not assignable to type 'IntrinsicAttributes & TextareaProps & RefAttributes<HTMLTextAreaElement>'.
  Property 'error' does not exist on type 'IntrinsicAttributes & TextareaProps & RefAttributes<HTMLTextAreaElement>'. Did you mean 'onError'?
    87 |           id="description"
    88 |           {...register('description')}
  > 89 |           error={errors.description?.message}
       |           ^^^^^
    90 |         />
    91 |       </div>
    92 |

ERROR in src/modules/hr/PositionList.tsx:53:18
TS2322: Type 'ColumnDef<Position>[]' is not assignable to type 'ColumnDef<unknown, unknown>[]'.
  Type 'ColumnDef<Position>' is not assignable to type 'ColumnDef<unknown, unknown>'.
    Type 'ColumnDefBase<Position, unknown> & StringHeaderIdentifier' is not assignable to type 'ColumnDef<unknown, unknown>'.
      Type 'ColumnDefBase<Position, unknown> & StringHeaderIdentifier' is not assignable to type 'AccessorFnColumnDefBase<unknown, unknown> & IdIdentifier<unknown, unknown>'.
        Property 'accessorFn' is missing in type 'ColumnDefBase<Position, unknown> & StringHeaderIdentifier' but required in type 'AccessorFnColumnDefBase<unknown, unknown>'.
    51 |     <div className="container mx-auto py-6">
    52 |       <h1 className="text-2xl font-bold mb-4">Positions</h1>
  > 53 |       <DataTable columns={columns} data={positions} loading={loading} />
       |                  ^^^^^^^
    54 |     </div>
    55 |   );
    56 | };

ERROR in src/modules/hr/PositionService.tsx:14:22
TS2322: Type '{ children: Element; value: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'value' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    12 |           <TabsTrigger value="add">Add Position</TabsTrigger>
    13 |         </TabsList>
  > 14 |         <TabsContent value="list">
       |                      ^^^^^
    15 |           <PositionList />
    16 |         </TabsContent>
    17 |         <TabsContent value="add">

ERROR in src/modules/hr/PositionService.tsx:17:22
TS2322: Type '{ children: Element; value: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'value' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    15 |           <PositionList />
    16 |         </TabsContent>
  > 17 |         <TabsContent value="add">
       |                      ^^^^^
    18 |           <PositionForm onSubmit={(data) => {
    19 |             // TODO: Handle form submission
    20 |             console.log(data);

ERROR in src/modules/shared/components/Layout.tsx:5:20
TS2307: Cannot find module './Navbar' or its corresponding type declarations.
    3 | import { Box, Container, CssBaseline } from '@mui/material';
    4 | import { useTheme } from '../../../hooks/useTheme';
  > 5 | import Navbar from './Navbar';
      |                    ^^^^^^^^^^
    6 | import Sidebar from './Sidebar';
    7 |
    8 | const Layout: React.FC = () => {

ERROR in src/modules/shared/components/Layout.tsx:6:21
TS2307: Cannot find module './Sidebar' or its corresponding type declarations.
    4 | import { useTheme } from '../../../hooks/useTheme';
    5 | import Navbar from './Navbar';
  > 6 | import Sidebar from './Sidebar';
      |                     ^^^^^^^^^^^
    7 |
    8 | const Layout: React.FC = () => {
    9 |   const { isDarkMode } = useTheme();

ERROR in src/modules/shared/config/routes.tsx:3:26
TS2307: Cannot find module '../types/user' or its corresponding type declarations.
    1 | import React from 'react';
    2 | import { RouteObject } from 'react-router-dom';
  > 3 | import { UserRole } from '../types/user';
      |                          ^^^^^^^^^^^^^^^
    4 |
    5 | // Stock Module
    6 | import StockList from '../../stock/pages/StockList';

ERROR in src/modules/shared/config/routes.tsx:26:38
TS2312: An interface can only extend an object type or intersection of object types with statically known members.
    24 | import Settings from '../../settings/pages/Settings';
    25 |
  > 26 | export interface RouteConfig extends RouteObject {
       |                                      ^^^^^^^^^^^
    27 |   roles?: UserRole[];
    28 |   permissions?: string[];
    29 |   children?: RouteConfig[];

ERROR in src/modules/shared/config/routes.tsx:36:5
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    34 | export const publicRoutes: RouteConfig[] = [
    35 |   {
  > 36 |     path: '/login',
       |     ^^^^
    37 |     element: <React.Suspense fallback={<div>Loading...</div>}>
    38 |       {React.createElement(React.lazy(() => import('../../auth/pages/Login')))}
    39 |     </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:42:5
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    40 |   },
    41 |   {
  > 42 |     path: '/register',
       |     ^^^^
    43 |     element: <React.Suspense fallback={<div>Loading...</div>}>
    44 |       {React.createElement(React.lazy(() => import('../../auth/pages/Register')))}
    45 |     </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:48:5
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    46 |   },
    47 |   {
  > 48 |     path: '/forgot-password',
       |     ^^^^
    49 |     element: <React.Suspense fallback={<div>Loading...</div>}>
    50 |       {React.createElement(React.lazy(() => import('../../auth/pages/ForgotPassword')))}
    51 |     </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:54:5
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    52 |   },
    53 |   {
  > 54 |     path: '/reset-password',
       |     ^^^^
    55 |     element: <React.Suspense fallback={<div>Loading...</div>}>
    56 |       {React.createElement(React.lazy(() => import('../../auth/pages/ResetPassword')))}
    57 |     </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:65:5
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    63 |   // Dashboard
    64 |   {
  > 65 |     path: '/dashboard',
       |     ^^^^
    66 |     element: <React.Suspense fallback={<div>Loading...</div>}>
    67 |       {React.createElement(React.lazy(() => import('../../dashboard/pages/Dashboard')))}
    68 |     </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:82:9
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    80 |     children: [
    81 |       {
  > 82 |         path: 'categories',
       |         ^^^^
    83 |         element: <React.Suspense fallback={<div>Loading...</div>}>
    84 |           {React.createElement(React.lazy(() => import('../../stock/pages/Categories')))}
    85 |         </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:90:9
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    88 |       },
    89 |       {
  > 90 |         path: 'suppliers',
       |         ^^^^
    91 |         element: <React.Suspense fallback={<div>Loading...</div>}>
    92 |           {React.createElement(React.lazy(() => import('../../stock/pages/Suppliers')))}
    93 |         </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:98:9
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
     96 |       },
     97 |       {
  >  98 |         path: 'movements',
        |         ^^^^
     99 |         element: <React.Suspense fallback={<div>Loading...</div>}>
    100 |           {React.createElement(React.lazy(() => import('../../stock/pages/Movements')))}
    101 |         </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:118:9
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    116 |     children: [
    117 |       {
  > 118 |         path: 'employees',
        |         ^^^^
    119 |         element: <React.Suspense fallback={<div>Loading...</div>}>
    120 |           <EmployeeService />
    121 |         </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:126:9
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    124 |       },
    125 |       {
  > 126 |         path: 'employees/:id',
        |         ^^^^
    127 |         element: <React.Suspense fallback={<div>Loading...</div>}>
    128 |           <EmployeeDetails />
    129 |         </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:134:9
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    132 |       },
    133 |       {
  > 134 |         path: 'departments',
        |         ^^^^
    135 |         element: <React.Suspense fallback={<div>Loading...</div>}>
    136 |           <DepartmentService />
    137 |         </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:142:9
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    140 |       },
    141 |       {
  > 142 |         path: 'positions',
        |         ^^^^
    143 |         element: <React.Suspense fallback={<div>Loading...</div>}>
    144 |           <PositionService />
    145 |         </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:162:9
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    160 |     children: [
    161 |       {
  > 162 |         path: 'invoices',
        |         ^^^^
    163 |         element: <React.Suspense fallback={<div>Loading...</div>}>
    164 |           {React.createElement(React.lazy(() => import('../../accounting/pages/Invoices')))}
    165 |         </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:170:9
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    168 |       },
    169 |       {
  > 170 |         path: 'contracts',
        |         ^^^^
    171 |         element: <React.Suspense fallback={<div>Loading...</div>}>
    172 |           {React.createElement(React.lazy(() => import('../../accounting/pages/Contracts')))}
    173 |         </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:178:9
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    176 |       },
    177 |       {
  > 178 |         path: 'proformas',
        |         ^^^^
    179 |         element: <React.Suspense fallback={<div>Loading...</div>}>
    180 |           {React.createElement(React.lazy(() => import('../../accounting/pages/Proformas')))}
    181 |         </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:190:5
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    188 |   // Settings
    189 |   {
  > 190 |     path: '/settings',
        |     ^^^^
    191 |     element: <React.Suspense fallback={<div>Loading...</div>}>
    192 |       {React.createElement(React.lazy(() => import('../../settings/pages/Settings')))}
    193 |     </React.Suspense>,

ERROR in src/modules/shared/services/AssetService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | interface Asset {

ERROR in src/modules/shared/services/AssetTrackingService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 | import { statusManagementService } from './StatusManagementService';
    4 |

ERROR in src/modules/shared/services/AssetTrackingService.ts:124:9
TS2554: Expected 4 arguments, but got 6.
    122 |         newStatus,
    123 |         `ASSET_${newStatus.toUpperCase()}`,
  > 124 |         reason,
        |         ^^^^^^^
  > 125 |         userId
        | ^^^^^^^^^^^^^^^
    126 |       );
    127 |
    128 |       await api.patch(`/assets/${id}`, {

ERROR in src/modules/shared/services/AuditService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | export enum AuditAction {

ERROR in src/modules/shared/services/DashboardService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | export enum DashboardType {

ERROR in src/modules/shared/services/DepartmentService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | interface Department {

ERROR in src/modules/shared/services/EmployeeService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 | import { EmployeeStatus } from '../types/EmployeeStatus';
    4 |

ERROR in src/modules/shared/services/EventService.ts:115:14
TS2551: Property 'STOCK_ITEM_CREATED' does not exist on type 'typeof EventType'. Did you mean 'STOCK_ITEM_UPDATED'?
    113 |   [EventType.ASSET_STATUS_CHANGED]: { assetId: string; oldStatus: AssetStatus; newStatus: AssetStatus };
    114 |
  > 115 |   [EventType.STOCK_ITEM_CREATED]: { itemId: string; name: string; category: string };
        |              ^^^^^^^^^^^^^^^^^^
    116 |   [EventType.STOCK_ITEM_UPDATED]: { itemId: string; changes: Partial<{ name: string; category: string }> };
    117 |   [EventType.STOCK_ITEM_DELETED]: { itemId: string };
    118 |   [EventType.STOCK_MOVEMENT_CREATED]: { movementId: string; itemId: string; quantity: number; type: 'in' | 'out' | 'transfer'; userId: string };

ERROR in src/modules/shared/services/ExpenseService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | interface Expense {

ERROR in src/modules/shared/services/ExpenseTrackingService.ts:52:22
TS18046: 'response.data' is of type 'unknown'.
    50 |     try {
    51 |       const response = await api.post('/expenses', data);
  > 52 |       const result = response.data.data;
       |                      ^^^^^^^^^^^^^
    53 |
    54 |       // Emit event for cross-module communication
    55 |       eventService.emit(EventType.EXPENSE_CREATED, {

ERROR in src/modules/shared/services/ExpenseTrackingService.ts:73:14
TS18046: 'response.data' is of type 'unknown'.
    71 |     try {
    72 |       const response = await api.patch(`/expenses/${id}`, data);
  > 73 |       return response.data.data;
       |              ^^^^^^^^^^^^^
    74 |     } catch (error) {
    75 |       console.error('Failed to update expense:', error);
    76 |       throw error;

ERROR in src/modules/shared/services/ExpenseTrackingService.ts:83:22
TS18046: 'response.data' is of type 'unknown'.
    81 |     try {
    82 |       const response = await api.post(`/expenses/${id}/approve`, { approvedBy });
  > 83 |       const result = response.data.data;
       |                      ^^^^^^^^^^^^^
    84 |
    85 |       // Emit event for cross-module communication
    86 |       eventService.emit(EventType.EXPENSE_APPROVED, {

ERROR in src/modules/shared/services/ExpenseTrackingService.ts:110:14
TS18046: 'response.data' is of type 'unknown'.
    108 |     try {
    109 |       const response = await api.get('/expenses', { params: filters });
  > 110 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    111 |     } catch (error) {
    112 |       console.error('Failed to fetch expenses:', error);
    113 |       throw error;

ERROR in src/modules/shared/services/ExpenseTrackingService.ts:121:14
TS18046: 'response.data' is of type 'unknown'.
    119 |     try {
    120 |       const response = await api.get('/expense-categories');
  > 121 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    122 |     } catch (error) {
    123 |       console.error('Failed to fetch expense categories:', error);
    124 |       throw error;

ERROR in src/modules/shared/services/ExpenseTrackingService.ts:131:14
TS18046: 'response.data' is of type 'unknown'.
    129 |     try {
    130 |       const response = await api.post('/expense-categories', data);
  > 131 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    132 |     } catch (error) {
    133 |       console.error('Failed to create expense category:', error);
    134 |       throw error;

ERROR in src/modules/shared/services/ImportExportService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | export enum ImportExportType {

ERROR in src/modules/shared/services/InvoiceService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | interface Invoice {

ERROR in src/modules/shared/services/LoggingService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | export enum LogLevel {

ERROR in src/modules/shared/services/PositionService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | interface Position {

ERROR in src/modules/shared/services/ReportService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | export enum ReportType {

ERROR in src/modules/shared/services/SecurityService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | interface SecurityEvent {

ERROR in src/modules/shared/services/SettingsService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | export enum SettingType {

ERROR in src/modules/shared/services/StatusManagementService.ts:115:5
TS2322: Type 'unknown' is not assignable to type 'StatusChangeRecord'.
    113 |       reasonCode
    114 |     });
  > 115 |     return response.data;
        |     ^^^^^^
    116 |   }
    117 |
    118 |   async getStatusHistory(

ERROR in src/modules/shared/services/StatusManagementService.ts:123:5
TS2322: Type 'unknown' is not assignable to type 'StatusChangeRecord[]'.
    121 |   ): Promise<StatusChangeRecord[]> {
    122 |     const response = await api.get(`/status/history/${entityType}/${entityId}`);
  > 123 |     return response.data;
        |     ^^^^^^
    124 |   }
    125 |
    126 |   async getStatusReasons(

ERROR in src/modules/shared/services/StatusManagementService.ts:130:5
TS2322: Type 'unknown' is not assignable to type 'StatusChangeReason[]'.
    128 |   ): Promise<StatusChangeReason[]> {
    129 |     const response = await api.get(`/status/reasons/${type}`);
  > 130 |     return response.data;
        |     ^^^^^^
    131 |   }
    132 |
    133 |   private async handleEmployeeStatusChange(data: { employeeId: string; newStatus: EmployeeStatus }): Promise<void> {

ERROR in src/modules/shared/services/StockService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | interface StockItem {

ERROR in src/modules/shared/services/SystemService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | interface SystemInfo {

ERROR in src/modules/shared/services/UserService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | interface User {

ERROR in src/modules/stock/pages/Dashboard.tsx:51:38
TS2554: Expected 0 arguments, but got 1.
    49 |         stockService.getAllInventoryItems(),
    50 |         stockService.getAllPurchaseOrders(),
  > 51 |         stockService.getAllMovements({ limit: 5 })
       |                                      ^^^^^^^^^^^^
    52 |       ]);
    53 |
    54 |       const lowStockItems = inventoryItems.filter(item => item.quantity <= item.minStockLevel);

ERROR in src/modules/stock/pages/Movements.tsx:99:38
TS2554: Expected 0 arguments, but got 1.
     97 |       setError(null);
     98 |       const [movementsData, itemsData] = await Promise.all([
  >  99 |         stockService.getAllMovements(filters),
        |                                      ^^^^^^^
    100 |         stockService.getAllInventoryItems(),
    101 |       ]);
    102 |       setMovements(movementsData);

ERROR in src/modules/stock/pages/Movements.tsx:126:26
TS2339: Property 'source' does not exist on type 'StockMovement'.
    124 |         quantity: movement.quantity,
    125 |         type: movement.type,
  > 126 |         source: movement.source || '',
        |                          ^^^^^^
    127 |         destination: movement.destination || '',
    128 |         notes: movement.notes || '',
    129 |       });

ERROR in src/modules/stock/pages/Movements.tsx:127:31
TS2339: Property 'destination' does not exist on type 'StockMovement'.
    125 |         type: movement.type,
    126 |         source: movement.source || '',
  > 127 |         destination: movement.destination || '',
        |                               ^^^^^^^^^^^
    128 |         notes: movement.notes || '',
    129 |       });
    130 |     } else {

ERROR in src/modules/stock/pages/Movements.tsx:203:60
TS2339: Property '_id' does not exist on type 'StockMovement'.
    201 |
    202 |       if (selectedMovement) {
  > 203 |         await stockService.updateMovement(selectedMovement._id, formData);
        |                                                            ^^^
    204 |         enqueueSnackbar('Movement updated successfully', { variant: 'success' });
    205 |       } else {
    206 |         await stockService.createMovement(formData);

ERROR in src/modules/stock/pages/Movements.tsx:226:28
TS2554: Expected 3 arguments, but got 1.
    224 |       setLoading(true);
    225 |       if (actionType === 'delete') {
  > 226 |         await stockService.deleteMovement(selectedMovement._id);
        |                            ^^^^^^^^^^^^^^
    227 |         enqueueSnackbar('Movement deleted successfully', { variant: 'success' });
    228 |       } else if (actionType === 'cancel') {
    229 |         await stockService.cancelMovement(selectedMovement._id);

ERROR in src/modules/stock/pages/Movements.tsx:226:60
TS2339: Property '_id' does not exist on type 'StockMovement'.
    224 |       setLoading(true);
    225 |       if (actionType === 'delete') {
  > 226 |         await stockService.deleteMovement(selectedMovement._id);
        |                                                            ^^^
    227 |         enqueueSnackbar('Movement deleted successfully', { variant: 'success' });
    228 |       } else if (actionType === 'cancel') {
    229 |         await stockService.cancelMovement(selectedMovement._id);

ERROR in src/modules/stock/pages/Movements.tsx:229:28
TS2554: Expected 3 arguments, but got 1.
    227 |         enqueueSnackbar('Movement deleted successfully', { variant: 'success' });
    228 |       } else if (actionType === 'cancel') {
  > 229 |         await stockService.cancelMovement(selectedMovement._id);
        |                            ^^^^^^^^^^^^^^
    230 |         enqueueSnackbar('Movement cancelled successfully', { variant: 'success' });
    231 |       }
    232 |       fetchData();

ERROR in src/modules/stock/pages/Movements.tsx:229:60
TS2339: Property '_id' does not exist on type 'StockMovement'.
    227 |         enqueueSnackbar('Movement deleted successfully', { variant: 'success' });
    228 |       } else if (actionType === 'cancel') {
  > 229 |         await stockService.cancelMovement(selectedMovement._id);
        |                                                            ^^^
    230 |         enqueueSnackbar('Movement cancelled successfully', { variant: 'success' });
    231 |       }
    232 |       fetchData();

ERROR in src/modules/stock/pages/Movements.tsx:342:39
TS2339: Property '_id' does not exist on type 'InventoryItem'.
    340 |                 <MenuItem value="">{t('common.all')}</MenuItem>
    341 |                 {inventoryItems.map((item) => (
  > 342 |                   <MenuItem key={item._id} value={item._id}>
        |                                       ^^^
    343 |                     {item.name}
    344 |                   </MenuItem>
    345 |                 ))}

ERROR in src/modules/stock/pages/Movements.tsx:342:56
TS2339: Property '_id' does not exist on type 'InventoryItem'.
    340 |                 <MenuItem value="">{t('common.all')}</MenuItem>
    341 |                 {inventoryItems.map((item) => (
  > 342 |                   <MenuItem key={item._id} value={item._id}>
        |                                                        ^^^
    343 |                     {item.name}
    344 |                   </MenuItem>
    345 |                 ))}

ERROR in src/modules/stock/pages/Movements.tsx:395:41
TS2339: Property '_id' does not exist on type 'StockMovement'.
    393 |             ) : (
    394 |               movements.map((movement) => (
  > 395 |                 <TableRow key={movement._id}>
        |                                         ^^^
    396 |                   <TableCell>{movement.reference}</TableCell>
    397 |                   <TableCell>
    398 |                     <Chip

ERROR in src/modules/stock/pages/Movements.tsx:406:55
TS2339: Property '_id' does not exist on type 'InventoryItem'.
    404 |                   <TableCell>{movement.quantity}</TableCell>
    405 |                   <TableCell>
  > 406 |                     {inventoryItems.find(item => item._id === movement.inventoryItem)?.name}
        |                                                       ^^^
    407 |                   </TableCell>
    408 |                   <TableCell>
    409 |                     <Chip

ERROR in src/modules/stock/pages/Movements.tsx:416:45
TS2339: Property 'name' does not exist on type 'string'.
    414 |                   </TableCell>
    415 |                   <TableCell>{format(new Date(movement.timestamp), 'dd/MM/yyyy HH:mm')}</TableCell>
  > 416 |                   <TableCell>{movement.user.name}</TableCell>
        |                                             ^^^^
    417 |                   <TableCell>
    418 |                     <Tooltip title={t('common.edit')}>
    419 |                       <IconButton

ERROR in src/modules/stock/pages/Movements.tsx:478:41
TS2339: Property '_id' does not exist on type 'InventoryItem'.
    476 |                 >
    477 |                   {inventoryItems.map((item) => (
  > 478 |                     <MenuItem key={item._id} value={item._id}>
        |                                         ^^^
    479 |                       {item.name}
    480 |                     </MenuItem>
    481 |                   ))}

ERROR in src/modules/stock/pages/Movements.tsx:478:58
TS2339: Property '_id' does not exist on type 'InventoryItem'.
    476 |                 >
    477 |                   {inventoryItems.map((item) => (
  > 478 |                     <MenuItem key={item._id} value={item._id}>
        |                                                          ^^^
    479 |                       {item.name}
    480 |                     </MenuItem>
    481 |                   ))}

ERROR in src/modules/stock/pages/PurchaseOrders.tsx:218:36
TS2339: Property '_id' does not exist on type 'PurchaseOrder'.
    216 |           <TableBody>
    217 |             {orders.map((order) => (
  > 218 |               <TableRow key={order._id}>
        |                                    ^^^
    219 |                 <TableCell>{order.reference}</TableCell>
    220 |                 <TableCell>
    221 |                   {suppliers.find(supplier => supplier._id === order.supplier)?.name}

ERROR in src/modules/stock/pages/PurchaseOrders.tsx:221:56
TS2339: Property '_id' does not exist on type 'Supplier'.
    219 |                 <TableCell>{order.reference}</TableCell>
    220 |                 <TableCell>
  > 221 |                   {suppliers.find(supplier => supplier._id === order.supplier)?.name}
        |                                                        ^^^
    222 |                 </TableCell>
    223 |                 <TableCell>
    224 |                   {new Intl.NumberFormat('en-US', {

ERROR in src/modules/stock/pages/PurchaseOrders.tsx:270:58
TS2339: Property '_id' does not exist on type 'Supplier'.
    268 |                   <Typography variant="subtitle2">{t('stock.purchaseOrders.supplier')}</Typography>
    269 |                   <Typography>
  > 270 |                     {suppliers.find(supplier => supplier._id === selectedOrder.supplier)?.name}
        |                                                          ^^^
    271 |                   </Typography>
    272 |                 </Grid>
    273 |                 <Grid item xs={12} md={6}>

ERROR in src/modules/stock/pages/PurchaseOrders.tsx:299:59
TS2339: Property '_id' does not exist on type 'InventoryItem'.
    297 |                           <TableRow key={index}>
    298 |                             <TableCell>
  > 299 |                               {inventoryItems.find(i => i._id === item.inventoryItem)?.name}
        |                                                           ^^^
    300 |                             </TableCell>
    301 |                             <TableCell align="right">{item.quantity}</TableCell>
    302 |                             <TableCell align="right">

ERROR in src/modules/stock/pages/PurchaseOrders.tsx:332:75
TS2339: Property '_id' does not exist on type 'PurchaseOrder'.
    330 |                       <Select
    331 |                         value={selectedOrder.status}
  > 332 |                         onChange={(e) => handleStatusUpdate(selectedOrder._id, e.target.value)}
        |                                                                           ^^^
    333 |                         label={t('stock.purchaseOrders.updateStatus')}
    334 |                       >
    335 |                         <MenuItem value="pending">{t('stock.purchaseOrders.status.pending')}</MenuItem>

ERROR in src/modules/stock/pages/PurchaseOrders.tsx:356:49
TS2339: Property '_id' does not exist on type 'Supplier'.
    354 |                     >
    355 |                       {suppliers.map((supplier) => (
  > 356 |                         <MenuItem key={supplier._id} value={supplier._id}>
        |                                                 ^^^
    357 |                           {supplier.name}
    358 |                         </MenuItem>
    359 |                       ))}

ERROR in src/modules/stock/pages/PurchaseOrders.tsx:356:70
TS2339: Property '_id' does not exist on type 'Supplier'.
    354 |                     >
    355 |                       {suppliers.map((supplier) => (
  > 356 |                         <MenuItem key={supplier._id} value={supplier._id}>
        |                                                                      ^^^
    357 |                           {supplier.name}
    358 |                         </MenuItem>
    359 |                       ))}

ERROR in src/modules/stock/pages/PurchaseOrders.tsx:395:54
TS2339: Property '_id' does not exist on type 'InventoryItem'.
    393 |                           >
    394 |                             {inventoryItems.map((invItem) => (
  > 395 |                               <MenuItem key={invItem._id} value={invItem._id}>
        |                                                      ^^^
    396 |                                 {invItem.name}
    397 |                               </MenuItem>
    398 |                             ))}

ERROR in src/modules/stock/pages/PurchaseOrders.tsx:395:74
TS2339: Property '_id' does not exist on type 'InventoryItem'.
    393 |                           >
    394 |                             {inventoryItems.map((invItem) => (
  > 395 |                               <MenuItem key={invItem._id} value={invItem._id}>
        |                                                                          ^^^
    396 |                                 {invItem.name}
    397 |                               </MenuItem>
    398 |                             ))}

ERROR in src/modules/stock/pages/StockList.tsx:128:44
TS2345: Argument of type 'AxiosXHR<unknown>' is not assignable to parameter of type 'ApiResponse<StockItem[]>'.
  Types of property 'data' are incompatible.
    Type 'unknown' is not assignable to type 'StockItem[]'.
    126 |       setLoading(true);
    127 |       const response = await api.get('/stock', { params: filters });
  > 128 |       setItems(getApiResponse<StockItem[]>(response));
        |                                            ^^^^^^^^
    129 |     } catch (error) {
    130 |       setError(handleApiError(error).message);
    131 |     } finally {

ERROR in src/modules/stock/pages/Suppliers.tsx:75:9
TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.
    73 |       setFormData({
    74 |         name: supplier.name,
  > 75 |         contactPerson: supplier.contactPerson,
       |         ^^^^^^^^^^^^^
    76 |         email: supplier.email,
    77 |         phone: supplier.phone,
    78 |         address: supplier.address,

ERROR in src/modules/stock/pages/Suppliers.tsx:76:9
TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.
    74 |         name: supplier.name,
    75 |         contactPerson: supplier.contactPerson,
  > 76 |         email: supplier.email,
       |         ^^^^^
    77 |         phone: supplier.phone,
    78 |         address: supplier.address,
    79 |         taxId: supplier.taxId || '',

ERROR in src/modules/stock/pages/Suppliers.tsx:77:9
TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.
    75 |         contactPerson: supplier.contactPerson,
    76 |         email: supplier.email,
  > 77 |         phone: supplier.phone,
       |         ^^^^^
    78 |         address: supplier.address,
    79 |         taxId: supplier.taxId || '',
    80 |       });

ERROR in src/modules/stock/pages/Suppliers.tsx:78:9
TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.
    76 |         email: supplier.email,
    77 |         phone: supplier.phone,
  > 78 |         address: supplier.address,
       |         ^^^^^^^
    79 |         taxId: supplier.taxId || '',
    80 |       });
    81 |     } else {

ERROR in src/modules/stock/pages/Suppliers.tsx:79:25
TS2339: Property 'taxId' does not exist on type 'Supplier'.
    77 |         phone: supplier.phone,
    78 |         address: supplier.address,
  > 79 |         taxId: supplier.taxId || '',
       |                         ^^^^^
    80 |       });
    81 |     } else {
    82 |       setEditingSupplier(null);

ERROR in src/modules/stock/pages/Suppliers.tsx:118:59
TS2339: Property '_id' does not exist on type 'Supplier'.
    116 |
    117 |       if (editingSupplier) {
  > 118 |         await stockService.updateSupplier(editingSupplier._id, formData);
        |                                                           ^^^
    119 |       } else {
    120 |         await stockService.createSupplier(formData);
    121 |       }

ERROR in src/modules/stock/pages/Suppliers.tsx:189:39
TS2339: Property '_id' does not exist on type 'Supplier'.
    187 |           <TableBody>
    188 |             {suppliers.map((supplier) => (
  > 189 |               <TableRow key={supplier._id}>
        |                                       ^^^
    190 |                 <TableCell>{supplier.name}</TableCell>
    191 |                 <TableCell>{supplier.contactPerson}</TableCell>
    192 |                 <TableCell>{supplier.email}</TableCell>

ERROR in src/modules/stock/pages/Suppliers.tsx:196:37
TS2339: Property 'status' does not exist on type 'Supplier'.
    194 |                 <TableCell>
    195 |                   <Chip
  > 196 |                     label={supplier.status === 'active' ? t('common.active') : t('common.inactive')}
        |                                     ^^^^^^
    197 |                     color={supplier.status === 'active' ? 'success' : 'error'}
    198 |                     size="small"
    199 |                   />

ERROR in src/modules/stock/pages/Suppliers.tsx:197:37
TS2339: Property 'status' does not exist on type 'Supplier'.
    195 |                   <Chip
    196 |                     label={supplier.status === 'active' ? t('common.active') : t('common.inactive')}
  > 197 |                     color={supplier.status === 'active' ? 'success' : 'error'}
        |                                     ^^^^^^
    198 |                     size="small"
    199 |                   />
    200 |                 </TableCell>

ERROR in src/modules/stock/pages/Suppliers.tsx:213:50
TS2339: Property 'status' does not exist on type 'Supplier'.
    211 |                           </IconButton>
    212 |                         </Tooltip>
  > 213 |                         <Tooltip title={supplier.status === 'active' ? t('common.deactivate') : t('common.activate')}>
        |                                                  ^^^^^^
    214 |                           <IconButton
    215 |                             size="small"
    216 |                             onClick={() => handleToggleStatus(supplier._id)}

ERROR in src/modules/stock/pages/Suppliers.tsx:216:72
TS2339: Property '_id' does not exist on type 'Supplier'.
    214 |                           <IconButton
    215 |                             size="small"
  > 216 |                             onClick={() => handleToggleStatus(supplier._id)}
        |                                                                        ^^^
    217 |                           >
    218 |                             {supplier.status === 'active' ? <BlockIcon /> : <CheckCircleIcon />}
    219 |                           </IconButton>

ERROR in src/modules/stock/pages/Suppliers.tsx:218:39
TS2339: Property 'status' does not exist on type 'Supplier'.
    216 |                             onClick={() => handleToggleStatus(supplier._id)}
    217 |                           >
  > 218 |                             {supplier.status === 'active' ? <BlockIcon /> : <CheckCircleIcon />}
        |                                       ^^^^^^
    219 |                           </IconButton>
    220 |                         </Tooltip>
    221 |                       </>

ERROR in src/pages/Contracts.tsx:38:10
TS2614: Module '"../utils/api"' has no exported member 'api'. Did you mean to use 'import api from "../utils/api"' instead?
    36 | import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';
    37 | import KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';
  > 38 | import { api } from '../utils/api';
       |          ^^^
    39 | import GradientButton from '../components/ui/GradientButton';
    40 | import {
    41 |   gradientText,

ERROR in src/pages/Inventory.tsx:40:10
TS2614: Module '"../utils/api"' has no exported member 'api'. Did you mean to use 'import api from "../utils/api"' instead?
    38 | import { useTranslation } from '../hooks/useTranslation';
    39 | import GradientButton from '../components/ui/GradientButton';
  > 40 | import { api } from '../utils/api';
       |          ^^^
    41 | import {
    42 |   gradientText,
    43 |   pageContainer,

ERROR in src/pages/Invoices.tsx:41:10
TS2614: Module '"../utils/api"' has no exported member 'api'. Did you mean to use 'import api from "../utils/api"' instead?
    39 | } from '@mui/icons-material';
    40 | import GradientButton from '../components/ui/GradientButton';
  > 41 | import { api } from '../utils/api';
       |          ^^^
    42 | import {
    43 |   gradientText,
    44 |   pageContainer,

ERROR in src/pages/Login.tsx:6:10
TS2305: Module '"../store/slices/authSlice"' has no exported member 'login'.
    4 | import { useTranslation } from 'react-i18next';
    5 | import { Box, Button, TextField, Typography, Paper } from '@mui/material';
  > 6 | import { login } from '../store/slices/authSlice';
      |          ^^^^^
    7 | import { authService } from '../services/authService';
    8 |
    9 | const Login: React.FC = () => {

ERROR in src/pages/Proforma.tsx:121:19
TS18046: 'response.data' is of type 'unknown'.
    119 |       setLoading(true);
    120 |       const response = await api.get('/proformas');
  > 121 |       setInvoices(response.data.data.proformaInvoices || []);
        |                   ^^^^^^^^^^^^^
    122 |     } catch (err) {
    123 |       setError(err instanceof Error ? err.message : 'Failed to fetch proforma invoices');
    124 |     } finally {

ERROR in src/pages/StockMovementList.tsx:31:125
TS2307: Cannot find module '../services/stockMovementService' or its corresponding type declarations.
    29 | import { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon, Cancel as CancelIcon } from '@mui/icons-material';
    30 | import { DatePicker } from '@mui/x-date-pickers';
  > 31 | import { stockMovementService, StockMovement, StockMovementFilters, StockMovementCreateData, StockMovementUpdateData } from '../services/stockMovementService';
       |                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    32 | import { useSnackbar } from 'notistack';
    33 | import { format } from 'date-fns';
    34 | import StockMovementForm from '../components/StockMovementForm';

ERROR in src/pages/StockMovementList.tsx:215:38
TS2339: Property 'status' does not exist on type 'StockMovementFilters'.
    213 |                     <InputLabel>Status</InputLabel>
    214 |                     <Select
  > 215 |                       value={filters.status || ''}
        |                                      ^^^^^^
    216 |                       onChange={(e) => handleFilterChange('status', e.target.value)}
    217 |                       label="Status"
    218 |                     >

ERROR in src/pages/StockMovementList.tsx:216:59
TS2345: Argument of type '"status"' is not assignable to parameter of type 'keyof StockMovementFilters'.
    214 |                     <Select
    215 |                       value={filters.status || ''}
  > 216 |                       onChange={(e) => handleFilterChange('status', e.target.value)}
        |                                                           ^^^^^^^^
    217 |                       label="Status"
    218 |                     >
    219 |                       <MenuItem value="">All</MenuItem>

ERROR in src/routes.tsx:27:8
TS2613: Module '"C:/Stock_HR/frontend/src/modules/hr/pages/Dashboard"' has no default export. Did you mean to use 'import { HRDashboard } from "C:/Stock_HR/frontend/src/modules/hr/pages/Dashboard"' instead?
    25 |
    26 | // HR Module
  > 27 | import HRDashboard from './modules/hr/pages/Dashboard';
       |        ^^^^^^^^^^^
    28 | import Employees from './modules/hr/pages/Employees';
    29 | import Departments from './modules/hr/pages/Departments';
    30 | import Positions from './modules/hr/pages/Positions';

ERROR in src/routes.tsx:37:22
TS2307: Cannot find module './modules/accounting/pages/Proforma' or its corresponding type declarations.
    35 | import AccountingDashboard from './modules/accounting/pages/Dashboard';
    36 | import Invoices from './modules/accounting/pages/Invoices';
  > 37 | import Proforma from './modules/accounting/pages/Proforma';
       |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    38 | import Contracts from './modules/accounting/pages/Contracts';
    39 | import JournalEntries from './modules/accounting/pages/JournalEntries';
    40 | import ChartOfAccounts from './modules/accounting/pages/ChartOfAccounts';

ERROR in src/routes.tsx:39:28
TS2307: Cannot find module './modules/accounting/pages/JournalEntries' or its corresponding type declarations.
    37 | import Proforma from './modules/accounting/pages/Proforma';
    38 | import Contracts from './modules/accounting/pages/Contracts';
  > 39 | import JournalEntries from './modules/accounting/pages/JournalEntries';
       |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    40 | import ChartOfAccounts from './modules/accounting/pages/ChartOfAccounts';
    41 | import FinancialStatements from './modules/accounting/pages/FinancialStatements';
    42 |

ERROR in src/routes.tsx:40:29
TS2307: Cannot find module './modules/accounting/pages/ChartOfAccounts' or its corresponding type declarations.
    38 | import Contracts from './modules/accounting/pages/Contracts';
    39 | import JournalEntries from './modules/accounting/pages/JournalEntries';
  > 40 | import ChartOfAccounts from './modules/accounting/pages/ChartOfAccounts';
       |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    41 | import FinancialStatements from './modules/accounting/pages/FinancialStatements';
    42 |
    43 | // Settings

ERROR in src/routes.tsx:41:33
TS2307: Cannot find module './modules/accounting/pages/FinancialStatements' or its corresponding type declarations.
    39 | import JournalEntries from './modules/accounting/pages/JournalEntries';
    40 | import ChartOfAccounts from './modules/accounting/pages/ChartOfAccounts';
  > 41 | import FinancialStatements from './modules/accounting/pages/FinancialStatements';
       |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    42 |
    43 | // Settings
    44 | import Settings from './pages/Settings';

ERROR in src/routes/index.tsx:11:23
TS2307: Cannot find module '../modules/stock/pages/Inventory' or its corresponding type declarations.
     9 | import Movements from '../modules/stock/pages/Movements';
    10 | import PurchaseOrders from '../modules/stock/pages/PurchaseOrders';
  > 11 | import Inventory from '../modules/stock/pages/Inventory';
       |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    12 | import Login from '../modules/auth/pages/Login';
    13 | import NotFound from '../modules/shared/pages/NotFound';
    14 |

ERROR in src/services/accountingService.ts:89:23
TS2339: Property 'CANCELLED' does not exist on type 'typeof InvoiceStatus'.
    87 |         'invoices',
    88 |         id,
  > 89 |         InvoiceStatus.CANCELLED,
       |                       ^^^^^^^^^
    90 |         'INVOICE_CANCELLED',
    91 |         reason,
    92 |         userId

ERROR in src/services/accountingService.ts:91:9
TS2554: Expected 4 arguments, but got 6.
    89 |         InvoiceStatus.CANCELLED,
    90 |         'INVOICE_CANCELLED',
  > 91 |         reason,
       |         ^^^^^^^
  > 92 |         userId
       | ^^^^^^^^^^^^^^^
    93 |       );
    94 |
    95 |       // Update the invoice in the database

ERROR in src/services/accountingService.ts:97:31
TS2339: Property 'CANCELLED' does not exist on type 'typeof InvoiceStatus'.
     95 |       // Update the invoice in the database
     96 |       await api.patch(`/accounting/invoices/${id}`, {
  >  97 |         status: InvoiceStatus.CANCELLED,
        |                               ^^^^^^^^^
     98 |         reason
     99 |       });
    100 |     } catch (error) {

ERROR in src/services/accountingService.ts:106:9
TS2393: Duplicate function implementation.
    104 |
    105 |   // Add method to handle invoice status changes
  > 106 |   async updateInvoiceStatus(
        |         ^^^^^^^^^^^^^^^^^^^
    107 |     id: string,
    108 |     newStatus: InvoiceStatus,
    109 |     reason: string,

ERROR in src/services/accountingService.ts:119:9
TS2554: Expected 4 arguments, but got 6.
    117 |         newStatus,
    118 |         `INVOICE_${newStatus.toUpperCase()}`,
  > 119 |         reason,
        |         ^^^^^^^
  > 120 |         userId
        | ^^^^^^^^^^^^^^^
    121 |       );
    122 |
    123 |       // Update the invoice in the database

ERROR in src/services/accountingService.ts:128:14
TS18046: 'response.data' is of type 'unknown'.
    126 |         reason
    127 |       });
  > 128 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    129 |     } catch (error) {
    130 |       this.handleError(error);
    131 |     }

ERROR in src/services/accountingService.ts:135:9
TS2393: Duplicate function implementation.
    133 |
    134 |   // Add method to handle invoice void
  > 135 |   async voidInvoice(
        |         ^^^^^^^^^^^
    136 |     id: string,
    137 |     reason: string,
    138 |     userId: string

ERROR in src/services/accountingService.ts:147:9
TS2554: Expected 4 arguments, but got 6.
    145 |         InvoiceStatus.VOID,
    146 |         'INVOICE_VOID',
  > 147 |         reason,
        |         ^^^^^^^
  > 148 |         userId
        | ^^^^^^^^^^^^^^^
    149 |       );
    150 |
    151 |       // Update the invoice in the database

ERROR in src/services/accountingService.ts:155:14
TS18046: 'response.data' is of type 'unknown'.
    153 |         reason
    154 |       });
  > 155 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    156 |     } catch (error) {
    157 |       this.handleError(error);
    158 |     }

ERROR in src/services/accountingService.ts:170:9
TS2554: Expected 4 arguments, but got 6.
    168 |         ExpenseStatus.REJECTED,
    169 |         'EXPENSE_REJECTED',
  > 170 |         reason,
        |         ^^^^^^^
  > 171 |         userId
        | ^^^^^^^^^^^^^^^
    172 |       );
    173 |
    174 |       // Update the expense in the database

ERROR in src/services/accountingService.ts:198:9
TS2554: Expected 4 arguments, but got 6.
    196 |         newStatus,
    197 |         `EXPENSE_${newStatus.toUpperCase()}`,
  > 198 |         reason,
        |         ^^^^^^^
  > 199 |         userId
        | ^^^^^^^^^^^^^^^
    200 |       );
    201 |
    202 |       // Update the expense in the database

ERROR in src/services/accountingService.ts:209:14
TS18046: 'response.data' is of type 'unknown'.
    207 |         [`${newStatus}At`]: new Date().toISOString()
    208 |       });
  > 209 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    210 |     } catch (error) {
    211 |       this.handleError(error);
    212 |     }

ERROR in src/services/accountingService.ts:221:14
TS18046: 'response.data' is of type 'unknown'.
    219 |         deletedBy: userId
    220 |       });
  > 221 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    222 |     } catch (error) {
    223 |       this.handleError(error);
    224 |     }

ERROR in src/services/accountingService.ts:231:14
TS18046: 'response.data' is of type 'unknown'.
    229 |     try {
    230 |       const response = await api.patch(`/accounting/expenses/${id}/restore`);
  > 231 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    232 |     } catch (error) {
    233 |       this.handleError(error);
    234 |     }

ERROR in src/services/accountingService.ts:248:14
TS18046: 'response.data' is of type 'unknown'.
    246 |     try {
    247 |       const response = await api.get('/accounting/expenses', { params: filters });
  > 248 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    249 |     } catch (error) {
    250 |       this.handleError(error);
    251 |     }

ERROR in src/services/accountingService.ts:264:20
TS2551: Property 'createExpense' does not exist on type 'AccountingService'. Did you mean 'restoreExpense'?
    262 |       if (data.type === 'out') {
    263 |         // Create an expense for outgoing stock
  > 264 |         await this.createExpense({
        |                    ^^^^^^^^^^^^^
    265 |           amount: data.quantity * data.unitPrice,
    266 |           category: 'stock',
    267 |           description: `Stock movement: ${data.movementId}`,

ERROR in src/services/accountingService.ts:289:18
TS2339: Property 'createAuditLog' does not exist on type 'AccountingService'.
    287 |     try {
    288 |       // Create audit log entry
  > 289 |       await this.createAuditLog(
        |                  ^^^^^^^^^^^^^^
    290 |         'invoices',
    291 |         id,
    292 |         'CANCELLED',

ERROR in src/services/accountingService.ts:306:9
TS2393: Duplicate function implementation.
    304 |   }
    305 |
  > 306 |   async updateInvoiceStatus(id: string, newStatus: string, reason: string, userId: string) {
        |         ^^^^^^^^^^^^^^^^^^^
    307 |     try {
    308 |       // Create audit log entry
    309 |       await this.createAuditLog(

ERROR in src/services/accountingService.ts:309:18
TS2339: Property 'createAuditLog' does not exist on type 'AccountingService'.
    307 |     try {
    308 |       // Create audit log entry
  > 309 |       await this.createAuditLog(
        |                  ^^^^^^^^^^^^^^
    310 |         'invoices',
    311 |         id,
    312 |         newStatus,

ERROR in src/services/accountingService.ts:326:9
TS2393: Duplicate function implementation.
    324 |   }
    325 |
  > 326 |   async voidInvoice(id: string, reason: string, userId: string) {
        |         ^^^^^^^^^^^
    327 |     try {
    328 |       // Create audit log entry
    329 |       await this.createAuditLog(

ERROR in src/services/accountingService.ts:329:18
TS2339: Property 'createAuditLog' does not exist on type 'AccountingService'.
    327 |     try {
    328 |       // Create audit log entry
  > 329 |       await this.createAuditLog(
        |                  ^^^^^^^^^^^^^^
    330 |         'invoices',
    331 |         id,
    332 |         'VOID',

ERROR in src/services/api.ts:15:7
TS18048: 'config.headers' is possibly 'undefined'.
    13 |     const token = localStorage.getItem('token');
    14 |     if (token) {
  > 15 |       config.headers.Authorization = `Bearer ${token}`;
       |       ^^^^^^^^^^^^^^
    16 |     }
    17 |     return config;
    18 |   },

ERROR in src/services/authService.ts:18:42
TS2345: Argument of type 'AxiosXHR<unknown>' is not assignable to parameter of type 'ApiResponse<UserProfile>'.
  Types of property 'data' are incompatible.
    Type 'unknown' is not assignable to type 'UserProfile'.
    16 |     try {
    17 |       const response = await api.post('/auth/login', credentials);
  > 18 |       return getApiResponse<UserProfile>(response);
       |                                          ^^^^^^^^
    19 |     } catch (error) {
    20 |       throw handleApiError(error);
    21 |     }

ERROR in src/services/authService.ts:27:42
TS2345: Argument of type 'AxiosXHR<unknown>' is not assignable to parameter of type 'ApiResponse<UserProfile>'.
  Types of property 'data' are incompatible.
    Type 'unknown' is not assignable to type 'UserProfile'.
    25 |     try {
    26 |       const response = await api.get('/auth/profile');
  > 27 |       return getApiResponse<UserProfile>(response);
       |                                          ^^^^^^^^
    28 |     } catch (error) {
    29 |       throw handleApiError(error);
    30 |     }

ERROR in src/services/contractService.ts:186:14
TS18046: 'response.data' is of type 'unknown'.
    184 |     try {
    185 |       const response = await api.post('/license/validate', data);
  > 186 |       return response.data.valid;
        |              ^^^^^^^^^^^^^
    187 |     } catch (error) {
    188 |       throw this.handleError(error);
    189 |     }

ERROR in src/services/hrService.ts:58:9
TS2554: Expected 4 arguments, but got 6.
    56 |         EmployeeStatus.TERMINATED,
    57 |         'EMPLOYEE_TERMINATED',
  > 58 |         reason,
       |         ^^^^^^^
  > 59 |         userId
       | ^^^^^^^^^^^^^^^
    60 |       );
    61 |
    62 |       // Update the employee in the database

ERROR in src/services/hrService.ts:73:9
TS2393: Duplicate function implementation.
    71 |
    72 |   // Add method to handle employee status changes
  > 73 |   async updateEmployeeStatus(
       |         ^^^^^^^^^^^^^^^^^^^^
    74 |     id: string,
    75 |     newStatus: EmployeeStatus,
    76 |     reason: string,

ERROR in src/services/hrService.ts:86:9
TS2554: Expected 4 arguments, but got 6.
    84 |         newStatus,
    85 |         `EMPLOYEE_${newStatus.toUpperCase()}`,
  > 86 |         reason,
       |         ^^^^^^^
  > 87 |         userId
       | ^^^^^^^^^^^^^^^
    88 |       );
    89 |
    90 |       // Update the employee in the database

ERROR in src/services/hrService.ts:95:14
TS18046: 'response.data' is of type 'unknown'.
    93 |         reason
    94 |       });
  > 95 |       return response.data.data;
       |              ^^^^^^^^^^^^^
    96 |     } catch (error) {
    97 |       this.handleError(error);
    98 |     }

ERROR in src/services/hrService.ts:102:9
TS2393: Duplicate function implementation.
    100 |
    101 |   // Add method to handle employee retirement
  > 102 |   async retireEmployee(
        |         ^^^^^^^^^^^^^^
    103 |     id: string,
    104 |     retirementDate: string,
    105 |     reason: string,

ERROR in src/services/hrService.ts:115:9
TS2554: Expected 4 arguments, but got 6.
    113 |         EmployeeStatus.RETIRED,
    114 |         'EMPLOYEE_RETIRED',
  > 115 |         reason,
        |         ^^^^^^^
  > 116 |         userId
        | ^^^^^^^^^^^^^^^
    117 |       );
    118 |
    119 |       // Update the employee in the database

ERROR in src/services/hrService.ts:125:14
TS18046: 'response.data' is of type 'unknown'.
    123 |         reason
    124 |       });
  > 125 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    126 |     } catch (error) {
    127 |       this.handleError(error);
    128 |     }

ERROR in src/services/hrService.ts:132:9
TS2393: Duplicate function implementation.
    130 |
    131 |   // Add method to handle employee suspension
  > 132 |   async suspendEmployee(
        |         ^^^^^^^^^^^^^^^
    133 |     id: string,
    134 |     suspensionStartDate: string,
    135 |     suspensionEndDate: string,

ERROR in src/services/hrService.ts:146:9
TS2554: Expected 4 arguments, but got 6.
    144 |         EmployeeStatus.SUSPENDED,
    145 |         'EMPLOYEE_SUSPENDED',
  > 146 |         reason,
        |         ^^^^^^^
  > 147 |         userId
        | ^^^^^^^^^^^^^^^
    148 |       );
    149 |
    150 |       // Update the employee in the database

ERROR in src/services/hrService.ts:157:14
TS18046: 'response.data' is of type 'unknown'.
    155 |         reason
    156 |       });
  > 157 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    158 |     } catch (error) {
    159 |       this.handleError(error);
    160 |     }

ERROR in src/services/hrService.ts:164:9
TS2393: Duplicate function implementation.
    162 |
    163 |   // Add method to handle employee death
  > 164 |   async markEmployeeDeceased(
        |         ^^^^^^^^^^^^^^^^^^^^
    165 |     id: string,
    166 |     dateOfDeath: string,
    167 |     reason: string,

ERROR in src/services/hrService.ts:177:9
TS2554: Expected 4 arguments, but got 6.
    175 |         EmployeeStatus.DECEASED,
    176 |         'EMPLOYEE_DECEASED',
  > 177 |         reason,
        |         ^^^^^^^
  > 178 |         userId
        | ^^^^^^^^^^^^^^^
    179 |       );
    180 |
    181 |       // Update the employee in the database

ERROR in src/services/hrService.ts:187:14
TS18046: 'response.data' is of type 'unknown'.
    185 |         reason
    186 |       });
  > 187 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    188 |     } catch (error) {
    189 |       this.handleError(error);
    190 |     }

ERROR in src/services/hrService.ts:221:18
TS2339: Property 'createAuditLog' does not exist on type 'HRService'.
    219 |     try {
    220 |       // Create audit log entry
  > 221 |       await this.createAuditLog(
        |                  ^^^^^^^^^^^^^^
    222 |         'employees',
    223 |         id,
    224 |         'TERMINATED',

ERROR in src/services/hrService.ts:238:9
TS2393: Duplicate function implementation.
    236 |   }
    237 |
  > 238 |   async updateEmployeeStatus(id: string, newStatus: string, reason: string, userId: string) {
        |         ^^^^^^^^^^^^^^^^^^^^
    239 |     try {
    240 |       // Create audit log entry
    241 |       await this.createAuditLog(

ERROR in src/services/hrService.ts:241:18
TS2339: Property 'createAuditLog' does not exist on type 'HRService'.
    239 |     try {
    240 |       // Create audit log entry
  > 241 |       await this.createAuditLog(
        |                  ^^^^^^^^^^^^^^
    242 |         'employees',
    243 |         id,
    244 |         newStatus,

ERROR in src/services/hrService.ts:258:9
TS2393: Duplicate function implementation.
    256 |   }
    257 |
  > 258 |   async retireEmployee(id: string, reason: string, userId: string) {
        |         ^^^^^^^^^^^^^^
    259 |     try {
    260 |       // Create audit log entry
    261 |       await this.createAuditLog(

ERROR in src/services/hrService.ts:261:18
TS2339: Property 'createAuditLog' does not exist on type 'HRService'.
    259 |     try {
    260 |       // Create audit log entry
  > 261 |       await this.createAuditLog(
        |                  ^^^^^^^^^^^^^^
    262 |         'employees',
    263 |         id,
    264 |         'RETIRED',

ERROR in src/services/hrService.ts:278:9
TS2393: Duplicate function implementation.
    276 |   }
    277 |
  > 278 |   async suspendEmployee(id: string, reason: string, userId: string) {
        |         ^^^^^^^^^^^^^^^
    279 |     try {
    280 |       // Create audit log entry
    281 |       await this.createAuditLog(

ERROR in src/services/hrService.ts:281:18
TS2339: Property 'createAuditLog' does not exist on type 'HRService'.
    279 |     try {
    280 |       // Create audit log entry
  > 281 |       await this.createAuditLog(
        |                  ^^^^^^^^^^^^^^
    282 |         'employees',
    283 |         id,
    284 |         'SUSPENDED',

ERROR in src/services/hrService.ts:298:9
TS2393: Duplicate function implementation.
    296 |   }
    297 |
  > 298 |   async markEmployeeDeceased(id: string, reason: string, userId: string) {
        |         ^^^^^^^^^^^^^^^^^^^^
    299 |     try {
    300 |       // Create audit log entry
    301 |       await this.createAuditLog(

ERROR in src/services/hrService.ts:301:18
TS2339: Property 'createAuditLog' does not exist on type 'HRService'.
    299 |     try {
    300 |       // Create audit log entry
  > 301 |       await this.createAuditLog(
        |                  ^^^^^^^^^^^^^^
    302 |         'employees',
    303 |         id,
    304 |         'DECEASED',

ERROR in src/services/messagingService.ts:72:20
TS18046: 'uploadResponse.data' is of type 'unknown'.
    70 |           }
    71 |         });
  > 72 |         imageUrl = uploadResponse.data.url;
       |                    ^^^^^^^^^^^^^^^^^^^
    73 |       }
    74 |
    75 |       const response = await api.post('/api/messages', {

ERROR in src/services/messagingService.ts:82:7
TS2322: Type 'unknown' is not assignable to type 'Message'.
    80 |       });
    81 |
  > 82 |       return response.data;
       |       ^^^^^^
    83 |     } catch (error) {
    84 |       console.error('Error sending message:', error);
    85 |       throw error;

ERROR in src/services/messagingService.ts:92:7
TS2322: Type 'unknown' is not assignable to type 'Message[]'.
    90 |     try {
    91 |       const response = await api.get('/api/messages');
  > 92 |       return response.data;
       |       ^^^^^^
    93 |     } catch (error) {
    94 |       console.error('Error fetching messages:', error);
    95 |       throw error;

ERROR in src/services/stockAccessTokenService.ts:34:38
TS2345: Argument of type 'unknown' is not assignable to parameter of type 'AccessToken'.
    32 |
    33 |       const token = response.data;
  > 34 |       this.tokens.set(inventoryItem, token);
       |                                      ^^^^^
    35 |       return token;
    36 |     } catch (error) {
    37 |       console.error('Failed to request access token:', error);

ERROR in src/services/stockAccessTokenService.ts:35:7
TS2322: Type 'unknown' is not assignable to type 'AccessToken | null'.
    33 |       const token = response.data;
    34 |       this.tokens.set(inventoryItem, token);
  > 35 |       return token;
       |       ^^^^^^
    36 |     } catch (error) {
    37 |       console.error('Failed to request access token:', error);
    38 |       return null;

ERROR in src/services/stockAccessTokenService.ts:46:43
TS2802: Type 'MapIterator<[string, AccessToken]>' can only be iterated through when using the '--downlevelIteration' flag or with a '--target' of 'es2015' or higher.
    44 |       await api.delete(`/stock/access-tokens/${token}`);
    45 |       // Find and remove the token from our map
  > 46 |       for (const [itemId, storedToken] of this.tokens.entries()) {
       |                                           ^^^^^^^^^^^^^^^^^^^^^
    47 |         if (storedToken.token === token) {
    48 |           this.tokens.delete(itemId);
    49 |           break;

ERROR in src/services/stockAccessTokenService.ts:61:43
TS2802: Type 'MapIterator<[string, AccessToken]>' can only be iterated through when using the '--downlevelIteration' flag or with a '--target' of 'es2015' or higher.
    59 |       await api.post(`/stock/access-tokens/${token}/cancel`);
    60 |       // Find and remove the token from our map
  > 61 |       for (const [itemId, storedToken] of this.tokens.entries()) {
       |                                           ^^^^^^^^^^^^^^^^^^^^^
    62 |         if (storedToken.token === token) {
    63 |           this.tokens.delete(itemId);
    64 |           break;

ERROR in src/services/stockService.ts:111:14
TS18046: 'response.data' is of type 'unknown'.
    109 |     try {
    110 |       const response = await api.get('/stock/categories');
  > 111 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    112 |     } catch (error) {
    113 |       this.handleError(error);
    114 |     }

ERROR in src/services/stockService.ts:120:14
TS18046: 'response.data' is of type 'unknown'.
    118 |     try {
    119 |       const response = await api.post('/stock/categories', data);
  > 120 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    121 |     } catch (error) {
    122 |       this.handleError(error);
    123 |     }

ERROR in src/services/stockService.ts:129:14
TS18046: 'response.data' is of type 'unknown'.
    127 |     try {
    128 |       const response = await api.patch(`/stock/categories/${id}`, data);
  > 129 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    130 |     } catch (error) {
    131 |       this.handleError(error);
    132 |     }

ERROR in src/services/stockService.ts:147:14
TS18046: 'response.data' is of type 'unknown'.
    145 |     try {
    146 |       const response = await api.get('/stock/suppliers');
  > 147 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    148 |     } catch (error) {
    149 |       this.handleError(error);
    150 |     }

ERROR in src/services/stockService.ts:163:14
TS18046: 'response.data' is of type 'unknown'.
    161 |     try {
    162 |       const response = await api.post('/stock/suppliers', data);
  > 163 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    164 |     } catch (error) {
    165 |       this.handleError(error);
    166 |     }

ERROR in src/services/stockService.ts:172:14
TS18046: 'response.data' is of type 'unknown'.
    170 |     try {
    171 |       const response = await api.patch(`/stock/suppliers/${id}`, data);
  > 172 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    173 |     } catch (error) {
    174 |       this.handleError(error);
    175 |     }

ERROR in src/services/stockService.ts:181:14
TS18046: 'response.data' is of type 'unknown'.
    179 |     try {
    180 |       const response = await api.patch(`/stock/suppliers/${id}/toggle-status`);
  > 181 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    182 |     } catch (error) {
    183 |       this.handleError(error);
    184 |     }

ERROR in src/services/stockService.ts:191:14
TS18046: 'response.data' is of type 'unknown'.
    189 |     try {
    190 |       const response = await api.get('/stock/movements');
  > 191 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    192 |     } catch (error) {
    193 |       this.handleError(error);
    194 |     }

ERROR in src/services/stockService.ts:200:14
TS18046: 'response.data' is of type 'unknown'.
    198 |     try {
    199 |       const response = await api.get(`/stock/movements/${id}`);
  > 200 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    201 |     } catch (error) {
    202 |       this.handleError(error);
    203 |     }

ERROR in src/services/stockService.ts:219:21
TS18046: 'response.data' is of type 'unknown'.
    217 |       });
    218 |
  > 219 |       const token = response.data.data;
        |                     ^^^^^^^^^^^^^
    220 |       this.activeTokens.set(inventoryItemId, token);
    221 |
    222 |       // Set up auto-expiration

ERROR in src/services/stockService.ts:252:20
TS2339: Property 'createExpense' does not exist on type 'StockService'.
    250 |       if (data.type === 'out') {
    251 |         // Create an expense for outgoing stock
  > 252 |         await this.createExpense({
        |                    ^^^^^^^^^^^^^
    253 |           amount: data.quantity * data.unitPrice,
    254 |           category: 'stock',
    255 |           description: `Stock movement: ${data.movementId}`,

ERROR in src/services/stockService.ts:253:40
TS2339: Property 'unitPrice' does not exist on type 'Omit<StockMovement, "user" | "status" | "id" | "timestamp">'.
    251 |         // Create an expense for outgoing stock
    252 |         await this.createExpense({
  > 253 |           amount: data.quantity * data.unitPrice,
        |                                        ^^^^^^^^^
    254 |           category: 'stock',
    255 |           description: `Stock movement: ${data.movementId}`,
    256 |         });

ERROR in src/services/stockService.ts:255:48
TS2339: Property 'movementId' does not exist on type 'Omit<StockMovement, "user" | "status" | "id" | "timestamp">'.
    253 |           amount: data.quantity * data.unitPrice,
    254 |           category: 'stock',
  > 255 |           description: `Stock movement: ${data.movementId}`,
        |                                                ^^^^^^^^^^
    256 |         });
    257 |       }
    258 |

ERROR in src/services/stockService.ts:269:14
TS18046: 'response.data' is of type 'unknown'.
    267 |     try {
    268 |       const response = await api.patch(`/stock/movements/${id}`, data);
  > 269 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    270 |     } catch (error) {
    271 |       this.handleError(error);
    272 |     }

ERROR in src/services/stockService.ts:278:9
TS2353: Object literal may only specify known properties, and 'data' does not exist in type 'AxiosXHRConfigBase<unknown>'.
    276 |     try {
    277 |       await api.delete(`/stock/movements/${id}`, {
  > 278 |         data: { reason, userId }
        |         ^^^^
    279 |       });
    280 |     } catch (error) {
    281 |       this.handleError(error);

ERROR in src/services/stockService.ts:291:14
TS18046: 'response.data' is of type 'unknown'.
    289 |         userId
    290 |       });
  > 291 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    292 |     } catch (error) {
    293 |       this.handleError(error);
    294 |     }

ERROR in src/services/stockService.ts:301:14
TS18046: 'response.data' is of type 'unknown'.
    299 |     try {
    300 |       const response = await api.get('/stock/purchase-orders');
  > 301 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    302 |     } catch (error) {
    303 |       this.handleError(error);
    304 |     }

ERROR in src/services/stockService.ts:310:14
TS18046: 'response.data' is of type 'unknown'.
    308 |     try {
    309 |       const response = await api.get(`/stock/purchase-orders/${id}`);
  > 310 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    311 |     } catch (error) {
    312 |       this.handleError(error);
    313 |     }

ERROR in src/services/stockService.ts:324:14
TS18046: 'response.data' is of type 'unknown'.
    322 |     try {
    323 |       const response = await api.post('/stock/purchase-orders', data);
  > 324 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    325 |     } catch (error) {
    326 |       this.handleError(error);
    327 |     }

ERROR in src/services/stockService.ts:342:21
TS18046: 'response.data' is of type 'unknown'.
    340 |       });
    341 |
  > 342 |       const token = response.data.data;
        |                     ^^^^^^^^^^^^^
    343 |       this.activePurchaseOrderTokens.set(purchaseOrderId, token);
    344 |
    345 |       // Set up auto-expiration

ERROR in src/services/stockService.ts:379:14
TS18046: 'response.data' is of type 'unknown'.
    377 |         receivedItems
    378 |       });
  > 379 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    380 |     } catch (error) {
    381 |       this.handleError(error);
    382 |     }

ERROR in src/services/stockService.ts:397:14
TS18046: 'response.data' is of type 'unknown'.
    395 |     try {
    396 |       const response = await api.get('/stock/inventory');
  > 397 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    398 |     } catch (error) {
    399 |       this.handleError(error);
    400 |     }

ERROR in src/services/stockService.ts:406:14
TS18046: 'response.data' is of type 'unknown'.
    404 |     try {
    405 |       const response = await api.get(`/stock/inventory/${id}`);
  > 406 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    407 |     } catch (error) {
    408 |       this.handleError(error);
    409 |     }

ERROR in src/services/stockService.ts:426:14
TS18046: 'response.data' is of type 'unknown'.
    424 |     try {
    425 |       const response = await api.post('/stock/inventory', data);
  > 426 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    427 |     } catch (error) {
    428 |       this.handleError(error);
    429 |     }

ERROR in src/services/stockService.ts:435:14
TS18046: 'response.data' is of type 'unknown'.
    433 |     try {
    434 |       const response = await api.patch(`/stock/inventory/${id}`, data);
  > 435 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    436 |     } catch (error) {
    437 |       this.handleError(error);
    438 |     }

ERROR in src/services/stockService.ts:461:14
TS18046: 'response.data' is of type 'unknown'.
    459 |         userId
    460 |       });
  > 461 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    462 |     } catch (error) {
    463 |       this.handleError(error);
    464 |     }

ERROR in src/services/userService.ts:39:14
TS18046: 'response.data' is of type 'unknown'.
    37 |         headers: this.getHeaders(),
    38 |       });
  > 39 |       return response.data.data.users;
       |              ^^^^^^^^^^^^^
    40 |     } catch (error) {
    41 |       throw this.handleError(error);
    42 |     }

ERROR in src/services/userService.ts:50:14
TS18046: 'response.data' is of type 'unknown'.
    48 |         headers: this.getHeaders(),
    49 |       });
  > 50 |       return response.data.data.user;
       |              ^^^^^^^^^^^^^
    51 |     } catch (error) {
    52 |       throw this.handleError(error);
    53 |     }

ERROR in src/services/userService.ts:61:14
TS18046: 'response.data' is of type 'unknown'.
    59 |         headers: this.getHeaders(),
    60 |       });
  > 61 |       return response.data.data.user;
       |              ^^^^^^^^^^^^^
    62 |     } catch (error) {
    63 |       throw this.handleError(error);
    64 |     }

ERROR in src/services/userService.ts:72:14
TS18046: 'response.data' is of type 'unknown'.
    70 |         headers: this.getHeaders(),
    71 |       });
  > 72 |       return response.data.data.user;
       |              ^^^^^^^^^^^^^
    73 |     } catch (error) {
    74 |       throw this.handleError(error);
    75 |     }

ERROR in src/services/userService.ts:93:14
TS18046: 'response.data' is of type 'unknown'.
    91 |         headers: this.getHeaders(),
    92 |       });
  > 93 |       return response.data.data.user;
       |              ^^^^^^^^^^^^^
    94 |     } catch (error) {
    95 |       throw this.handleError(error);
    96 |     }

ERROR in src/services/userService.ts:104:14
TS18046: 'response.data' is of type 'unknown'.
    102 |         headers: this.getHeaders(),
    103 |       });
  > 104 |       return response.data.data.user;
        |              ^^^^^^^^^^^^^
    105 |     } catch (error) {
    106 |       throw this.handleError(error);
    107 |     }

ERROR in src/utils/api.ts:5:24
TS2339: Property 'env' does not exist on type 'ImportMeta'.
    3 |
    4 | const api = axios.create({
  > 5 |   baseURL: import.meta.env.VITE_API_URL || 'http://localhost:3000/api',
      |                        ^^^
    6 |   headers: {
    7 |     'Content-Type': 'application/json',
    8 |   },

ERROR in src/utils/api.ts:16:7
TS18048: 'config.headers' is possibly 'undefined'.
    14 |     const token = localStorage.getItem('token');
    15 |     if (token) {
  > 16 |       config.headers.Authorization = `Bearer ${token}`;
       |       ^^^^^^^^^^^^^^
    17 |     }
    18 |     return config;
    19 |   },

ERROR in src/utils/api.ts:36:13
TS2339: Property 'isAxiosError' does not exist on type 'AxiosStatic'.
    34 |
    35 | export const handleApiError = (error: unknown): ErrorResponse => {
  > 36 |   if (axios.isAxiosError(error)) {
       |             ^^^^^^^^^^^^
    37 |     return {
    38 |       message: error.response?.data?.message || error.message,
    39 |       status: error.response?.status || 500,

ERROR in src/utils/api.ts:38:16
TS18046: 'error' is of type 'unknown'.
    36 |   if (axios.isAxiosError(error)) {
    37 |     return {
  > 38 |       message: error.response?.data?.message || error.message,
       |                ^^^^^
    39 |       status: error.response?.status || 500,
    40 |     };
    41 |   }

ERROR in src/utils/api.ts:38:49
TS18046: 'error' is of type 'unknown'.
    36 |   if (axios.isAxiosError(error)) {
    37 |     return {
  > 38 |       message: error.response?.data?.message || error.message,
       |                                                 ^^^^^
    39 |       status: error.response?.status || 500,
    40 |     };
    41 |   }

ERROR in src/utils/api.ts:39:15
TS18046: 'error' is of type 'unknown'.
    37 |     return {
    38 |       message: error.response?.data?.message || error.message,
  > 39 |       status: error.response?.status || 500,
       |               ^^^^^
    40 |     };
    41 |   }
    42 |   return {
Failed to compile.

Module not found: Error: Can't resolve './components/theme-provider' in 'C:\Stock_HR\frontend\src'
WARNING in [eslint]
src\App.tsx
  Line 2:50:  'Navigate' is defined but never used  @typescript-eslint/no-unused-vars

ERROR in ./src/App.tsx 8:0-60
Module not found: Error: Can't resolve './components/theme-provider' in 'C:\Stock_HR\frontend\src'

ERROR in ./src/App.tsx 9:0-50
Module not found: Error: Can't resolve './components/ui/toaster' in 'C:\Stock_HR\frontend\src'

ERROR in ./src/App.tsx 10:0-54
Module not found: Error: Can't resolve './contexts/AuthContext' in 'C:\Stock_HR\frontend\src'

ERROR in ./src/App.tsx 14:0-57
Module not found: Error: Can't resolve './modules/user/pages/UserList' in 'C:\Stock_HR\frontend\src'

ERROR in ./src/App.tsx 15:0-57
Module not found: Error: Can't resolve './modules/user/pages/UserForm' in 'C:\Stock_HR\frontend\src'

ERROR in ./src/App.tsx 17:0-60
Module not found: Error: Can't resolve './modules/stock/pages/StockForm' in 'C:\Stock_HR\frontend\src'

ERROR in ./src/App.tsx 18:0-64
Module not found: Error: Can't resolve './modules/analytics/pages/Analytics' in 'C:\Stock_HR\frontend\src'

ERROR in ./src/App.tsx 20:0-49
Module not found: Error: Can't resolve './components/NotFound' in 'C:\Stock_HR\frontend\src'

ERROR in ./src/App.tsx 33:44-49
export 'Login' (imported as 'Login') was not found in './modules/auth/pages/Login' (possible exports: default)

ERROR in ./src/App.tsx 45:47-56
export 'Dashboard' (imported as 'Dashboard') was not found in './modules/dashboard/pages/Dashboard' (possible exports: default)

ERROR in ./src/App.tsx 113:47-56
export 'StockList' (imported as 'StockList') was not found in './modules/stock/pages/StockList' (possible exports: default)

ERROR in ./src/App.tsx 181:47-55
export 'Settings' (imported as 'Settings') was not found in './modules/settings/pages/Settings' (possible exports: default)

ERROR in ./src/components/ui/card.tsx 5:0-33
Module not found: Error: Can't resolve '@/lib/utils' in 'C:\Stock_HR\frontend\src\components\ui'

webpack compiled with 13 errors and 1 warning
ERROR in src/App.tsx:5:31
TS2307: Cannot find module './components/theme-provider' or its corresponding type declarations.
    3 | import { Provider } from 'react-redux';
    4 | import { store } from './store';
  > 5 | import { ThemeProvider } from './components/theme-provider';
      |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    6 | import { Toaster } from './components/ui/toaster';
    7 | import { AuthProvider } from './contexts/AuthContext';
    8 | import { ProtectedRoute } from './components/ProtectedRoute';

ERROR in src/App.tsx:6:25
TS2307: Cannot find module './components/ui/toaster' or its corresponding type declarations.
    4 | import { store } from './store';
    5 | import { ThemeProvider } from './components/theme-provider';
  > 6 | import { Toaster } from './components/ui/toaster';
      |                         ^^^^^^^^^^^^^^^^^^^^^^^^^
    7 | import { AuthProvider } from './contexts/AuthContext';
    8 | import { ProtectedRoute } from './components/ProtectedRoute';
    9 | import { Dashboard } from './modules/dashboard/pages/Dashboard';

ERROR in src/App.tsx:7:30
TS2307: Cannot find module './contexts/AuthContext' or its corresponding type declarations.
     5 | import { ThemeProvider } from './components/theme-provider';
     6 | import { Toaster } from './components/ui/toaster';
  >  7 | import { AuthProvider } from './contexts/AuthContext';
       |                              ^^^^^^^^^^^^^^^^^^^^^^^^
     8 | import { ProtectedRoute } from './components/ProtectedRoute';
     9 | import { Dashboard } from './modules/dashboard/pages/Dashboard';
    10 | import { Login } from './modules/auth/pages/Login';

ERROR in src/App.tsx:9:10
TS2614: Module '"./modules/dashboard/pages/Dashboard"' has no exported member 'Dashboard'. Did you mean to use 'import Dashboard from "./modules/dashboard/pages/Dashboard"' instead?
     7 | import { AuthProvider } from './contexts/AuthContext';
     8 | import { ProtectedRoute } from './components/ProtectedRoute';
  >  9 | import { Dashboard } from './modules/dashboard/pages/Dashboard';
       |          ^^^^^^^^^
    10 | import { Login } from './modules/auth/pages/Login';
    11 | import { UserList } from './modules/user/pages/UserList';
    12 | import { UserForm } from './modules/user/pages/UserForm';

ERROR in src/App.tsx:10:10
TS2614: Module '"./modules/auth/pages/Login"' has no exported member 'Login'. Did you mean to use 'import Login from "./modules/auth/pages/Login"' instead?
     8 | import { ProtectedRoute } from './components/ProtectedRoute';
     9 | import { Dashboard } from './modules/dashboard/pages/Dashboard';
  > 10 | import { Login } from './modules/auth/pages/Login';
       |          ^^^^^
    11 | import { UserList } from './modules/user/pages/UserList';
    12 | import { UserForm } from './modules/user/pages/UserForm';
    13 | import { StockList } from './modules/stock/pages/StockList';

ERROR in src/App.tsx:11:26
TS2307: Cannot find module './modules/user/pages/UserList' or its corresponding type declarations.
     9 | import { Dashboard } from './modules/dashboard/pages/Dashboard';
    10 | import { Login } from './modules/auth/pages/Login';
  > 11 | import { UserList } from './modules/user/pages/UserList';
       |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    12 | import { UserForm } from './modules/user/pages/UserForm';
    13 | import { StockList } from './modules/stock/pages/StockList';
    14 | import { StockForm } from './modules/stock/pages/StockForm';

ERROR in src/App.tsx:12:26
TS2307: Cannot find module './modules/user/pages/UserForm' or its corresponding type declarations.
    10 | import { Login } from './modules/auth/pages/Login';
    11 | import { UserList } from './modules/user/pages/UserList';
  > 12 | import { UserForm } from './modules/user/pages/UserForm';
       |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    13 | import { StockList } from './modules/stock/pages/StockList';
    14 | import { StockForm } from './modules/stock/pages/StockForm';
    15 | import { Analytics } from './modules/analytics/pages/Analytics';

ERROR in src/App.tsx:13:10
TS2614: Module '"./modules/stock/pages/StockList"' has no exported member 'StockList'. Did you mean to use 'import StockList from "./modules/stock/pages/StockList"' instead?
    11 | import { UserList } from './modules/user/pages/UserList';
    12 | import { UserForm } from './modules/user/pages/UserForm';
  > 13 | import { StockList } from './modules/stock/pages/StockList';
       |          ^^^^^^^^^
    14 | import { StockForm } from './modules/stock/pages/StockForm';
    15 | import { Analytics } from './modules/analytics/pages/Analytics';
    16 | import { Settings } from './modules/settings/pages/Settings';

ERROR in src/App.tsx:14:27
TS2307: Cannot find module './modules/stock/pages/StockForm' or its corresponding type declarations.
    12 | import { UserForm } from './modules/user/pages/UserForm';
    13 | import { StockList } from './modules/stock/pages/StockList';
  > 14 | import { StockForm } from './modules/stock/pages/StockForm';
       |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    15 | import { Analytics } from './modules/analytics/pages/Analytics';
    16 | import { Settings } from './modules/settings/pages/Settings';
    17 | import { NotFound } from './components/NotFound';

ERROR in src/App.tsx:15:27
TS2307: Cannot find module './modules/analytics/pages/Analytics' or its corresponding type declarations.
    13 | import { StockList } from './modules/stock/pages/StockList';
    14 | import { StockForm } from './modules/stock/pages/StockForm';
  > 15 | import { Analytics } from './modules/analytics/pages/Analytics';
       |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    16 | import { Settings } from './modules/settings/pages/Settings';
    17 | import { NotFound } from './components/NotFound';
    18 |

ERROR in src/App.tsx:16:10
TS2614: Module '"./modules/settings/pages/Settings"' has no exported member 'Settings'. Did you mean to use 'import Settings from "./modules/settings/pages/Settings"' instead?
    14 | import { StockForm } from './modules/stock/pages/StockForm';
    15 | import { Analytics } from './modules/analytics/pages/Analytics';
  > 16 | import { Settings } from './modules/settings/pages/Settings';
       |          ^^^^^^^^
    17 | import { NotFound } from './components/NotFound';
    18 |
    19 | const App: React.FC = () => {

ERROR in src/App.tsx:17:26
TS2307: Cannot find module './components/NotFound' or its corresponding type declarations.
    15 | import { Analytics } from './modules/analytics/pages/Analytics';
    16 | import { Settings } from './modules/settings/pages/Settings';
  > 17 | import { NotFound } from './components/NotFound';
       |                          ^^^^^^^^^^^^^^^^^^^^^^^
    18 |
    19 | const App: React.FC = () => {
    20 |   return (

ERROR in src/components/Analytics/ProductivityDashboard.tsx:41:35
TS2352: Conversion of type 'UserProfile | null' to type 'ExtendedUserProfile' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Property 'username' is missing in type 'UserProfile' but required in type 'ExtendedUserProfile'.
    39 | export const ProductivityDashboard: React.FC = () => {
    40 |   const { user } = useSelector((state: RootState) => state.auth);
  > 41 |   const { kpis, gamification } = (user as ExtendedUserProfile)?.settings?.workspace?.analytics || {};
       |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    42 |
    43 |   const variants = {
    44 |     hidden: { opacity: 0, y: 20 },

ERROR in src/components/Analytics/ProductivityDashboard.tsx:80:30
TS2339: Property 'dailyTasks' does not exist on type '{ performance?: { skillMatrix?: any; } | undefined; }'.
    78 |                     </Typography>
    79 |                     <Typography variant="h4">
  > 80 |                       {kpis?.dailyTasks?.completed || 0}/{kpis?.dailyTasks?.total || 0}
       |                              ^^^^^^^^^^
    81 |                     </Typography>
    82 |                     {(kpis?.dailyTasks?.efficiency || 0) > 80 ? ( // Add fallback value
    83 |                       <TrendingUp color="success" />

ERROR in src/components/Analytics/ProductivityDashboard.tsx:80:65
TS2339: Property 'dailyTasks' does not exist on type '{ performance?: { skillMatrix?: any; } | undefined; }'.
    78 |                     </Typography>
    79 |                     <Typography variant="h4">
  > 80 |                       {kpis?.dailyTasks?.completed || 0}/{kpis?.dailyTasks?.total || 0}
       |                                                                 ^^^^^^^^^^
    81 |                     </Typography>
    82 |                     {(kpis?.dailyTasks?.efficiency || 0) > 80 ? ( // Add fallback value
    83 |                       <TrendingUp color="success" />

ERROR in src/components/Analytics/ProductivityDashboard.tsx:82:29
TS2339: Property 'dailyTasks' does not exist on type '{ performance?: { skillMatrix?: any; } | undefined; }'.
    80 |                       {kpis?.dailyTasks?.completed || 0}/{kpis?.dailyTasks?.total || 0}
    81 |                     </Typography>
  > 82 |                     {(kpis?.dailyTasks?.efficiency || 0) > 80 ? ( // Add fallback value
       |                             ^^^^^^^^^^
    83 |                       <TrendingUp color="success" />
    84 |                     ) : (
    85 |                       <TrendingDown color="error" />

ERROR in src/components/Analytics/SkillMatrix.tsx:55:24
TS2352: Conversion of type 'UserProfile | null' to type 'ExtendedUserProfile' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Property 'username' is missing in type 'UserProfile' but required in type 'ExtendedUserProfile'.
    53 | export const SkillMatrix: React.FC = () => {
    54 |   const { user } = useSelector((state: RootState) => state.auth);
  > 55 |   const skillMatrix = (user as ExtendedUserProfile)?.settings?.workspace?.analytics?.kpis?.performance?.skillMatrix;
       |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    56 |
    57 |   const radarData = skillMatrix?.technical.map((skill: Skill) => ({
    58 |     skill: skill.skill,

ERROR in src/components/Collaboration/TeamSpace.tsx:10:23
TS2339: Property 'settings' does not exist on type 'UserProfile'.
     8 | export const TeamSpace: React.FC = () => {
     9 |   const { user } = useSelector((state: RootState) => state.auth);
  > 10 |   const teams = user?.settings?.workspace?.collaboration?.teams || [];
       |                       ^^^^^^^^
    11 |
    12 |   return (
    13 |     <AnimatePresence>

ERROR in src/components/common/GlobalSearch.tsx:60:8
TS2786: 'Popper' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<PopperProps & RefAttributes<HTMLDivElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<PopperProps & RefAttributes<HTMLDivElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    58 |       </motion.div>
    59 |
  > 60 |       <Popper
       |        ^^^^^^
    61 |         open={Boolean(results.length)}
    62 |         anchorEl={anchorEl}
    63 |         transition

ERROR in src/components/NewLayout.tsx:67:31
TS2786: 'LayoutDashboard' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    65 |
    66 | const menuItems = [
  > 67 |   { text: 'dashboard', icon: <LayoutDashboard size={20} />, path: '/dashboard', roles: ['admin', 'superadmin', 'manager', 'inventory_clerk'] },
       |                               ^^^^^^^^^^^^^^^
    68 |   { text: 'inventory', icon: <Package size={20} />, path: '/inventory', roles: ['admin', 'superadmin', 'inventory_clerk'] },
    69 |   { text: 'contracts', icon: <FileText size={20} />, path: '/contracts', roles: ['superadmin'] },
    70 |   { text: 'invoices', icon: <Receipt size={20} />, path: '/invoices', roles: ['admin', 'superadmin', 'manager'] },

ERROR in src/components/NewLayout.tsx:68:31
TS2786: 'Package' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    66 | const menuItems = [
    67 |   { text: 'dashboard', icon: <LayoutDashboard size={20} />, path: '/dashboard', roles: ['admin', 'superadmin', 'manager', 'inventory_clerk'] },
  > 68 |   { text: 'inventory', icon: <Package size={20} />, path: '/inventory', roles: ['admin', 'superadmin', 'inventory_clerk'] },
       |                               ^^^^^^^
    69 |   { text: 'contracts', icon: <FileText size={20} />, path: '/contracts', roles: ['superadmin'] },
    70 |   { text: 'invoices', icon: <Receipt size={20} />, path: '/invoices', roles: ['admin', 'superadmin', 'manager'] },
    71 |   { text: 'proforma', icon: <FileSpreadsheet size={20} />, path: '/proforma-invoices', roles: ['admin', 'superadmin', 'manager'] },

ERROR in src/components/NewLayout.tsx:69:31
TS2786: 'FileText' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    67 |   { text: 'dashboard', icon: <LayoutDashboard size={20} />, path: '/dashboard', roles: ['admin', 'superadmin', 'manager', 'inventory_clerk'] },
    68 |   { text: 'inventory', icon: <Package size={20} />, path: '/inventory', roles: ['admin', 'superadmin', 'inventory_clerk'] },
  > 69 |   { text: 'contracts', icon: <FileText size={20} />, path: '/contracts', roles: ['superadmin'] },
       |                               ^^^^^^^^
    70 |   { text: 'invoices', icon: <Receipt size={20} />, path: '/invoices', roles: ['admin', 'superadmin', 'manager'] },
    71 |   { text: 'proforma', icon: <FileSpreadsheet size={20} />, path: '/proforma-invoices', roles: ['admin', 'superadmin', 'manager'] },
    72 |   { text: 'users', icon: <Users size={20} />, path: '/users', roles: ['admin', 'superadmin'] },

ERROR in src/components/NewLayout.tsx:70:30
TS2786: 'Receipt' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    68 |   { text: 'inventory', icon: <Package size={20} />, path: '/inventory', roles: ['admin', 'superadmin', 'inventory_clerk'] },
    69 |   { text: 'contracts', icon: <FileText size={20} />, path: '/contracts', roles: ['superadmin'] },
  > 70 |   { text: 'invoices', icon: <Receipt size={20} />, path: '/invoices', roles: ['admin', 'superadmin', 'manager'] },
       |                              ^^^^^^^
    71 |   { text: 'proforma', icon: <FileSpreadsheet size={20} />, path: '/proforma-invoices', roles: ['admin', 'superadmin', 'manager'] },
    72 |   { text: 'users', icon: <Users size={20} />, path: '/users', roles: ['admin', 'superadmin'] },
    73 |   { text: 'settings', icon: <Settings size={20} />, path: '/settings', roles: ['admin', 'superadmin'] },

ERROR in src/components/NewLayout.tsx:71:30
TS2786: 'FileSpreadsheet' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    69 |   { text: 'contracts', icon: <FileText size={20} />, path: '/contracts', roles: ['superadmin'] },
    70 |   { text: 'invoices', icon: <Receipt size={20} />, path: '/invoices', roles: ['admin', 'superadmin', 'manager'] },
  > 71 |   { text: 'proforma', icon: <FileSpreadsheet size={20} />, path: '/proforma-invoices', roles: ['admin', 'superadmin', 'manager'] },
       |                              ^^^^^^^^^^^^^^^
    72 |   { text: 'users', icon: <Users size={20} />, path: '/users', roles: ['admin', 'superadmin'] },
    73 |   { text: 'settings', icon: <Settings size={20} />, path: '/settings', roles: ['admin', 'superadmin'] },
    74 | ];

ERROR in src/components/NewLayout.tsx:72:27
TS2786: 'Users' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    70 |   { text: 'invoices', icon: <Receipt size={20} />, path: '/invoices', roles: ['admin', 'superadmin', 'manager'] },
    71 |   { text: 'proforma', icon: <FileSpreadsheet size={20} />, path: '/proforma-invoices', roles: ['admin', 'superadmin', 'manager'] },
  > 72 |   { text: 'users', icon: <Users size={20} />, path: '/users', roles: ['admin', 'superadmin'] },
       |                           ^^^^^
    73 |   { text: 'settings', icon: <Settings size={20} />, path: '/settings', roles: ['admin', 'superadmin'] },
    74 | ];
    75 |

ERROR in src/components/NewLayout.tsx:73:30
TS2786: 'Settings' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    71 |   { text: 'proforma', icon: <FileSpreadsheet size={20} />, path: '/proforma-invoices', roles: ['admin', 'superadmin', 'manager'] },
    72 |   { text: 'users', icon: <Users size={20} />, path: '/users', roles: ['admin', 'superadmin'] },
  > 73 |   { text: 'settings', icon: <Settings size={20} />, path: '/settings', roles: ['admin', 'superadmin'] },
       |                              ^^^^^^^^
    74 | ];
    75 |
    76 | const NewLayout = () => {

ERROR in src/components/NewLayout.tsx:160:10
TS2322: Type '{ children: Element; side: "left"; className: string; }' is not assignable to type 'IntrinsicAttributes & SheetContentProps & RefAttributes<HTMLDivElement>'.
  Property 'children' does not exist on type 'IntrinsicAttributes & SheetContentProps & RefAttributes<HTMLDivElement>'.
    158 |       {/* Mobile Sidebar */}
    159 |       <Sheet open={mobileOpen} onOpenChange={setMobileOpen}>
  > 160 |         <SheetContent side="left" className="w-[240px] p-0">
        |          ^^^^^^^^^^^^
    161 |           <div className="flex h-full flex-col">
    162 |             <div className="flex h-14 items-center justify-between px-4">
    163 |               <h1 className="text-lg font-semibold">Stock HR</h1>

ERROR in src/components/NewLayout.tsx:165:18
TS2786: 'X' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    163 |               <h1 className="text-lg font-semibold">Stock HR</h1>
    164 |               <SheetClose>
  > 165 |                 <X size={20} />
        |                  ^
    166 |               </SheetClose>
    167 |             </div>
    168 |             <Separator />

ERROR in src/components/NewLayout.tsx:169:14
TS2322: Type '{ children: Element; className: string; }' is not assignable to type 'IntrinsicAttributes & RefAttributes<never>'.
  Property 'children' does not exist on type 'IntrinsicAttributes & RefAttributes<never>'.
    167 |             </div>
    168 |             <Separator />
  > 169 |             <ScrollArea className="flex-1">
        |              ^^^^^^^^^^
    170 |               <div className="flex flex-col gap-1 p-4">
    171 |                 {renderMenuItems()}
    172 |               </div>

ERROR in src/components/NewLayout.tsx:191:29
TS2786: 'ChevronRight' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    189 |             onClick={handleDrawerToggle}
    190 |           >
  > 191 |             {isCollapsed ? <ChevronRight size={20} /> : <ChevronLeft size={20} />}
        |                             ^^^^^^^^^^^^
    192 |           </Button>
    193 |         </div>
    194 |         <Separator />

ERROR in src/components/NewLayout.tsx:191:58
TS2786: 'ChevronLeft' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    189 |             onClick={handleDrawerToggle}
    190 |           >
  > 191 |             {isCollapsed ? <ChevronRight size={20} /> : <ChevronLeft size={20} />}
        |                                                          ^^^^^^^^^^^
    192 |           </Button>
    193 |         </div>
    194 |         <Separator />

ERROR in src/components/NewLayout.tsx:195:10
TS2322: Type '{ children: Element; className: string; }' is not assignable to type 'IntrinsicAttributes & RefAttributes<never>'.
  Property 'children' does not exist on type 'IntrinsicAttributes & RefAttributes<never>'.
    193 |         </div>
    194 |         <Separator />
  > 195 |         <ScrollArea className="flex-1">
        |          ^^^^^^^^^^
    196 |           <div className="flex flex-col gap-1 p-4">
    197 |             {renderMenuItems()}
    198 |           </div>

ERROR in src/components/NewLayout.tsx:213:18
TS2786: 'Menu' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    211 |                 onClick={() => setMobileOpen(true)}
    212 |               >
  > 213 |                 <Menu size={20} />
        |                  ^^^^
    214 |               </Button>
    215 |             )}
    216 |           </div>

ERROR in src/components/NewLayout.tsx:224:45
TS2786: 'Moon' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    222 |               onClick={handleThemeToggle}
    223 |             >
  > 224 |               {settings.theme === 'dark' ? <Moon size={20} /> : <Sun size={20} />}
        |                                             ^^^^
    225 |             </Button>
    226 |
    227 |             <DropdownMenu>

ERROR in src/components/NewLayout.tsx:224:66
TS2786: 'Sun' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    222 |               onClick={handleThemeToggle}
    223 |             >
  > 224 |               {settings.theme === 'dark' ? <Moon size={20} /> : <Sun size={20} />}
        |                                                                  ^^^
    225 |             </Button>
    226 |
    227 |             <DropdownMenu>

ERROR in src/components/NewLayout.tsx:228:36
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    226 |
    227 |             <DropdownMenu>
  > 228 |               <DropdownMenuTrigger asChild>
        |                                    ^^^^^^^
    229 |                 <Button variant="ghost" size="icon">
    230 |                   <Languages size={20} />
    231 |                 </Button>

ERROR in src/components/NewLayout.tsx:230:20
TS2786: 'Languages' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    228 |               <DropdownMenuTrigger asChild>
    229 |                 <Button variant="ghost" size="icon">
  > 230 |                   <Languages size={20} />
        |                    ^^^^^^^^^
    231 |                 </Button>
    232 |               </DropdownMenuTrigger>
    233 |               <DropdownMenuContent align="end">

ERROR in src/components/NewLayout.tsx:233:36
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    231 |                 </Button>
    232 |               </DropdownMenuTrigger>
  > 233 |               <DropdownMenuContent align="end">
        |                                    ^^^^^
    234 |                 {languages.map((lang) => (
    235 |                   <DropdownMenuItem
    236 |                     key={lang.code}

ERROR in src/components/NewLayout.tsx:246:36
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    244 |
    245 |             <DropdownMenu>
  > 246 |               <DropdownMenuTrigger asChild>
        |                                    ^^^^^^^
    247 |                 <Button variant="ghost" size="icon" className="relative">
    248 |                   <Bell size={20} />
    249 |                   <Badge className="absolute -right-1 -top-1">3</Badge>

ERROR in src/components/NewLayout.tsx:248:20
TS2786: 'Bell' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    246 |               <DropdownMenuTrigger asChild>
    247 |                 <Button variant="ghost" size="icon" className="relative">
  > 248 |                   <Bell size={20} />
        |                    ^^^^
    249 |                   <Badge className="absolute -right-1 -top-1">3</Badge>
    250 |                 </Button>
    251 |               </DropdownMenuTrigger>

ERROR in src/components/NewLayout.tsx:252:36
TS2322: Type '{ children: Element[]; align: string; className: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    250 |                 </Button>
    251 |               </DropdownMenuTrigger>
  > 252 |               <DropdownMenuContent align="end" className="w-80">
        |                                    ^^^^^
    253 |                 <DropdownMenuLabel>Notifications</DropdownMenuLabel>
    254 |                 <DropdownMenuSeparator />
    255 |                 {/* Add notification items here */}

ERROR in src/components/NewLayout.tsx:253:18
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
    251 |               </DropdownMenuTrigger>
    252 |               <DropdownMenuContent align="end" className="w-80">
  > 253 |                 <DropdownMenuLabel>Notifications</DropdownMenuLabel>
        |                  ^^^^^^^^^^^^^^^^^
    254 |                 <DropdownMenuSeparator />
    255 |                 {/* Add notification items here */}
    256 |               </DropdownMenuContent>

ERROR in src/components/NewLayout.tsx:260:36
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    258 |
    259 |             <DropdownMenu>
  > 260 |               <DropdownMenuTrigger asChild>
        |                                    ^^^^^^^
    261 |                 <Button variant="ghost" className="gap-2">
    262 |                   <Avatar className="h-8 w-8">
    263 |                     <AvatarImage src={user?.avatar} />

ERROR in src/components/NewLayout.tsx:263:45
TS2339: Property 'avatar' does not exist on type 'UserProfile'.
    261 |                 <Button variant="ghost" className="gap-2">
    262 |                   <Avatar className="h-8 w-8">
  > 263 |                     <AvatarImage src={user?.avatar} />
        |                                             ^^^^^^
    264 |                     <AvatarFallback>{user?.name?.[0]}</AvatarFallback>
    265 |                   </Avatar>
    266 |                   {!isMobile && <span>{user?.name}</span>}

ERROR in src/components/NewLayout.tsx:264:44
TS2339: Property 'name' does not exist on type 'UserProfile'.
    262 |                   <Avatar className="h-8 w-8">
    263 |                     <AvatarImage src={user?.avatar} />
  > 264 |                     <AvatarFallback>{user?.name?.[0]}</AvatarFallback>
        |                                            ^^^^
    265 |                   </Avatar>
    266 |                   {!isMobile && <span>{user?.name}</span>}
    267 |                 </Button>

ERROR in src/components/NewLayout.tsx:266:46
TS2339: Property 'name' does not exist on type 'UserProfile'.
    264 |                     <AvatarFallback>{user?.name?.[0]}</AvatarFallback>
    265 |                   </Avatar>
  > 266 |                   {!isMobile && <span>{user?.name}</span>}
        |                                              ^^^^
    267 |                 </Button>
    268 |               </DropdownMenuTrigger>
    269 |               <DropdownMenuContent align="end">

ERROR in src/components/NewLayout.tsx:269:36
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    267 |                 </Button>
    268 |               </DropdownMenuTrigger>
  > 269 |               <DropdownMenuContent align="end">
        |                                    ^^^^^
    270 |                 <DropdownMenuLabel>My Account</DropdownMenuLabel>
    271 |                 <DropdownMenuSeparator />
    272 |                 <DropdownMenuItem onClick={() => handleNavigation('/profile')}>

ERROR in src/components/NewLayout.tsx:270:18
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
    268 |               </DropdownMenuTrigger>
    269 |               <DropdownMenuContent align="end">
  > 270 |                 <DropdownMenuLabel>My Account</DropdownMenuLabel>
        |                  ^^^^^^^^^^^^^^^^^
    271 |                 <DropdownMenuSeparator />
    272 |                 <DropdownMenuItem onClick={() => handleNavigation('/profile')}>
    273 |                   <User className="mr-2 h-4 w-4" />

ERROR in src/components/NewLayout.tsx:273:20
TS2786: 'User' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    271 |                 <DropdownMenuSeparator />
    272 |                 <DropdownMenuItem onClick={() => handleNavigation('/profile')}>
  > 273 |                   <User className="mr-2 h-4 w-4" />
        |                    ^^^^
    274 |                   Profile
    275 |                 </DropdownMenuItem>
    276 |                 <DropdownMenuItem onClick={() => handleNavigation('/settings')}>

ERROR in src/components/NewLayout.tsx:277:20
TS2786: 'Settings' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    275 |                 </DropdownMenuItem>
    276 |                 <DropdownMenuItem onClick={() => handleNavigation('/settings')}>
  > 277 |                   <Settings className="mr-2 h-4 w-4" />
        |                    ^^^^^^^^
    278 |                   Settings
    279 |                 </DropdownMenuItem>
    280 |                 <DropdownMenuSeparator />

ERROR in src/components/NewLayout.tsx:282:20
TS2786: 'LogOut' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    280 |                 <DropdownMenuSeparator />
    281 |                 <DropdownMenuItem onClick={handleLogout}>
  > 282 |                   <LogOut className="mr-2 h-4 w-4" />
        |                    ^^^^^^
    283 |                   Logout
    284 |                 </DropdownMenuItem>
    285 |               </DropdownMenuContent>

ERROR in src/components/RouteGuard.tsx:18:49
TS2551: Property 'roles' does not exist on type 'UserProfile'. Did you mean 'role'?
    16 |   }
    17 |
  > 18 |   if (!user || !requiredRoles.some(role => user.roles.includes(role))) {
       |                                                 ^^^^^
    19 |     return <Navigate to="/unauthorized" state={{ from: location }} replace />;
    20 |   }
    21 |

ERROR in src/components/Settings.tsx:2:27
TS2307: Cannot find module '../hooks/useBackup' or its corresponding type declarations.
    1 | import React, { useState } from 'react';
  > 2 | import { useBackup } from '../hooks/useBackup';
      |                           ^^^^^^^^^^^^^^^^^^^^
    3 | import { useAuth } from '../hooks/useAuth';
    4 | import { Box, Typography, TextField, Switch, FormControlLabel, Button, Alert, List, ListItem, ListItemText, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, Divider } from '@mui/material';
    5 | import { FolderOpen, Backup, Restore, Delete } from '@mui/icons-material';

ERROR in src/components/Settings.tsx:40:17
TS2339: Property 'canceled' does not exist on type 'string[]'.
    38 |     });
    39 |
  > 40 |     if (!result.canceled && result.filePaths[0]) {
       |                 ^^^^^^^^
    41 |       setLocalConfig(prev => ({ ...prev, backupPath: result.filePaths[0] }));
    42 |     }
    43 |   };

ERROR in src/components/Settings.tsx:40:36
TS2339: Property 'filePaths' does not exist on type 'string[]'.
    38 |     });
    39 |
  > 40 |     if (!result.canceled && result.filePaths[0]) {
       |                                    ^^^^^^^^^
    41 |       setLocalConfig(prev => ({ ...prev, backupPath: result.filePaths[0] }));
    42 |     }
    43 |   };

ERROR in src/components/Settings.tsx:41:22
TS7006: Parameter 'prev' implicitly has an 'any' type.
    39 |
    40 |     if (!result.canceled && result.filePaths[0]) {
  > 41 |       setLocalConfig(prev => ({ ...prev, backupPath: result.filePaths[0] }));
       |                      ^^^^
    42 |     }
    43 |   };
    44 |

ERROR in src/components/Settings.tsx:41:61
TS2339: Property 'filePaths' does not exist on type 'string[]'.
    39 |
    40 |     if (!result.canceled && result.filePaths[0]) {
  > 41 |       setLocalConfig(prev => ({ ...prev, backupPath: result.filePaths[0] }));
       |                                                             ^^^^^^^^^
    42 |     }
    43 |   };
    44 |

ERROR in src/components/Settings.tsx:79:17
TS2367: This comparison appears to be unintentional because the types 'UserRole' and '"SuperAdmin"' have no overlap.
    77 |   };
    78 |
  > 79 |   if (!user || (user.role !== 'SuperAdmin' && user.role !== 'Admin')) {
       |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    80 |     return (
    81 |       <Box sx={{ p: 3 }}>
    82 |         <Alert severity="error">You don't have permission to access this page.</Alert>

ERROR in src/components/Settings.tsx:79:47
TS2367: This comparison appears to be unintentional because the types 'UserRole' and '"Admin"' have no overlap.
    77 |   };
    78 |
  > 79 |   if (!user || (user.role !== 'SuperAdmin' && user.role !== 'Admin')) {
       |                                               ^^^^^^^^^^^^^^^^^^^^^
    80 |     return (
    81 |       <Box sx={{ p: 3 }}>
    82 |         <Alert severity="error">You don't have permission to access this page.</Alert>

ERROR in src/components/Settings.tsx:108:43
TS7006: Parameter 'prev' implicitly has an 'any' type.
    106 |           label="Backup Path"
    107 |           value={localConfig.backupPath}
  > 108 |           onChange={(e) => setLocalConfig(prev => ({ ...prev, backupPath: e.target.value }))}
        |                                           ^^^^
    109 |           disabled={isLoading}
    110 |         />
    111 |         <Button

ERROR in src/components/Settings.tsx:125:45
TS7006: Parameter 'prev' implicitly has an 'any' type.
    123 |           <Switch
    124 |             checked={localConfig.enableEncryption}
  > 125 |             onChange={(e) => setLocalConfig(prev => ({ ...prev, enableEncryption: e.target.checked }))}
        |                                             ^^^^
    126 |             disabled={isLoading}
    127 |           />
    128 |         }

ERROR in src/components/Settings.tsx:138:43
TS7006: Parameter 'prev' implicitly has an 'any' type.
    136 |           label="Encryption Password"
    137 |           value={localConfig.encryptionPassword || ''}
  > 138 |           onChange={(e) => setLocalConfig(prev => ({ ...prev, encryptionPassword: e.target.value }))}
        |                                           ^^^^
    139 |           disabled={isLoading}
    140 |           sx={{ mt: 2 }}
    141 |         />

ERROR in src/components/Settings.tsx:149:41
TS7006: Parameter 'prev' implicitly has an 'any' type.
    147 |         label="Retention Days"
    148 |         value={localConfig.retentionDays}
  > 149 |         onChange={(e) => setLocalConfig(prev => ({ ...prev, retentionDays: parseInt(e.target.value) || 7 }))}
        |                                         ^^^^
    150 |         disabled={isLoading}
    151 |         sx={{ mt: 2 }}
    152 |       />

ERROR in src/components/StockMovementForm.tsx:13:81
TS2307: Cannot find module '../services/stockMovementService' or its corresponding type declarations.
    11 | } from '@mui/material';
    12 | import { DatePicker } from '@mui/x-date-pickers';
  > 13 | import { StockMovement, StockMovementCreateData, StockMovementUpdateData } from '../services/stockMovementService';
       |                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    14 | import { inventoryService } from '../services/inventoryService';
    15 |
    16 | interface StockMovementFormProps {

ERROR in src/components/StockMovementForm.tsx:14:34
TS2306: File 'C:/Stock_HR/frontend/src/services/inventoryService.ts' is not a module.
    12 | import { DatePicker } from '@mui/x-date-pickers';
    13 | import { StockMovement, StockMovementCreateData, StockMovementUpdateData } from '../services/stockMovementService';
  > 14 | import { inventoryService } from '../services/inventoryService';
       |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    15 |
    16 | interface StockMovementFormProps {
    17 |   movement?: StockMovement;

ERROR in src/components/ui/data-table-pagination.tsx:6:8
TS2307: Cannot find module '@radix-ui/react-icons' or its corresponding type declarations.
    4 |   DoubleArrowLeftIcon,
    5 |   DoubleArrowRightIcon,
  > 6 | } from "@radix-ui/react-icons"
      |        ^^^^^^^^^^^^^^^^^^^^^^^
    7 | import { Table } from "@tanstack/react-table"
    8 |
    9 | import { Button } from "@/components/ui/button"

ERROR in src/components/ui/data-table-pagination.tsx:12:3
TS2305: Module '"@/components/ui/select"' has no exported member 'SelectContent'.
    10 | import {
    11 |   Select,
  > 12 |   SelectContent,
       |   ^^^^^^^^^^^^^
    13 |   SelectItem,
    14 |   SelectTrigger,
    15 |   SelectValue,

ERROR in src/components/ui/data-table-pagination.tsx:13:3
TS2305: Module '"@/components/ui/select"' has no exported member 'SelectItem'.
    11 |   Select,
    12 |   SelectContent,
  > 13 |   SelectItem,
       |   ^^^^^^^^^^
    14 |   SelectTrigger,
    15 |   SelectValue,
    16 | } from "@/components/ui/select"

ERROR in src/components/ui/data-table-pagination.tsx:14:3
TS2305: Module '"@/components/ui/select"' has no exported member 'SelectTrigger'.
    12 |   SelectContent,
    13 |   SelectItem,
  > 14 |   SelectTrigger,
       |   ^^^^^^^^^^^^^
    15 |   SelectValue,
    16 | } from "@/components/ui/select"
    17 |

ERROR in src/components/ui/data-table-pagination.tsx:15:3
TS2305: Module '"@/components/ui/select"' has no exported member 'SelectValue'.
    13 |   SelectItem,
    14 |   SelectTrigger,
  > 15 |   SelectValue,
       |   ^^^^^^^^^^^
    16 | } from "@/components/ui/select"
    17 |
    18 | interface DataTablePaginationProps<TData> {

ERROR in src/components/ui/data-table-pagination.tsx:36:13
TS2322: Type '{ children: Element[]; value: string; onValueChange: (value: any) => void; }' is not assignable to type 'IntrinsicAttributes & SelectProps & RefAttributes<HTMLSelectElement>'.
  Property 'onValueChange' does not exist on type 'IntrinsicAttributes & SelectProps & RefAttributes<HTMLSelectElement>'. Did you mean 'onVolumeChange'?
    34 |           <Select
    35 |             value={`${table.getState().pagination.pageSize}`}
  > 36 |             onValueChange={(value) => {
       |             ^^^^^^^^^^^^^
    37 |               table.setPageSize(Number(value))
    38 |             }}
    39 |           >

ERROR in src/components/ui/data-table-pagination.tsx:36:29
TS7006: Parameter 'value' implicitly has an 'any' type.
    34 |           <Select
    35 |             value={`${table.getState().pagination.pageSize}`}
  > 36 |             onValueChange={(value) => {
       |                             ^^^^^
    37 |               table.setPageSize(Number(value))
    38 |             }}
    39 |           >

ERROR in src/components/ui/data-table-toolbar.tsx:8:3
TS2305: Module '"@/components/ui/select"' has no exported member 'SelectContent'.
     6 | import {
     7 |   Select,
  >  8 |   SelectContent,
       |   ^^^^^^^^^^^^^
     9 |   SelectItem,
    10 |   SelectTrigger,
    11 |   SelectValue,

ERROR in src/components/ui/data-table-toolbar.tsx:9:3
TS2305: Module '"@/components/ui/select"' has no exported member 'SelectItem'.
     7 |   Select,
     8 |   SelectContent,
  >  9 |   SelectItem,
       |   ^^^^^^^^^^
    10 |   SelectTrigger,
    11 |   SelectValue,
    12 | } from "@/components/ui/select"

ERROR in src/components/ui/data-table-toolbar.tsx:10:3
TS2305: Module '"@/components/ui/select"' has no exported member 'SelectTrigger'.
     8 |   SelectContent,
     9 |   SelectItem,
  > 10 |   SelectTrigger,
       |   ^^^^^^^^^^^^^
    11 |   SelectValue,
    12 | } from "@/components/ui/select"
    13 |

ERROR in src/components/ui/data-table-toolbar.tsx:11:3
TS2305: Module '"@/components/ui/select"' has no exported member 'SelectValue'.
     9 |   SelectItem,
    10 |   SelectTrigger,
  > 11 |   SelectValue,
       |   ^^^^^^^^^^^
    12 | } from "@/components/ui/select"
    13 |
    14 | interface DataTableToolbarProps<TData> {

ERROR in src/components/ui/data-table-toolbar.tsx:37:13
TS2322: Type '{ children: Element[]; value: string; onValueChange: (value: any) => void | undefined; }' is not assignable to type 'IntrinsicAttributes & SelectProps & RefAttributes<HTMLSelectElement>'.
  Property 'onValueChange' does not exist on type 'IntrinsicAttributes & SelectProps & RefAttributes<HTMLSelectElement>'. Did you mean 'onVolumeChange'?
    35 |           <Select
    36 |             value={(table.getColumn("status")?.getFilterValue() as string) ?? ""}
  > 37 |             onValueChange={(value) =>
       |             ^^^^^^^^^^^^^
    38 |               table.getColumn("status")?.setFilterValue(value)
    39 |             }
    40 |           >

ERROR in src/components/ui/data-table-toolbar.tsx:37:29
TS7006: Parameter 'value' implicitly has an 'any' type.
    35 |           <Select
    36 |             value={(table.getColumn("status")?.getFilterValue() as string) ?? ""}
  > 37 |             onValueChange={(value) =>
       |                             ^^^^^
    38 |               table.getColumn("status")?.setFilterValue(value)
    39 |             }
    40 |           >

ERROR in src/components/ui/data-table-toolbar.tsx:59:14
TS2786: 'X' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    57 |           >
    58 |             Reset
  > 59 |             <X className="ml-2 h-4 w-4" />
       |              ^
    60 |           </Button>
    61 |         )}
    62 |       </div>

ERROR in src/components/ui/data-table.tsx:95:23
TS2322: Type 'string | number | bigint | boolean | Iterable<ReactNode> | Promise<AwaitedReactNode> | Element | null | undefined' is not assignable to type 'ReactNode'.
  Type 'bigint' is not assignable to type 'ReactNode'.
     93 |                   return (
     94 |                     <TableHead key={header.id} colSpan={header.colSpan}>
  >  95 |                       {header.isPlaceholder
        |                       ^^^^^^^^^^^^^^^^^^^^^
  >  96 |                         ? null
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  >  97 |                         : flexRender(
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  >  98 |                             header.column.columnDef.header,
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  >  99 |                             header.getContext()
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 100 |                           )}
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    101 |                     </TableHead>
    102 |                   )
    103 |                 })}

ERROR in src/components/ui/data-table.tsx:116:23
TS2322: Type 'ReactNode | Element' is not assignable to type 'ReactNode'.
  Type 'bigint' is not assignable to type 'ReactNode'.
    114 |                   {row.getVisibleCells().map((cell) => (
    115 |                     <TableCell key={cell.id}>
  > 116 |                       {flexRender(
        |                       ^^^^^^^^^^^^
  > 117 |                         cell.column.columnDef.cell,
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 118 |                         cell.getContext()
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 119 |                       )}
        | ^^^^^^^^^^^^^^^^^^^^^^^^^
    120 |                     </TableCell>
    121 |                   ))}
    122 |                 </TableRow>

ERROR in src/components/ui/dropdown-menu.tsx:40:20
TS2344: Type 'ForwardRefExoticComponent<DropdownMenuSubTriggerProps & RefAttributes<HTMLDivElement>>' does not satisfy the constraint 'keyof IntrinsicElements | ForwardRefExoticComponent<any> | (new (props: any) => Component<any, {}, any>) | ((props: any, deprecatedLegacyContext?: any) => ReactNode)'.
  Type 'ForwardRefExoticComponent<DropdownMenuSubTriggerProps & RefAttributes<HTMLDivElement>>' is not assignable to type 'ForwardRefExoticComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    38 |
    39 | const DropdownMenuSubTrigger = React.forwardRef<
  > 40 |   React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,
       |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    41 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {
    42 |     inset?: boolean
    43 |   }

ERROR in src/components/ui/dropdown-menu.tsx:41:34
TS2344: Type 'ForwardRefExoticComponent<DropdownMenuSubTriggerProps & RefAttributes<HTMLDivElement>>' does not satisfy the constraint 'ElementType<any, keyof IntrinsicElements>'.
  Type 'ForwardRefExoticComponent<DropdownMenuSubTriggerProps & RefAttributes<HTMLDivElement>>' is not assignable to type 'FunctionComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    39 | const DropdownMenuSubTrigger = React.forwardRef<
    40 |   React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,
  > 41 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {
       |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    42 |     inset?: boolean
    43 |   }
    44 | >(({ className, inset, children, ...props }, ref) => (

ERROR in src/components/ui/dropdown-menu.tsx:44:6
TS2339: Property 'className' does not exist on type '{ inset?: boolean | undefined; }'.
    42 |     inset?: boolean
    43 |   }
  > 44 | >(({ className, inset, children, ...props }, ref) => (
       |      ^^^^^^^^^
    45 |   <DropdownMenuPrimitive.SubTrigger
    46 |     ref={ref}
    47 |     className={cn(

ERROR in src/components/ui/dropdown-menu.tsx:44:24
TS2339: Property 'children' does not exist on type '{ inset?: boolean | undefined; }'.
    42 |     inset?: boolean
    43 |   }
  > 44 | >(({ className, inset, children, ...props }, ref) => (
       |                        ^^^^^^^^
    45 |   <DropdownMenuPrimitive.SubTrigger
    46 |     ref={ref}
    47 |     className={cn(

ERROR in src/components/ui/dropdown-menu.tsx:45:4
TS2786: 'DropdownMenuPrimitive.SubTrigger' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<DropdownMenuSubTriggerProps & RefAttributes<HTMLDivElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<DropdownMenuSubTriggerProps & RefAttributes<HTMLDivElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    43 |   }
    44 | >(({ className, inset, children, ...props }, ref) => (
  > 45 |   <DropdownMenuPrimitive.SubTrigger
       |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    46 |     ref={ref}
    47 |     className={cn(
    48 |       "flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent",

ERROR in src/components/ui/dropdown-menu.tsx:55:6
TS2786: 'ChevronRight' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    53 |   >
    54 |     {children}
  > 55 |     <ChevronRight className="ml-auto h-4 w-4" />
       |      ^^^^^^^^^^^^
    56 |   </DropdownMenuPrimitive.SubTrigger>
    57 | ))
    58 | DropdownMenuSubTrigger.displayName =

ERROR in src/components/ui/dropdown-menu.tsx:62:20
TS2344: Type 'ForwardRefExoticComponent<DropdownMenuSubContentProps & RefAttributes<HTMLDivElement>>' does not satisfy the constraint 'keyof IntrinsicElements | ForwardRefExoticComponent<any> | (new (props: any) => Component<any, {}, any>) | ((props: any, deprecatedLegacyContext?: any) => ReactNode)'.
  Type 'ForwardRefExoticComponent<DropdownMenuSubContentProps & RefAttributes<HTMLDivElement>>' is not assignable to type 'ForwardRefExoticComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    60 |
    61 | const DropdownMenuSubContent = React.forwardRef<
  > 62 |   React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,
       |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    63 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>
    64 | >(({ className, ...props }, ref) => (
    65 |   <DropdownMenuPrimitive.SubContent

ERROR in src/components/ui/dropdown-menu.tsx:63:34
TS2344: Type 'ForwardRefExoticComponent<DropdownMenuSubContentProps & RefAttributes<HTMLDivElement>>' does not satisfy the constraint 'ElementType<any, keyof IntrinsicElements>'.
  Type 'ForwardRefExoticComponent<DropdownMenuSubContentProps & RefAttributes<HTMLDivElement>>' is not assignable to type 'FunctionComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    61 | const DropdownMenuSubContent = React.forwardRef<
    62 |   React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,
  > 63 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>
       |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    64 | >(({ className, ...props }, ref) => (
    65 |   <DropdownMenuPrimitive.SubContent
    66 |     ref={ref}

ERROR in src/components/ui/dropdown-menu.tsx:64:6
TS2339: Property 'className' does not exist on type '{}'.
    62 |   React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,
    63 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>
  > 64 | >(({ className, ...props }, ref) => (
       |      ^^^^^^^^^
    65 |   <DropdownMenuPrimitive.SubContent
    66 |     ref={ref}
    67 |     className={cn(

ERROR in src/components/ui/dropdown-menu.tsx:65:4
TS2786: 'DropdownMenuPrimitive.SubContent' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<DropdownMenuSubContentProps & RefAttributes<HTMLDivElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<DropdownMenuSubContentProps & RefAttributes<HTMLDivElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    63 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>
    64 | >(({ className, ...props }, ref) => (
  > 65 |   <DropdownMenuPrimitive.SubContent
       |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    66 |     ref={ref}
    67 |     className={cn(
    68 |       "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",

ERROR in src/components/ui/dropdown-menu.tsx:108:20
TS2344: Type 'ForwardRefExoticComponent<DropdownMenuCheckboxItemProps & RefAttributes<HTMLDivElement>>' does not satisfy the constraint 'keyof IntrinsicElements | ForwardRefExoticComponent<any> | (new (props: any) => Component<any, {}, any>) | ((props: any, deprecatedLegacyContext?: any) => ReactNode)'.
  Type 'ForwardRefExoticComponent<DropdownMenuCheckboxItemProps & RefAttributes<HTMLDivElement>>' is not assignable to type 'ForwardRefExoticComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    106 |
    107 | const DropdownMenuCheckboxItem = React.forwardRef<
  > 108 |   React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,
        |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    109 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>
    110 | >(({ className, children, checked, ...props }, ref) => (
    111 |   <DropdownMenuPrimitive.CheckboxItem

ERROR in src/components/ui/dropdown-menu.tsx:109:34
TS2344: Type 'ForwardRefExoticComponent<DropdownMenuCheckboxItemProps & RefAttributes<HTMLDivElement>>' does not satisfy the constraint 'ElementType<any, keyof IntrinsicElements>'.
  Type 'ForwardRefExoticComponent<DropdownMenuCheckboxItemProps & RefAttributes<HTMLDivElement>>' is not assignable to type 'FunctionComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    107 | const DropdownMenuCheckboxItem = React.forwardRef<
    108 |   React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,
  > 109 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>
        |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    110 | >(({ className, children, checked, ...props }, ref) => (
    111 |   <DropdownMenuPrimitive.CheckboxItem
    112 |     ref={ref}

ERROR in src/components/ui/dropdown-menu.tsx:110:6
TS2339: Property 'className' does not exist on type '{}'.
    108 |   React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,
    109 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>
  > 110 | >(({ className, children, checked, ...props }, ref) => (
        |      ^^^^^^^^^
    111 |   <DropdownMenuPrimitive.CheckboxItem
    112 |     ref={ref}
    113 |     className={cn(

ERROR in src/components/ui/dropdown-menu.tsx:110:17
TS2339: Property 'children' does not exist on type '{}'.
    108 |   React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,
    109 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>
  > 110 | >(({ className, children, checked, ...props }, ref) => (
        |                 ^^^^^^^^
    111 |   <DropdownMenuPrimitive.CheckboxItem
    112 |     ref={ref}
    113 |     className={cn(

ERROR in src/components/ui/dropdown-menu.tsx:110:27
TS2339: Property 'checked' does not exist on type '{}'.
    108 |   React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,
    109 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>
  > 110 | >(({ className, children, checked, ...props }, ref) => (
        |                           ^^^^^^^
    111 |   <DropdownMenuPrimitive.CheckboxItem
    112 |     ref={ref}
    113 |     className={cn(

ERROR in src/components/ui/dropdown-menu.tsx:111:4
TS2786: 'DropdownMenuPrimitive.CheckboxItem' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<DropdownMenuCheckboxItemProps & RefAttributes<HTMLDivElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<DropdownMenuCheckboxItemProps & RefAttributes<HTMLDivElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    109 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>
    110 | >(({ className, children, checked, ...props }, ref) => (
  > 111 |   <DropdownMenuPrimitive.CheckboxItem
        |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    112 |     ref={ref}
    113 |     className={cn(
    114 |       "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",

ERROR in src/components/ui/dropdown-menu.tsx:121:8
TS2786: 'DropdownMenuPrimitive.ItemIndicator' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<DropdownMenuItemIndicatorProps & RefAttributes<HTMLSpanElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<DropdownMenuItemIndicatorProps & RefAttributes<HTMLSpanElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    119 |   >
    120 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
  > 121 |       <DropdownMenuPrimitive.ItemIndicator>
        |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    122 |         <Check className="h-4 w-4" />
    123 |       </DropdownMenuPrimitive.ItemIndicator>
    124 |     </span>

ERROR in src/components/ui/dropdown-menu.tsx:122:10
TS2786: 'Check' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    120 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
    121 |       <DropdownMenuPrimitive.ItemIndicator>
  > 122 |         <Check className="h-4 w-4" />
        |          ^^^^^
    123 |       </DropdownMenuPrimitive.ItemIndicator>
    124 |     </span>
    125 |     {children}

ERROR in src/components/ui/dropdown-menu.tsx:132:20
TS2344: Type 'ForwardRefExoticComponent<DropdownMenuRadioItemProps & RefAttributes<HTMLDivElement>>' does not satisfy the constraint 'keyof IntrinsicElements | ForwardRefExoticComponent<any> | (new (props: any) => Component<any, {}, any>) | ((props: any, deprecatedLegacyContext?: any) => ReactNode)'.
  Type 'ForwardRefExoticComponent<DropdownMenuRadioItemProps & RefAttributes<HTMLDivElement>>' is not assignable to type 'ForwardRefExoticComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    130 |
    131 | const DropdownMenuRadioItem = React.forwardRef<
  > 132 |   React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,
        |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    133 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>
    134 | >(({ className, children, ...props }, ref) => (
    135 |   <DropdownMenuPrimitive.RadioItem

ERROR in src/components/ui/dropdown-menu.tsx:133:34
TS2344: Type 'ForwardRefExoticComponent<DropdownMenuRadioItemProps & RefAttributes<HTMLDivElement>>' does not satisfy the constraint 'ElementType<any, keyof IntrinsicElements>'.
  Type 'ForwardRefExoticComponent<DropdownMenuRadioItemProps & RefAttributes<HTMLDivElement>>' is not assignable to type 'FunctionComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    131 | const DropdownMenuRadioItem = React.forwardRef<
    132 |   React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,
  > 133 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>
        |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    134 | >(({ className, children, ...props }, ref) => (
    135 |   <DropdownMenuPrimitive.RadioItem
    136 |     ref={ref}

ERROR in src/components/ui/dropdown-menu.tsx:134:6
TS2339: Property 'className' does not exist on type '{}'.
    132 |   React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,
    133 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>
  > 134 | >(({ className, children, ...props }, ref) => (
        |      ^^^^^^^^^
    135 |   <DropdownMenuPrimitive.RadioItem
    136 |     ref={ref}
    137 |     className={cn(

ERROR in src/components/ui/dropdown-menu.tsx:134:17
TS2339: Property 'children' does not exist on type '{}'.
    132 |   React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,
    133 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>
  > 134 | >(({ className, children, ...props }, ref) => (
        |                 ^^^^^^^^
    135 |   <DropdownMenuPrimitive.RadioItem
    136 |     ref={ref}
    137 |     className={cn(

ERROR in src/components/ui/dropdown-menu.tsx:135:4
TS2741: Property 'value' is missing in type '{ children: any[]; ref: ForwardedRef<never>; className: string; }' but required in type 'Omit<MenuRadioItemProps & RefAttributes<HTMLDivElement>, "ref">'.
    133 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>
    134 | >(({ className, children, ...props }, ref) => (
  > 135 |   <DropdownMenuPrimitive.RadioItem
        |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    136 |     ref={ref}
    137 |     className={cn(
    138 |       "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",

ERROR in src/components/ui/dropdown-menu.tsx:135:4
TS2786: 'DropdownMenuPrimitive.RadioItem' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<DropdownMenuRadioItemProps & RefAttributes<HTMLDivElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<DropdownMenuRadioItemProps & RefAttributes<HTMLDivElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    133 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>
    134 | >(({ className, children, ...props }, ref) => (
  > 135 |   <DropdownMenuPrimitive.RadioItem
        |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    136 |     ref={ref}
    137 |     className={cn(
    138 |       "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",

ERROR in src/components/ui/dropdown-menu.tsx:144:8
TS2786: 'DropdownMenuPrimitive.ItemIndicator' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<DropdownMenuItemIndicatorProps & RefAttributes<HTMLSpanElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<DropdownMenuItemIndicatorProps & RefAttributes<HTMLSpanElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    142 |   >
    143 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
  > 144 |       <DropdownMenuPrimitive.ItemIndicator>
        |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    145 |         <Circle className="h-2 w-2 fill-current" />
    146 |       </DropdownMenuPrimitive.ItemIndicator>
    147 |     </span>

ERROR in src/components/ui/dropdown-menu.tsx:145:10
TS2786: 'Circle' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    143 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
    144 |       <DropdownMenuPrimitive.ItemIndicator>
  > 145 |         <Circle className="h-2 w-2 fill-current" />
        |          ^^^^^^
    146 |       </DropdownMenuPrimitive.ItemIndicator>
    147 |     </span>
    148 |     {children}

ERROR in src/components/ui/dropdown-menu.tsx:154:20
TS2344: Type 'ForwardRefExoticComponent<DropdownMenuLabelProps & RefAttributes<HTMLDivElement>>' does not satisfy the constraint 'keyof IntrinsicElements | ForwardRefExoticComponent<any> | (new (props: any) => Component<any, {}, any>) | ((props: any, deprecatedLegacyContext?: any) => ReactNode)'.
  Type 'ForwardRefExoticComponent<DropdownMenuLabelProps & RefAttributes<HTMLDivElement>>' is not assignable to type 'ForwardRefExoticComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    152 |
    153 | const DropdownMenuLabel = React.forwardRef<
  > 154 |   React.ElementRef<typeof DropdownMenuPrimitive.Label>,
        |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    155 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {
    156 |     inset?: boolean
    157 |   }

ERROR in src/components/ui/dropdown-menu.tsx:155:34
TS2344: Type 'ForwardRefExoticComponent<DropdownMenuLabelProps & RefAttributes<HTMLDivElement>>' does not satisfy the constraint 'ElementType<any, keyof IntrinsicElements>'.
  Type 'ForwardRefExoticComponent<DropdownMenuLabelProps & RefAttributes<HTMLDivElement>>' is not assignable to type 'FunctionComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    153 | const DropdownMenuLabel = React.forwardRef<
    154 |   React.ElementRef<typeof DropdownMenuPrimitive.Label>,
  > 155 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {
        |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    156 |     inset?: boolean
    157 |   }
    158 | >(({ className, inset, ...props }, ref) => (

ERROR in src/components/ui/dropdown-menu.tsx:158:6
TS2339: Property 'className' does not exist on type '{ inset?: boolean | undefined; }'.
    156 |     inset?: boolean
    157 |   }
  > 158 | >(({ className, inset, ...props }, ref) => (
        |      ^^^^^^^^^
    159 |   <DropdownMenuPrimitive.Label
    160 |     ref={ref}
    161 |     className={cn(

ERROR in src/components/ui/dropdown-menu.tsx:159:4
TS2786: 'DropdownMenuPrimitive.Label' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<DropdownMenuLabelProps & RefAttributes<HTMLDivElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<DropdownMenuLabelProps & RefAttributes<HTMLDivElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    157 |   }
    158 | >(({ className, inset, ...props }, ref) => (
  > 159 |   <DropdownMenuPrimitive.Label
        |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    160 |     ref={ref}
    161 |     className={cn(
    162 |       "px-2 py-1.5 text-sm font-semibold",

ERROR in src/components/ui/index.ts:13:26
TS2306: File 'C:/Stock_HR/frontend/src/components/ui/checkbox.tsx' is not a module.
    11 | export { Alert, AlertTitle, AlertDescription } from './alert';
    12 | export { Badge } from './badge';
  > 13 | export { Checkbox } from './checkbox';
       |                          ^^^^^^^^^^^^
    14 | export { RadioGroup, RadioGroupItem } from './radio-group';
    15 | export { Switch } from './switch';
    16 | export { Tooltip, TooltipTrigger, TooltipContent } from './tooltip';

ERROR in src/components/ui/navigation-menu.tsx:9:20
TS2344: Type 'ForwardRefExoticComponent<NavigationMenuProps & RefAttributes<HTMLElement>>' does not satisfy the constraint 'keyof IntrinsicElements | ForwardRefExoticComponent<any> | (new (props: any) => Component<any, {}, any>) | ((props: any, deprecatedLegacyContext?: any) => ReactNode)'.
  Type 'ForwardRefExoticComponent<NavigationMenuProps & RefAttributes<HTMLElement>>' is not assignable to type 'ForwardRefExoticComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
     7 |
     8 | const NavigationMenu = React.forwardRef<
  >  9 |   React.ElementRef<typeof NavigationMenuPrimitive.Root>,
       |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    10 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>
    11 | >(({ className, children, ...props }, ref) => (
    12 |   <NavigationMenuPrimitive.Root

ERROR in src/components/ui/navigation-menu.tsx:10:34
TS2344: Type 'ForwardRefExoticComponent<NavigationMenuProps & RefAttributes<HTMLElement>>' does not satisfy the constraint 'ElementType<any, keyof IntrinsicElements>'.
  Type 'ForwardRefExoticComponent<NavigationMenuProps & RefAttributes<HTMLElement>>' is not assignable to type 'FunctionComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
     8 | const NavigationMenu = React.forwardRef<
     9 |   React.ElementRef<typeof NavigationMenuPrimitive.Root>,
  > 10 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>
       |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    11 | >(({ className, children, ...props }, ref) => (
    12 |   <NavigationMenuPrimitive.Root
    13 |     ref={ref}

ERROR in src/components/ui/navigation-menu.tsx:11:6
TS2339: Property 'className' does not exist on type '{}'.
     9 |   React.ElementRef<typeof NavigationMenuPrimitive.Root>,
    10 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>
  > 11 | >(({ className, children, ...props }, ref) => (
       |      ^^^^^^^^^
    12 |   <NavigationMenuPrimitive.Root
    13 |     ref={ref}
    14 |     className={cn(

ERROR in src/components/ui/navigation-menu.tsx:11:17
TS2339: Property 'children' does not exist on type '{}'.
     9 |   React.ElementRef<typeof NavigationMenuPrimitive.Root>,
    10 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>
  > 11 | >(({ className, children, ...props }, ref) => (
       |                 ^^^^^^^^
    12 |   <NavigationMenuPrimitive.Root
    13 |     ref={ref}
    14 |     className={cn(

ERROR in src/components/ui/navigation-menu.tsx:12:4
TS2786: 'NavigationMenuPrimitive.Root' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<NavigationMenuProps & RefAttributes<HTMLElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<NavigationMenuProps & RefAttributes<HTMLElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    10 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>
    11 | >(({ className, children, ...props }, ref) => (
  > 12 |   <NavigationMenuPrimitive.Root
       |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    13 |     ref={ref}
    14 |     className={cn(
    15 |       "relative z-10 flex max-w-max flex-1 items-center justify-center",

ERROR in src/components/ui/navigation-menu.tsx:27:20
TS2344: Type 'ForwardRefExoticComponent<NavigationMenuListProps & RefAttributes<HTMLUListElement>>' does not satisfy the constraint 'keyof IntrinsicElements | ForwardRefExoticComponent<any> | (new (props: any) => Component<any, {}, any>) | ((props: any, deprecatedLegacyContext?: any) => ReactNode)'.
  Type 'ForwardRefExoticComponent<NavigationMenuListProps & RefAttributes<HTMLUListElement>>' is not assignable to type 'ForwardRefExoticComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    25 |
    26 | const NavigationMenuList = React.forwardRef<
  > 27 |   React.ElementRef<typeof NavigationMenuPrimitive.List>,
       |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    28 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>
    29 | >(({ className, ...props }, ref) => (
    30 |   <NavigationMenuPrimitive.List

ERROR in src/components/ui/navigation-menu.tsx:28:34
TS2344: Type 'ForwardRefExoticComponent<NavigationMenuListProps & RefAttributes<HTMLUListElement>>' does not satisfy the constraint 'ElementType<any, keyof IntrinsicElements>'.
  Type 'ForwardRefExoticComponent<NavigationMenuListProps & RefAttributes<HTMLUListElement>>' is not assignable to type 'FunctionComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    26 | const NavigationMenuList = React.forwardRef<
    27 |   React.ElementRef<typeof NavigationMenuPrimitive.List>,
  > 28 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>
       |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    29 | >(({ className, ...props }, ref) => (
    30 |   <NavigationMenuPrimitive.List
    31 |     ref={ref}

ERROR in src/components/ui/navigation-menu.tsx:29:6
TS2339: Property 'className' does not exist on type '{}'.
    27 |   React.ElementRef<typeof NavigationMenuPrimitive.List>,
    28 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>
  > 29 | >(({ className, ...props }, ref) => (
       |      ^^^^^^^^^
    30 |   <NavigationMenuPrimitive.List
    31 |     ref={ref}
    32 |     className={cn(

ERROR in src/components/ui/navigation-menu.tsx:30:4
TS2786: 'NavigationMenuPrimitive.List' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<NavigationMenuListProps & RefAttributes<HTMLUListElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<NavigationMenuListProps & RefAttributes<HTMLUListElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    28 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>
    29 | >(({ className, ...props }, ref) => (
  > 30 |   <NavigationMenuPrimitive.List
       |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    31 |     ref={ref}
    32 |     className={cn(
    33 |       "group flex flex-1 list-none items-center justify-center space-x-1",

ERROR in src/components/ui/navigation-menu.tsx:48:20
TS2344: Type 'ForwardRefExoticComponent<NavigationMenuTriggerProps & RefAttributes<HTMLButtonElement>>' does not satisfy the constraint 'keyof IntrinsicElements | ForwardRefExoticComponent<any> | (new (props: any) => Component<any, {}, any>) | ((props: any, deprecatedLegacyContext?: any) => ReactNode)'.
  Type 'ForwardRefExoticComponent<NavigationMenuTriggerProps & RefAttributes<HTMLButtonElement>>' is not assignable to type 'ForwardRefExoticComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    46 |
    47 | const NavigationMenuTrigger = React.forwardRef<
  > 48 |   React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,
       |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    49 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>
    50 | >(({ className, children, ...props }, ref) => (
    51 |   <NavigationMenuPrimitive.Trigger

ERROR in src/components/ui/navigation-menu.tsx:49:34
TS2344: Type 'ForwardRefExoticComponent<NavigationMenuTriggerProps & RefAttributes<HTMLButtonElement>>' does not satisfy the constraint 'ElementType<any, keyof IntrinsicElements>'.
  Type 'ForwardRefExoticComponent<NavigationMenuTriggerProps & RefAttributes<HTMLButtonElement>>' is not assignable to type 'FunctionComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    47 | const NavigationMenuTrigger = React.forwardRef<
    48 |   React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,
  > 49 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>
       |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    50 | >(({ className, children, ...props }, ref) => (
    51 |   <NavigationMenuPrimitive.Trigger
    52 |     ref={ref}

ERROR in src/components/ui/navigation-menu.tsx:50:6
TS2339: Property 'className' does not exist on type '{}'.
    48 |   React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,
    49 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>
  > 50 | >(({ className, children, ...props }, ref) => (
       |      ^^^^^^^^^
    51 |   <NavigationMenuPrimitive.Trigger
    52 |     ref={ref}
    53 |     className={cn(navigationMenuTriggerStyle(), "group", className)}

ERROR in src/components/ui/navigation-menu.tsx:50:17
TS2339: Property 'children' does not exist on type '{}'.
    48 |   React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,
    49 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>
  > 50 | >(({ className, children, ...props }, ref) => (
       |                 ^^^^^^^^
    51 |   <NavigationMenuPrimitive.Trigger
    52 |     ref={ref}
    53 |     className={cn(navigationMenuTriggerStyle(), "group", className)}

ERROR in src/components/ui/navigation-menu.tsx:51:4
TS2786: 'NavigationMenuPrimitive.Trigger' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<NavigationMenuTriggerProps & RefAttributes<HTMLButtonElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<NavigationMenuTriggerProps & RefAttributes<HTMLButtonElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    49 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>
    50 | >(({ className, children, ...props }, ref) => (
  > 51 |   <NavigationMenuPrimitive.Trigger
       |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    52 |     ref={ref}
    53 |     className={cn(navigationMenuTriggerStyle(), "group", className)}
    54 |     {...props}

ERROR in src/components/ui/navigation-menu.tsx:57:6
TS2786: 'ChevronDown' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    55 |   >
    56 |     {children}{" "}
  > 57 |     <ChevronDown
       |      ^^^^^^^^^^^
    58 |       className="relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180"
    59 |       aria-hidden="true"
    60 |     />

ERROR in src/components/ui/navigation-menu.tsx:66:20
TS2344: Type 'ForwardRefExoticComponent<NavigationMenuContentProps & RefAttributes<HTMLDivElement>>' does not satisfy the constraint 'keyof IntrinsicElements | ForwardRefExoticComponent<any> | (new (props: any) => Component<any, {}, any>) | ((props: any, deprecatedLegacyContext?: any) => ReactNode)'.
  Type 'ForwardRefExoticComponent<NavigationMenuContentProps & RefAttributes<HTMLDivElement>>' is not assignable to type 'ForwardRefExoticComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    64 |
    65 | const NavigationMenuContent = React.forwardRef<
  > 66 |   React.ElementRef<typeof NavigationMenuPrimitive.Content>,
       |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    67 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>
    68 | >(({ className, ...props }, ref) => (
    69 |   <NavigationMenuPrimitive.Content

ERROR in src/components/ui/navigation-menu.tsx:67:34
TS2344: Type 'ForwardRefExoticComponent<NavigationMenuContentProps & RefAttributes<HTMLDivElement>>' does not satisfy the constraint 'ElementType<any, keyof IntrinsicElements>'.
  Type 'ForwardRefExoticComponent<NavigationMenuContentProps & RefAttributes<HTMLDivElement>>' is not assignable to type 'FunctionComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    65 | const NavigationMenuContent = React.forwardRef<
    66 |   React.ElementRef<typeof NavigationMenuPrimitive.Content>,
  > 67 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>
       |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    68 | >(({ className, ...props }, ref) => (
    69 |   <NavigationMenuPrimitive.Content
    70 |     ref={ref}

ERROR in src/components/ui/navigation-menu.tsx:68:6
TS2339: Property 'className' does not exist on type '{}'.
    66 |   React.ElementRef<typeof NavigationMenuPrimitive.Content>,
    67 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>
  > 68 | >(({ className, ...props }, ref) => (
       |      ^^^^^^^^^
    69 |   <NavigationMenuPrimitive.Content
    70 |     ref={ref}
    71 |     className={cn(

ERROR in src/components/ui/navigation-menu.tsx:69:4
TS2786: 'NavigationMenuPrimitive.Content' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<NavigationMenuContentProps & RefAttributes<HTMLDivElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<NavigationMenuContentProps & RefAttributes<HTMLDivElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    67 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>
    68 | >(({ className, ...props }, ref) => (
  > 69 |   <NavigationMenuPrimitive.Content
       |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    70 |     ref={ref}
    71 |     className={cn(
    72 |       "left-0 right-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto ",

ERROR in src/components/ui/navigation-menu.tsx:83:20
TS2344: Type 'ForwardRefExoticComponent<NavigationMenuViewportProps & RefAttributes<HTMLDivElement>>' does not satisfy the constraint 'keyof IntrinsicElements | ForwardRefExoticComponent<any> | (new (props: any) => Component<any, {}, any>) | ((props: any, deprecatedLegacyContext?: any) => ReactNode)'.
  Type 'ForwardRefExoticComponent<NavigationMenuViewportProps & RefAttributes<HTMLDivElement>>' is not assignable to type 'ForwardRefExoticComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    81 |
    82 | const NavigationMenuViewport = React.forwardRef<
  > 83 |   React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,
       |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    84 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>
    85 | >(({ className, ...props }, ref) => (
    86 |   <div className={cn("absolute left-0 top-full flex justify-center")}>

ERROR in src/components/ui/navigation-menu.tsx:84:34
TS2344: Type 'ForwardRefExoticComponent<NavigationMenuViewportProps & RefAttributes<HTMLDivElement>>' does not satisfy the constraint 'ElementType<any, keyof IntrinsicElements>'.
  Type 'ForwardRefExoticComponent<NavigationMenuViewportProps & RefAttributes<HTMLDivElement>>' is not assignable to type 'FunctionComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    82 | const NavigationMenuViewport = React.forwardRef<
    83 |   React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,
  > 84 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>
       |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    85 | >(({ className, ...props }, ref) => (
    86 |   <div className={cn("absolute left-0 top-full flex justify-center")}>
    87 |     <NavigationMenuPrimitive.Viewport

ERROR in src/components/ui/navigation-menu.tsx:85:6
TS2339: Property 'className' does not exist on type '{}'.
    83 |   React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,
    84 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>
  > 85 | >(({ className, ...props }, ref) => (
       |      ^^^^^^^^^
    86 |   <div className={cn("absolute left-0 top-full flex justify-center")}>
    87 |     <NavigationMenuPrimitive.Viewport
    88 |       className={cn(

ERROR in src/components/ui/navigation-menu.tsx:87:6
TS2786: 'NavigationMenuPrimitive.Viewport' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<NavigationMenuViewportProps & RefAttributes<HTMLDivElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<NavigationMenuViewportProps & RefAttributes<HTMLDivElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    85 | >(({ className, ...props }, ref) => (
    86 |   <div className={cn("absolute left-0 top-full flex justify-center")}>
  > 87 |     <NavigationMenuPrimitive.Viewport
       |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    88 |       className={cn(
    89 |         "origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]",
    90 |         className

ERROR in src/components/ui/navigation-menu.tsx:101:20
TS2344: Type 'ForwardRefExoticComponent<NavigationMenuIndicatorProps & RefAttributes<HTMLDivElement>>' does not satisfy the constraint 'keyof IntrinsicElements | ForwardRefExoticComponent<any> | (new (props: any) => Component<any, {}, any>) | ((props: any, deprecatedLegacyContext?: any) => ReactNode)'.
  Type 'ForwardRefExoticComponent<NavigationMenuIndicatorProps & RefAttributes<HTMLDivElement>>' is not assignable to type 'ForwardRefExoticComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
     99 |
    100 | const NavigationMenuIndicator = React.forwardRef<
  > 101 |   React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,
        |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    102 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>
    103 | >(({ className, ...props }, ref) => (
    104 |   <NavigationMenuPrimitive.Indicator

ERROR in src/components/ui/navigation-menu.tsx:102:34
TS2344: Type 'ForwardRefExoticComponent<NavigationMenuIndicatorProps & RefAttributes<HTMLDivElement>>' does not satisfy the constraint 'ElementType<any, keyof IntrinsicElements>'.
  Type 'ForwardRefExoticComponent<NavigationMenuIndicatorProps & RefAttributes<HTMLDivElement>>' is not assignable to type 'FunctionComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    100 | const NavigationMenuIndicator = React.forwardRef<
    101 |   React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,
  > 102 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>
        |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    103 | >(({ className, ...props }, ref) => (
    104 |   <NavigationMenuPrimitive.Indicator
    105 |     ref={ref}

ERROR in src/components/ui/navigation-menu.tsx:103:6
TS2339: Property 'className' does not exist on type '{}'.
    101 |   React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,
    102 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>
  > 103 | >(({ className, ...props }, ref) => (
        |      ^^^^^^^^^
    104 |   <NavigationMenuPrimitive.Indicator
    105 |     ref={ref}
    106 |     className={cn(

ERROR in src/components/ui/navigation-menu.tsx:104:4
TS2786: 'NavigationMenuPrimitive.Indicator' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<NavigationMenuIndicatorProps & RefAttributes<HTMLDivElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<NavigationMenuIndicatorProps & RefAttributes<HTMLDivElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    102 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>
    103 | >(({ className, ...props }, ref) => (
  > 104 |   <NavigationMenuPrimitive.Indicator
        |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    105 |     ref={ref}
    106 |     className={cn(
    107 |       "top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in",

ERROR in src/components/ui/scroll-area.tsx:7:20
TS2344: Type 'ForwardRefExoticComponent<ScrollAreaProps & RefAttributes<HTMLDivElement>>' does not satisfy the constraint 'keyof IntrinsicElements | ForwardRefExoticComponent<any> | (new (props: any) => Component<any, {}, any>) | ((props: any, deprecatedLegacyContext?: any) => ReactNode)'.
  Type 'ForwardRefExoticComponent<ScrollAreaProps & RefAttributes<HTMLDivElement>>' is not assignable to type 'ForwardRefExoticComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
     5 |
     6 | const ScrollArea = React.forwardRef<
  >  7 |   React.ElementRef<typeof ScrollAreaPrimitive.Root>,
       |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     8 |   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>
     9 | >(({ className, children, ...props }, ref) => (
    10 |   <ScrollAreaPrimitive.Root

ERROR in src/components/ui/scroll-area.tsx:8:34
TS2344: Type 'ForwardRefExoticComponent<ScrollAreaProps & RefAttributes<HTMLDivElement>>' does not satisfy the constraint 'ElementType<any, keyof IntrinsicElements>'.
  Type 'ForwardRefExoticComponent<ScrollAreaProps & RefAttributes<HTMLDivElement>>' is not assignable to type 'FunctionComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
     6 | const ScrollArea = React.forwardRef<
     7 |   React.ElementRef<typeof ScrollAreaPrimitive.Root>,
  >  8 |   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>
       |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     9 | >(({ className, children, ...props }, ref) => (
    10 |   <ScrollAreaPrimitive.Root
    11 |     ref={ref}

ERROR in src/components/ui/scroll-area.tsx:9:6
TS2339: Property 'className' does not exist on type '{}'.
     7 |   React.ElementRef<typeof ScrollAreaPrimitive.Root>,
     8 |   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>
  >  9 | >(({ className, children, ...props }, ref) => (
       |      ^^^^^^^^^
    10 |   <ScrollAreaPrimitive.Root
    11 |     ref={ref}
    12 |     className={cn("relative overflow-hidden", className)}

ERROR in src/components/ui/scroll-area.tsx:9:17
TS2339: Property 'children' does not exist on type '{}'.
     7 |   React.ElementRef<typeof ScrollAreaPrimitive.Root>,
     8 |   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>
  >  9 | >(({ className, children, ...props }, ref) => (
       |                 ^^^^^^^^
    10 |   <ScrollAreaPrimitive.Root
    11 |     ref={ref}
    12 |     className={cn("relative overflow-hidden", className)}

ERROR in src/components/ui/scroll-area.tsx:10:4
TS2786: 'ScrollAreaPrimitive.Root' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<ScrollAreaProps & RefAttributes<HTMLDivElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<ScrollAreaProps & RefAttributes<HTMLDivElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
     8 |   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>
     9 | >(({ className, children, ...props }, ref) => (
  > 10 |   <ScrollAreaPrimitive.Root
       |    ^^^^^^^^^^^^^^^^^^^^^^^^
    11 |     ref={ref}
    12 |     className={cn("relative overflow-hidden", className)}
    13 |     {...props}

ERROR in src/components/ui/scroll-area.tsx:15:6
TS2786: 'ScrollAreaPrimitive.Viewport' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<ScrollAreaViewportProps & RefAttributes<HTMLDivElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<ScrollAreaViewportProps & RefAttributes<HTMLDivElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    13 |     {...props}
    14 |   >
  > 15 |     <ScrollAreaPrimitive.Viewport className="h-full w-full rounded-[inherit]">
       |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    16 |       {children}
    17 |     </ScrollAreaPrimitive.Viewport>
    18 |     <ScrollBar />

ERROR in src/components/ui/scroll-area.tsx:19:6
TS2786: 'ScrollAreaPrimitive.Corner' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<ScrollAreaCornerProps & RefAttributes<HTMLDivElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<ScrollAreaCornerProps & RefAttributes<HTMLDivElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    17 |     </ScrollAreaPrimitive.Viewport>
    18 |     <ScrollBar />
  > 19 |     <ScrollAreaPrimitive.Corner />
       |      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    20 |   </ScrollAreaPrimitive.Root>
    21 | ))
    22 | ScrollArea.displayName = ScrollAreaPrimitive.Root.displayName

ERROR in src/components/ui/scroll-area.tsx:25:20
TS2344: Type 'ForwardRefExoticComponent<ScrollAreaScrollbarProps & RefAttributes<HTMLDivElement>>' does not satisfy the constraint 'keyof IntrinsicElements | ForwardRefExoticComponent<any> | (new (props: any) => Component<any, {}, any>) | ((props: any, deprecatedLegacyContext?: any) => ReactNode)'.
  Type 'ForwardRefExoticComponent<ScrollAreaScrollbarProps & RefAttributes<HTMLDivElement>>' is not assignable to type 'ForwardRefExoticComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    23 |
    24 | const ScrollBar = React.forwardRef<
  > 25 |   React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,
       |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    26 |   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>
    27 | >(({ className, orientation = "vertical", ...props }, ref) => (
    28 |   <ScrollAreaPrimitive.ScrollAreaScrollbar

ERROR in src/components/ui/scroll-area.tsx:26:34
TS2344: Type 'ForwardRefExoticComponent<ScrollAreaScrollbarProps & RefAttributes<HTMLDivElement>>' does not satisfy the constraint 'ElementType<any, keyof IntrinsicElements>'.
  Type 'ForwardRefExoticComponent<ScrollAreaScrollbarProps & RefAttributes<HTMLDivElement>>' is not assignable to type 'FunctionComponent<any>'.
    Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
      Type 'bigint' is not assignable to type 'ReactNode'.
    24 | const ScrollBar = React.forwardRef<
    25 |   React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,
  > 26 |   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>
       |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    27 | >(({ className, orientation = "vertical", ...props }, ref) => (
    28 |   <ScrollAreaPrimitive.ScrollAreaScrollbar
    29 |     ref={ref}

ERROR in src/components/ui/scroll-area.tsx:27:6
TS2339: Property 'className' does not exist on type '{}'.
    25 |   React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,
    26 |   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>
  > 27 | >(({ className, orientation = "vertical", ...props }, ref) => (
       |      ^^^^^^^^^
    28 |   <ScrollAreaPrimitive.ScrollAreaScrollbar
    29 |     ref={ref}
    30 |     orientation={orientation}

ERROR in src/components/ui/scroll-area.tsx:27:17
TS2339: Property 'orientation' does not exist on type '{}'.
    25 |   React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,
    26 |   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>
  > 27 | >(({ className, orientation = "vertical", ...props }, ref) => (
       |                 ^^^^^^^^^^^
    28 |   <ScrollAreaPrimitive.ScrollAreaScrollbar
    29 |     ref={ref}
    30 |     orientation={orientation}

ERROR in src/components/ui/scroll-area.tsx:28:4
TS2786: 'ScrollAreaPrimitive.ScrollAreaScrollbar' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<ScrollAreaScrollbarProps & RefAttributes<HTMLDivElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<ScrollAreaScrollbarProps & RefAttributes<HTMLDivElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    26 |   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>
    27 | >(({ className, orientation = "vertical", ...props }, ref) => (
  > 28 |   <ScrollAreaPrimitive.ScrollAreaScrollbar
       |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    29 |     ref={ref}
    30 |     orientation={orientation}
    31 |     className={cn(

ERROR in src/components/ui/scroll-area.tsx:41:6
TS2786: 'ScrollAreaPrimitive.ScrollAreaThumb' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<ScrollAreaThumbProps & RefAttributes<HTMLDivElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<ScrollAreaThumbProps & RefAttributes<HTMLDivElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    39 |     {...props}
    40 |   >
  > 41 |     <ScrollAreaPrimitive.ScrollAreaThumb className="relative flex-1 rounded-full bg-border" />
       |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    42 |   </ScrollAreaPrimitive.ScrollAreaScrollbar>
    43 | ))
    44 | ScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName

ERROR in src/components/ui/sheet.tsx:19:6
TS2339: Property 'className' does not exist on type 'Omit<DialogOverlayProps & RefAttributes<HTMLDivElement>, "ref">'.
    17 |   React.ElementRef<typeof SheetPrimitive.Overlay>,
    18 |   React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>
  > 19 | >(({ className, ...props }, ref) => (
       |      ^^^^^^^^^
    20 |   <SheetPrimitive.Overlay
    21 |     className={cn(
    22 |       "fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",

ERROR in src/components/ui/sheet.tsx:21:5
TS2322: Type '{ ref: ForwardedRef<HTMLDivElement>; key?: Key | null | undefined; forceMount?: true | undefined; className: string; }' is not assignable to type 'IntrinsicAttributes & DialogOverlayProps & RefAttributes<HTMLDivElement>'.
  Property 'className' does not exist on type 'IntrinsicAttributes & DialogOverlayProps & RefAttributes<HTMLDivElement>'.
    19 | >(({ className, ...props }, ref) => (
    20 |   <SheetPrimitive.Overlay
  > 21 |     className={cn(
       |     ^^^^^^^^^
    22 |       "fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
    23 |       className
    24 |     )}

ERROR in src/components/ui/sheet.tsx:57:22
TS2339: Property 'className' does not exist on type 'SheetContentProps'.
    55 |   React.ElementRef<typeof SheetPrimitive.Content>,
    56 |   SheetContentProps
  > 57 | >(({ side = "right", className, children, ...props }, ref) => (
       |                      ^^^^^^^^^
    58 |   <SheetPortal>
    59 |     <SheetOverlay />
    60 |     <SheetPrimitive.Content

ERROR in src/components/ui/sheet.tsx:57:33
TS2339: Property 'children' does not exist on type 'SheetContentProps'.
    55 |   React.ElementRef<typeof SheetPrimitive.Content>,
    56 |   SheetContentProps
  > 57 | >(({ side = "right", className, children, ...props }, ref) => (
       |                                 ^^^^^^^^
    58 |   <SheetPortal>
    59 |     <SheetOverlay />
    60 |     <SheetPrimitive.Content

ERROR in src/components/ui/sheet.tsx:60:6
TS2322: Type '{ children: any[]; key?: Key | null | undefined; onOpenAutoFocus?: any; onCloseAutoFocus?: any; forceMount?: true | undefined; ref: ForwardedRef<HTMLDivElement>; className: string; }' is not assignable to type 'IntrinsicAttributes & DialogContentProps & RefAttributes<HTMLDivElement>'.
  Property 'children' does not exist on type 'IntrinsicAttributes & DialogContentProps & RefAttributes<HTMLDivElement>'.
    58 |   <SheetPortal>
    59 |     <SheetOverlay />
  > 60 |     <SheetPrimitive.Content
       |      ^^^^^^^^^^^^^^^^^^^^^^
    61 |       ref={ref}
    62 |       className={cn(sheetVariants({ side }), className)}
    63 |       {...props}

ERROR in src/components/ui/sheet.tsx:66:8
TS2322: Type '{ children: Element[]; className: string; }' is not assignable to type 'IntrinsicAttributes & DialogCloseProps & RefAttributes<HTMLButtonElement>'.
  Property 'children' does not exist on type 'IntrinsicAttributes & DialogCloseProps & RefAttributes<HTMLButtonElement>'.
    64 |     >
    65 |       {children}
  > 66 |       <SheetPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary data-[state=open]:text-secondary-foreground">
       |        ^^^^^^^^^^^^^^^^^^^^
    67 |         <X className="h-4 w-4" />
    68 |         <span className="sr-only">Close</span>
    69 |       </SheetPrimitive.Close>

ERROR in src/components/ui/sheet.tsx:67:10
TS2786: 'X' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    65 |       {children}
    66 |       <SheetPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary data-[state=open]:text-secondary-foreground">
  > 67 |         <X className="h-4 w-4" />
       |          ^
    68 |         <span className="sr-only">Close</span>
    69 |       </SheetPrimitive.Close>
    70 |     </SheetPrimitive.Content>

ERROR in src/components/ui/sheet.tsx:106:6
TS2339: Property 'className' does not exist on type 'Omit<DialogTitleProps & RefAttributes<HTMLHeadingElement>, "ref">'.
    104 |   React.ElementRef<typeof SheetPrimitive.Title>,
    105 |   React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>
  > 106 | >(({ className, ...props }, ref) => (
        |      ^^^^^^^^^
    107 |   <SheetPrimitive.Title
    108 |     ref={ref}
    109 |     className={cn("text-lg font-semibold text-foreground", className)}

ERROR in src/components/ui/sheet.tsx:109:5
TS2322: Type '{ key?: Key | null | undefined; ref: ForwardedRef<HTMLHeadingElement>; className: string; }' is not assignable to type 'IntrinsicAttributes & DialogTitleProps & RefAttributes<HTMLHeadingElement>'.
  Property 'className' does not exist on type 'IntrinsicAttributes & DialogTitleProps & RefAttributes<HTMLHeadingElement>'.
    107 |   <SheetPrimitive.Title
    108 |     ref={ref}
  > 109 |     className={cn("text-lg font-semibold text-foreground", className)}
        |     ^^^^^^^^^
    110 |     {...props}
    111 |   />
    112 | ))

ERROR in src/components/ui/sheet.tsx:118:6
TS2339: Property 'className' does not exist on type 'Omit<DialogDescriptionProps & RefAttributes<HTMLParagraphElement>, "ref">'.
    116 |   React.ElementRef<typeof SheetPrimitive.Description>,
    117 |   React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>
  > 118 | >(({ className, ...props }, ref) => (
        |      ^^^^^^^^^
    119 |   <SheetPrimitive.Description
    120 |     ref={ref}
    121 |     className={cn("text-sm text-muted-foreground", className)}

ERROR in src/components/ui/sheet.tsx:121:5
TS2322: Type '{ key?: Key | null | undefined; ref: ForwardedRef<HTMLParagraphElement>; className: string; }' is not assignable to type 'IntrinsicAttributes & DialogDescriptionProps & RefAttributes<HTMLParagraphElement>'.
  Property 'className' does not exist on type 'IntrinsicAttributes & DialogDescriptionProps & RefAttributes<HTMLParagraphElement>'.
    119 |   <SheetPrimitive.Description
    120 |     ref={ref}
  > 121 |     className={cn("text-sm text-muted-foreground", className)}
        |     ^^^^^^^^^
    122 |     {...props}
    123 |   />
    124 | ))

ERROR in src/features/auth/authSlice.ts:25:17
TS2345: Argument of type '(credentials: { email: string; password: string; }, { rejectWithValue }: GetThunkAPI<{ rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction> | undefined; extra?: unknown; serializedErrorType?: unknown; pendingMeta?: unknown; fulfilledMeta?: unknown; rejectedMeta?: unknown; }...' is not assignable to parameter of type 'AsyncThunkPayloadCreator<{ token: string; data: { user: UserProfile; }; }, { email: string; password: string; }, { rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction> | undefined; ... 4 more ...; rejectedMeta?: unknown; }>'.
  Type 'Promise<unknown>' is not assignable to type 'AsyncThunkPayloadCreatorReturnValue<{ token: string; data: { user: UserProfile; }; }, { rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction> | undefined; ... 4 more ...; rejectedMeta?: unknown; }>'.
    Type 'Promise<unknown>' is not assignable to type 'Promise<{ token: string; data: { user: UserProfile; }; } | RejectWithValue<string, unknown>>'.
      Type 'unknown' is not assignable to type '{ token: string; data: { user: UserProfile; }; } | RejectWithValue<string, unknown>'.
    23 |   { email: string; password: string },
    24 |   { rejectValue: string }
  > 25 | >('auth/login', async (credentials, { rejectWithValue }) => {
       |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    26 |   try {
    27 |     const response = await api.post('/auth/login', credentials);
    28 |     return response.data;

ERROR in src/features/auth/authSlice.ts:38:20
TS2345: Argument of type '(userData: { email: string; password: string; firstName: string; lastName: string; }, { rejectWithValue }: GetThunkAPI<{ rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction> | undefined; ... 4 more ...; rejectedMeta?: unknown; }>) => Promise<...>' is not assignable to parameter of type 'AsyncThunkPayloadCreator<{ token: string; data: { user: UserProfile; }; }, { email: string; password: string; firstName: string; lastName: string; }, { rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction> | undefined; ... 4 more ...; rejectedMeta?: unknown; }>'.
  Type 'Promise<unknown>' is not assignable to type 'AsyncThunkPayloadCreatorReturnValue<{ token: string; data: { user: UserProfile; }; }, { rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction> | undefined; ... 4 more ...; rejectedMeta?: unknown; }>'.
    Type 'Promise<unknown>' is not assignable to type 'Promise<{ token: string; data: { user: UserProfile; }; } | RejectWithValue<string, unknown>>'.
      Type 'unknown' is not assignable to type '{ token: string; data: { user: UserProfile; }; } | RejectWithValue<string, unknown>'.
    36 |   { email: string; password: string; firstName: string; lastName: string },
    37 |   { rejectValue: string }
  > 38 | >('auth/register', async (userData, { rejectWithValue }) => {
       |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    39 |   try {
    40 |     const response = await api.post('/auth/register', userData);
    41 |     return response.data;

ERROR in src/features/auth/authSlice.ts:59:26
TS2345: Argument of type '(_: void, { rejectWithValue }: GetThunkAPI<{ rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction> | undefined; extra?: unknown; serializedErrorType?: unknown; pendingMeta?: unknown; fulfilledMeta?: unknown; rejectedMeta?: unknown; }>) => Promise<...>' is not assignable to parameter of type 'AsyncThunkPayloadCreator<UserProfile, void, { rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction> | undefined; extra?: unknown; serializedErrorType?: unknown; pendingMeta?: unknown; fulfilledMeta?: unknown; rejectedMeta?: unknown; }>'.
  Type 'Promise<unknown>' is not assignable to type 'AsyncThunkPayloadCreatorReturnValue<UserProfile, { rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction> | undefined; extra?: unknown; serializedErrorType?: unknown; pendingMeta?: unknown; fulfilledMeta?: unknown; rejectedMeta?: unknown; }>'.
    Type 'Promise<unknown>' is not assignable to type 'Promise<UserProfile | RejectWithValue<string, unknown>>'.
      Type 'unknown' is not assignable to type 'UserProfile | RejectWithValue<string, unknown>'.
    57 |   void,
    58 |   { rejectValue: string }
  > 59 | >('auth/getCurrentUser', async (_, { rejectWithValue }) => {
       |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    60 |   try {
    61 |     const response = await api.get('/auth/me');
    62 |     return response.data;

ERROR in src/features/auth/authSlice.ts:101:9
TS2322: Type '{}' is not assignable to type 'string'.
     99 |       .addCase(login.rejected, (state, action) => {
    100 |         state.loading = false;
  > 101 |         state.error = action.payload || 'Login failed';
        |         ^^^^^^^^^^^
    102 |       })
    103 |       // Register
    104 |       .addCase(register.pending, (state) => {

ERROR in src/features/auth/authSlice.ts:117:9
TS2322: Type '{}' is not assignable to type 'string'.
    115 |       .addCase(register.rejected, (state, action) => {
    116 |         state.loading = false;
  > 117 |         state.error = action.payload || 'Registration failed';
        |         ^^^^^^^^^^^
    118 |       })
    119 |       // Logout
    120 |       .addCase(logout.fulfilled, (state) => {

ERROR in src/features/auth/authSlice.ts:138:9
TS2322: Type '{}' is not assignable to type 'string'.
    136 |       .addCase(getCurrentUser.rejected, (state, action) => {
    137 |         state.loading = false;
  > 138 |         state.error = action.payload || 'Failed to fetch user';
        |         ^^^^^^^^^^^
    139 |         state.user = null;
    140 |         state.token = null;
    141 |         state.isAuthenticated = false;

ERROR in src/hooks/useAuth.ts:17:29
TS2345: Argument of type 'UserProfile' is not assignable to parameter of type '{ user: UserProfile; token: string; }'.
  Type 'UserProfile' is missing the following properties from type '{ user: UserProfile; token: string; }': user, token
    15 |       dispatch(loginStart());
    16 |       const user = await authService.login(credentials);
  > 17 |       dispatch(loginSuccess(user));
       |                             ^^^^
    18 |     } catch (error) {
    19 |       dispatch(loginFailure(error instanceof Error ? error.message : 'Login failed'));
    20 |     }

ERROR in src/hooks/useEventListener.ts:22:41
TS2345: Argument of type '(event: EventMap[K]) => void' is not assignable to parameter of type 'EventListenerOrEventListenerObject'.
  Type '(event: EventMap[K]) => void' is not assignable to type 'EventListener'.
    Types of parameters 'event' and 'evt' are incompatible.
      Type 'Event' is not assignable to type 'EventMap[K]'.
        Type 'Event' is not assignable to type 'ErrorEvent & MessageEvent<any> & UIEvent & Event & ProgressEvent<EventTarget> & SubmitEvent & ... 22 more ... & StorageEvent'.
          Type 'Event' is missing the following properties from type 'ErrorEvent': colno, error, filename, lineno, message
    20 |
    21 |     const eventListener = (event: EventMap[K]) => savedHandler.current(event);
  > 22 |     element.addEventListener(eventName, eventListener, options);
       |                                         ^^^^^^^^^^^^^
    23 |
    24 |     return () => {
    25 |       element.removeEventListener(eventName, eventListener, options);

ERROR in src/hooks/useEventListener.ts:25:46
TS2345: Argument of type '(event: EventMap[K]) => void' is not assignable to parameter of type 'EventListenerOrEventListenerObject'.
  Type '(event: EventMap[K]) => void' is not assignable to type 'EventListener'.
    Types of parameters 'event' and 'evt' are incompatible.
      Type 'Event' is not assignable to type 'EventMap[K]'.
        Type 'Event' is not assignable to type 'ErrorEvent & MessageEvent<any> & UIEvent & Event & ProgressEvent<EventTarget> & SubmitEvent & ... 22 more ... & StorageEvent'.
          Type 'Event' is missing the following properties from type 'ErrorEvent': colno, error, filename, lineno, message
    23 |
    24 |     return () => {
  > 25 |       element.removeEventListener(eventName, eventListener, options);
       |                                              ^^^^^^^^^^^^^
    26 |     };
    27 |   }, [eventName, element, options]);
    28 | };

ERROR in src/hooks/useLanguage.ts:3:29
TS2307: Cannot find module '../features/language/languageSlice' or its corresponding type declarations.
    1 | import { useSelector, useDispatch } from 'react-redux';
    2 | import { RootState, AppDispatch } from '../features/store';
  > 3 | import { setLanguage } from '../features/language/languageSlice';
      |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    4 |
    5 | export const useLanguage = () => {
    6 |   const dispatch = useDispatch<AppDispatch>();

ERROR in src/hooks/useLanguage.ts:7:71
TS2339: Property 'language' does not exist on type '{ auth: AuthState; inventory: InventoryState; contracts: ContractState; invoices: InvoiceState; users: UserState; settings: SettingsState; }'.
     5 | export const useLanguage = () => {
     6 |   const dispatch = useDispatch<AppDispatch>();
  >  7 |   const { currentLanguage } = useSelector((state: RootState) => state.language);
       |                                                                       ^^^^^^^^
     8 |
     9 |   const changeLanguage = (language: string) => {
    10 |     dispatch(setLanguage(language));

ERROR in src/hooks/useNotification.ts:3:53
TS2307: Cannot find module '../features/notifications/notificationSlice' or its corresponding type declarations.
    1 | import { useDispatch } from 'react-redux';
    2 | import { AppDispatch } from '../features/store';
  > 3 | import { addNotification, removeNotification } from '../features/notifications/notificationSlice';
      |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    4 |
    5 | export const useNotification = () => {
    6 |   const dispatch = useDispatch<AppDispatch>();

ERROR in src/hooks/useStockAccessToken.ts:2:35
TS2724: '"../services/stockAccessTokenService"' has no exported member named 'StockAccessToken'. Did you mean 'AccessToken'?
    1 | import { useState, useEffect, useCallback } from 'react';
  > 2 | import { stockAccessTokenService, StockAccessToken, StockAccessTokenRequest } from '../services/stockAccessTokenService';
      |                                   ^^^^^^^^^^^^^^^^
    3 |
    4 | interface UseStockAccessTokenResult {
    5 |   token: StockAccessToken | null;

ERROR in src/hooks/useStockAccessToken.ts:2:53
TS2614: Module '"../services/stockAccessTokenService"' has no exported member 'StockAccessTokenRequest'. Did you mean to use 'import StockAccessTokenRequest from "../services/stockAccessTokenService"' instead?
    1 | import { useState, useEffect, useCallback } from 'react';
  > 2 | import { stockAccessTokenService, StockAccessToken, StockAccessTokenRequest } from '../services/stockAccessTokenService';
      |                                                     ^^^^^^^^^^^^^^^^^^^^^^^
    3 |
    4 | interface UseStockAccessTokenResult {
    5 |   token: StockAccessToken | null;

ERROR in src/hooks/useStockAccessToken.ts:27:59
TS2339: Property 'getActiveAccessToken' does not exist on type 'StockAccessTokenService'.
    25 |
    26 |       try {
  > 27 |         const activeToken = await stockAccessTokenService.getActiveAccessToken(inventoryItem);
       |                                                           ^^^^^^^^^^^^^^^^^^^^
    28 |         setToken(activeToken);
    29 |       } catch (err) {
    30 |         setError(err instanceof Error ? err : new Error('Failed to load access token'));

ERROR in src/hooks/useStockAccessToken.ts:45:54
TS2554: Expected 3 arguments, but got 1.
    43 |
    44 |     try {
  > 45 |       const newToken = await stockAccessTokenService.requestAccessToken(request);
       |                                                      ^^^^^^^^^^^^^^^^^^
    46 |       setToken(newToken);
    47 |     } catch (err) {
    48 |       setError(err instanceof Error ? err : new Error('Failed to request access token'));

ERROR in src/hooks/useSubscription.ts:43:18
TS2339: Property 'subscription' does not exist on type 'UserProfile'.
    41 |
    42 |   const checkFeatureAccess = (featureName: string): boolean => {
  > 43 |     return user?.subscription?.features.includes(featureName) ?? false;
       |                  ^^^^^^^^^^^^
    44 |   };
    45 |
    46 |   return { quota, loading, checkFeatureAccess };

ERROR in src/hooks/useTheme.ts:7:11
TS2339: Property 'isDarkMode' does not exist on type 'ThemeState'.
     5 | export const useTheme = () => {
     6 |   const dispatch = useDispatch<AppDispatch>();
  >  7 |   const { isDarkMode } = useSelector((state: RootState) => state.theme);
       |           ^^^^^^^^^^
     8 |
     9 |   const toggleThemeMode = () => {
    10 |     dispatch(toggleTheme());

ERROR in src/hooks/useTheme.ts:14:23
TS2345: Argument of type 'boolean' is not assignable to parameter of type '"light" | "dark"'.
    12 |
    13 |   const setThemeMode = (isDark: boolean) => {
  > 14 |     dispatch(setTheme(isDark));
       |                       ^^^^^^
    15 |   };
    16 |
    17 |   return {

ERROR in src/main/backupHandlers.ts:2:27
TS2307: Cannot find module '../services/backupService' or its corresponding type declarations.
    1 | import { ipcMain } from 'electron';
  > 2 | import backupService from '../services/backupService';
      |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    3 |
    4 | export const setupBackupHandlers = () => {
    5 |   ipcMain.handle('backup:list', async () => {

ERROR in src/main/backupHandlers.ts:25:62
TS2304: Cannot find name 'BackupConfig'.
    23 |   });
    24 |
  > 25 |   ipcMain.handle('backup:set-config', (_, newConfig: Partial<BackupConfig>) => {
       |                                                              ^^^^^^^^^^^^
    26 |     backupService.updateConfig(newConfig);
    27 |     return backupService.getConfig();
    28 |   });

ERROR in src/modules/accounting/pages/columns.tsx:45:12
TS2786: 'ArrowUpDown' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    43 |         >
    44 |           Amount
  > 45 |           <ArrowUpDown className="ml-2 h-4 w-4" />
       |            ^^^^^^^^^^^
    46 |         </Button>
    47 |       )
    48 |     },

ERROR in src/modules/accounting/pages/columns.tsx:86:32
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    84 |       return (
    85 |         <DropdownMenu>
  > 86 |           <DropdownMenuTrigger asChild>
       |                                ^^^^^^^
    87 |             <Button variant="ghost" className="h-8 w-8 p-0">
    88 |               <span className="sr-only">Open menu</span>
    89 |               <MoreHorizontal className="h-4 w-4" />

ERROR in src/modules/accounting/pages/columns.tsx:89:16
TS2786: 'MoreHorizontal' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    87 |             <Button variant="ghost" className="h-8 w-8 p-0">
    88 |               <span className="sr-only">Open menu</span>
  > 89 |               <MoreHorizontal className="h-4 w-4" />
       |                ^^^^^^^^^^^^^^
    90 |             </Button>
    91 |           </DropdownMenuTrigger>
    92 |           <DropdownMenuContent align="end">

ERROR in src/modules/accounting/pages/columns.tsx:92:32
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    90 |             </Button>
    91 |           </DropdownMenuTrigger>
  > 92 |           <DropdownMenuContent align="end">
       |                                ^^^^^
    93 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
    94 |             <DropdownMenuItem
    95 |               onClick={() => navigator.clipboard.writeText(invoice.id)}

ERROR in src/modules/accounting/pages/columns.tsx:93:14
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
    91 |           </DropdownMenuTrigger>
    92 |           <DropdownMenuContent align="end">
  > 93 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
       |              ^^^^^^^^^^^^^^^^^
    94 |             <DropdownMenuItem
    95 |               onClick={() => navigator.clipboard.writeText(invoice.id)}
    96 |             >

ERROR in src/modules/accounting/pages/Contracts.tsx:34:36
TS2322: Type '{ id: string; contractNumber: string; startDate: string; endDate: string; client: string; value: number; status: string; }[]' is not assignable to type 'Invoice[]'.
  Type '{ id: string; contractNumber: string; startDate: string; endDate: string; client: string; value: number; status: string; }' is missing the following properties from type 'Invoice': invoiceNumber, date, customer, amount
    32 |         <Button>Create New Contract</Button>
    33 |       </div>
  > 34 |       <DataTable columns={columns} data={data} />
       |                                    ^^^^
    35 |     </div>
    36 |   );
    37 | }

ERROR in src/modules/accounting/pages/contracts/columns.tsx:50:12
TS2786: 'ArrowUpDown' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    48 |         >
    49 |           Value
  > 50 |           <ArrowUpDown className="ml-2 h-4 w-4" />
       |            ^^^^^^^^^^^
    51 |         </Button>
    52 |       )
    53 |     },

ERROR in src/modules/accounting/pages/contracts/columns.tsx:91:32
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    89 |       return (
    90 |         <DropdownMenu>
  > 91 |           <DropdownMenuTrigger asChild>
       |                                ^^^^^^^
    92 |             <Button variant="ghost" className="h-8 w-8 p-0">
    93 |               <span className="sr-only">Open menu</span>
    94 |               <MoreHorizontal className="h-4 w-4" />

ERROR in src/modules/accounting/pages/contracts/columns.tsx:94:16
TS2786: 'MoreHorizontal' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    92 |             <Button variant="ghost" className="h-8 w-8 p-0">
    93 |               <span className="sr-only">Open menu</span>
  > 94 |               <MoreHorizontal className="h-4 w-4" />
       |                ^^^^^^^^^^^^^^
    95 |             </Button>
    96 |           </DropdownMenuTrigger>
    97 |           <DropdownMenuContent align="end">

ERROR in src/modules/accounting/pages/contracts/columns.tsx:97:32
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
     95 |             </Button>
     96 |           </DropdownMenuTrigger>
  >  97 |           <DropdownMenuContent align="end">
        |                                ^^^^^
     98 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
     99 |             <DropdownMenuItem
    100 |               onClick={() => navigator.clipboard.writeText(contract.id)}

ERROR in src/modules/accounting/pages/contracts/columns.tsx:98:14
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
     96 |           </DropdownMenuTrigger>
     97 |           <DropdownMenuContent align="end">
  >  98 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
        |              ^^^^^^^^^^^^^^^^^
     99 |             <DropdownMenuItem
    100 |               onClick={() => navigator.clipboard.writeText(contract.id)}
    101 |             >

ERROR in src/modules/accounting/pages/Invoices.tsx:32:18
TS2322: Type 'ColumnDef<Invoice>[]' is not assignable to type 'ColumnDef<{ id: string; invoiceNumber: string; date: string; customer: string; amount: number; status: string; }, unknown>[]'.
  Type 'ColumnDef<Invoice>' is not assignable to type 'ColumnDef<{ id: string; invoiceNumber: string; date: string; customer: string; amount: number; status: string; }, unknown>'.
    Type 'ColumnDefBase<Invoice, unknown> & StringHeaderIdentifier' is not assignable to type 'ColumnDef<{ id: string; invoiceNumber: string; date: string; customer: string; amount: number; status: string; }, unknown>'.
      Type 'ColumnDefBase<Invoice, unknown> & StringHeaderIdentifier' is not assignable to type 'AccessorFnColumnDefBase<{ id: string; invoiceNumber: string; date: string; customer: string; amount: number; status: string; }, unknown> & IdIdentifier<{ id: string; invoiceNumber: string; date: string; customer: string; amount: number; status: string; }, unknown>'.
        Property 'accessorFn' is missing in type 'ColumnDefBase<Invoice, unknown> & StringHeaderIdentifier' but required in type 'AccessorFnColumnDefBase<{ id: string; invoiceNumber: string; date: string; customer: string; amount: number; status: string; }, unknown>'.
    30 |         <Button>Create New Invoice</Button>
    31 |       </div>
  > 32 |       <DataTable columns={columns} data={data} />
       |                  ^^^^^^^
    33 |     </div>
    34 |   );
    35 | }

ERROR in src/modules/accounting/pages/Proformas.tsx:32:36
TS2322: Type '{ id: string; proformaNumber: string; date: string; client: string; amount: number; status: string; }[]' is not assignable to type 'Invoice[]'.
  Type '{ id: string; proformaNumber: string; date: string; client: string; amount: number; status: string; }' is missing the following properties from type 'Invoice': invoiceNumber, customer
    30 |         <Button>Create New Proforma</Button>
    31 |       </div>
  > 32 |       <DataTable columns={columns} data={data} />
       |                                    ^^^^
    33 |     </div>
    34 |   );
    35 | }

ERROR in src/modules/accounting/pages/proformas/columns.tsx:45:12
TS2786: 'ArrowUpDown' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    43 |         >
    44 |           Amount
  > 45 |           <ArrowUpDown className="ml-2 h-4 w-4" />
       |            ^^^^^^^^^^^
    46 |         </Button>
    47 |       )
    48 |     },

ERROR in src/modules/accounting/pages/proformas/columns.tsx:88:32
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    86 |       return (
    87 |         <DropdownMenu>
  > 88 |           <DropdownMenuTrigger asChild>
       |                                ^^^^^^^
    89 |             <Button variant="ghost" className="h-8 w-8 p-0">
    90 |               <span className="sr-only">Open menu</span>
    91 |               <MoreHorizontal className="h-4 w-4" />

ERROR in src/modules/accounting/pages/proformas/columns.tsx:91:16
TS2786: 'MoreHorizontal' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    89 |             <Button variant="ghost" className="h-8 w-8 p-0">
    90 |               <span className="sr-only">Open menu</span>
  > 91 |               <MoreHorizontal className="h-4 w-4" />
       |                ^^^^^^^^^^^^^^
    92 |             </Button>
    93 |           </DropdownMenuTrigger>
    94 |           <DropdownMenuContent align="end">

ERROR in src/modules/accounting/pages/proformas/columns.tsx:94:32
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    92 |             </Button>
    93 |           </DropdownMenuTrigger>
  > 94 |           <DropdownMenuContent align="end">
       |                                ^^^^^
    95 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
    96 |             <DropdownMenuItem
    97 |               onClick={() => navigator.clipboard.writeText(proforma.id)}

ERROR in src/modules/accounting/pages/proformas/columns.tsx:95:14
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
    93 |           </DropdownMenuTrigger>
    94 |           <DropdownMenuContent align="end">
  > 95 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
       |              ^^^^^^^^^^^^^^^^^
    96 |             <DropdownMenuItem
    97 |               onClick={() => navigator.clipboard.writeText(proforma.id)}
    98 |             >

ERROR in src/modules/hr/DepartmentForm.tsx:9:18
TS2305: Module '"../../components/ui/select"' has no exported member 'SelectContent'.
     7 | import { Label } from '../../components/ui/label';
     8 | import { Textarea } from '../../components/ui/textarea';
  >  9 | import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../components/ui/select';
       |                  ^^^^^^^^^^^^^
    10 | import { Department } from '@/types/department';
    11 |
    12 | const departmentSchema = z.object({

ERROR in src/modules/hr/DepartmentForm.tsx:9:33
TS2305: Module '"../../components/ui/select"' has no exported member 'SelectItem'.
     7 | import { Label } from '../../components/ui/label';
     8 | import { Textarea } from '../../components/ui/textarea';
  >  9 | import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../components/ui/select';
       |                                 ^^^^^^^^^^
    10 | import { Department } from '@/types/department';
    11 |
    12 | const departmentSchema = z.object({

ERROR in src/modules/hr/DepartmentForm.tsx:9:45
TS2305: Module '"../../components/ui/select"' has no exported member 'SelectTrigger'.
     7 | import { Label } from '../../components/ui/label';
     8 | import { Textarea } from '../../components/ui/textarea';
  >  9 | import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../components/ui/select';
       |                                             ^^^^^^^^^^^^^
    10 | import { Department } from '@/types/department';
    11 |
    12 | const departmentSchema = z.object({

ERROR in src/modules/hr/DepartmentForm.tsx:9:60
TS2305: Module '"../../components/ui/select"' has no exported member 'SelectValue'.
     7 | import { Label } from '../../components/ui/label';
     8 | import { Textarea } from '../../components/ui/textarea';
  >  9 | import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../components/ui/select';
       |                                                            ^^^^^^^^^^^
    10 | import { Department } from '@/types/department';
    11 |
    12 | const departmentSchema = z.object({

ERROR in src/modules/hr/DepartmentForm.tsx:43:11
TS2322: Type '{ error: string | undefined; onChange: ChangeHandler; onBlur: ChangeHandler; ref: RefCallBack; name: "name"; min?: string | number | undefined; ... 6 more ...; id: string; }' is not assignable to type 'IntrinsicAttributes & InputProps & RefAttributes<HTMLInputElement>'.
  Property 'error' does not exist on type 'IntrinsicAttributes & InputProps & RefAttributes<HTMLInputElement>'. Did you mean 'onError'?
    41 |           id="name"
    42 |           {...register('name')}
  > 43 |           error={errors.name?.message}
       |           ^^^^^
    44 |         />
    45 |       </div>
    46 |

ERROR in src/modules/hr/DepartmentForm.tsx:52:11
TS2322: Type '{ error: string | undefined; onChange: ChangeHandler; onBlur: ChangeHandler; ref: RefCallBack; name: "description"; min?: string | number | undefined; ... 6 more ...; id: string; }' is not assignable to type 'IntrinsicAttributes & TextareaProps & RefAttributes<HTMLTextAreaElement>'.
  Property 'error' does not exist on type 'IntrinsicAttributes & TextareaProps & RefAttributes<HTMLTextAreaElement>'. Did you mean 'onError'?
    50 |           id="description"
    51 |           {...register('description')}
  > 52 |           error={errors.description?.message}
       |           ^^^^^
    53 |         />
    54 |       </div>
    55 |

ERROR in src/modules/hr/DepartmentForm.tsx:59:11
TS2322: Type '{ children: Element[]; onValueChange: (value: any) => void; defaultValue: any; }' is not assignable to type 'IntrinsicAttributes & SelectProps & RefAttributes<HTMLSelectElement>'.
  Property 'onValueChange' does not exist on type 'IntrinsicAttributes & SelectProps & RefAttributes<HTMLSelectElement>'. Did you mean 'onVolumeChange'?
    57 |         <Label htmlFor="manager">Manager</Label>
    58 |         <Select
  > 59 |           onValueChange={(value) => setValue('manager', value)}
       |           ^^^^^^^^^^^^^
    60 |           defaultValue={initialData?.manager}
    61 |         >
    62 |           <SelectTrigger>

ERROR in src/modules/hr/DepartmentForm.tsx:59:27
TS7006: Parameter 'value' implicitly has an 'any' type.
    57 |         <Label htmlFor="manager">Manager</Label>
    58 |         <Select
  > 59 |           onValueChange={(value) => setValue('manager', value)}
       |                           ^^^^^
    60 |           defaultValue={initialData?.manager}
    61 |         >
    62 |           <SelectTrigger>

ERROR in src/modules/hr/DepartmentForm.tsx:60:38
TS2551: Property 'manager' does not exist on type 'Department'. Did you mean 'managerId'?
    58 |         <Select
    59 |           onValueChange={(value) => setValue('manager', value)}
  > 60 |           defaultValue={initialData?.manager}
       |                                      ^^^^^^^
    61 |         >
    62 |           <SelectTrigger>
    63 |             <SelectValue placeholder="Select manager" />

ERROR in src/modules/hr/DepartmentList.tsx:53:18
TS2322: Type 'ColumnDef<Department>[]' is not assignable to type 'ColumnDef<unknown, unknown>[]'.
  Type 'ColumnDef<Department>' is not assignable to type 'ColumnDef<unknown, unknown>'.
    Type 'ColumnDefBase<Department, unknown> & StringHeaderIdentifier' is not assignable to type 'ColumnDef<unknown, unknown>'.
      Type 'ColumnDefBase<Department, unknown> & StringHeaderIdentifier' is not assignable to type 'AccessorFnColumnDefBase<unknown, unknown> & IdIdentifier<unknown, unknown>'.
        Property 'accessorFn' is missing in type 'ColumnDefBase<Department, unknown> & StringHeaderIdentifier' but required in type 'AccessorFnColumnDefBase<unknown, unknown>'.
    51 |     <div className="container mx-auto py-6">
    52 |       <h1 className="text-2xl font-bold mb-4">Departments</h1>
  > 53 |       <DataTable columns={columns} data={departments} loading={loading} />
       |                  ^^^^^^^
    54 |     </div>
    55 |   );
    56 | };

ERROR in src/modules/hr/DepartmentService.tsx:14:22
TS2322: Type '{ children: Element; value: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'value' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    12 |           <TabsTrigger value="add">Add Department</TabsTrigger>
    13 |         </TabsList>
  > 14 |         <TabsContent value="list">
       |                      ^^^^^
    15 |           <DepartmentList />
    16 |         </TabsContent>
    17 |         <TabsContent value="add">

ERROR in src/modules/hr/DepartmentService.tsx:17:22
TS2322: Type '{ children: Element; value: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'value' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    15 |           <DepartmentList />
    16 |         </TabsContent>
  > 17 |         <TabsContent value="add">
       |                      ^^^^^
    18 |           <DepartmentForm onSubmit={(data) => {
    19 |             // TODO: Handle form submission
    20 |             console.log(data);

ERROR in src/modules/hr/EmployeeDetails.tsx:71:51
TS2551: Property 'department' does not exist on type 'Employee'. Did you mean 'departmentId'?
    69 |                   Work Information
    70 |                 </Typography>
  > 71 |                 <Typography>Department: {employee.department}</Typography>
       |                                                   ^^^^^^^^^^
    72 |                 <Typography>Position: {employee.position}</Typography>
    73 |                 <Typography>Hire Date: {employee.hireDate}</Typography>
    74 |               </Paper>

ERROR in src/modules/hr/EmployeeDetails.tsx:72:49
TS2551: Property 'position' does not exist on type 'Employee'. Did you mean 'positionId'?
    70 |                 </Typography>
    71 |                 <Typography>Department: {employee.department}</Typography>
  > 72 |                 <Typography>Position: {employee.position}</Typography>
       |                                                 ^^^^^^^^
    73 |                 <Typography>Hire Date: {employee.hireDate}</Typography>
    74 |               </Paper>
    75 |             </Grid>

ERROR in src/modules/hr/EmployeeForm.tsx:91:42
TS2551: Property 'department' does not exist on type 'Employee'. Did you mean 'departmentId'?
    89 |               label="Department"
    90 |               {...register('department')}
  > 91 |               defaultValue={initialData?.department}
       |                                          ^^^^^^^^^^
    92 |             >
    93 |               {/* TODO: Add department options */}
    94 |             </Select>

ERROR in src/modules/hr/EmployeeForm.tsx:103:42
TS2551: Property 'position' does not exist on type 'Employee'. Did you mean 'positionId'?
    101 |               label="Position"
    102 |               {...register('position')}
  > 103 |               defaultValue={initialData?.position}
        |                                          ^^^^^^^^
    104 |             >
    105 |               {/* TODO: Add position options */}
    106 |             </Select>

ERROR in src/modules/hr/EmployeeList.tsx:59:38
TS2551: Property 'department' does not exist on type 'Employee'. Did you mean 'departmentId'?
    57 |                 <TableCell>{employee.lastName}</TableCell>
    58 |                 <TableCell>{employee.email}</TableCell>
  > 59 |                 <TableCell>{employee.department}</TableCell>
       |                                      ^^^^^^^^^^
    60 |                 <TableCell>{employee.position}</TableCell>
    61 |                 <TableCell>
    62 |                   <Button

ERROR in src/modules/hr/EmployeeList.tsx:60:38
TS2551: Property 'position' does not exist on type 'Employee'. Did you mean 'positionId'?
    58 |                 <TableCell>{employee.email}</TableCell>
    59 |                 <TableCell>{employee.department}</TableCell>
  > 60 |                 <TableCell>{employee.position}</TableCell>
       |                                      ^^^^^^^^
    61 |                 <TableCell>
    62 |                   <Button
    63 |                     variant="outlined"

ERROR in src/modules/hr/EmployeeService.tsx:14:22
TS2322: Type '{ children: Element; value: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'value' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    12 |           <TabsTrigger value="add">Add Employee</TabsTrigger>
    13 |         </TabsList>
  > 14 |         <TabsContent value="list">
       |                      ^^^^^
    15 |           <EmployeeList />
    16 |         </TabsContent>
    17 |         <TabsContent value="add">

ERROR in src/modules/hr/EmployeeService.tsx:15:12
TS2739: Type '{}' is missing the following properties from type 'EmployeeListProps': employees, loading
    13 |         </TabsList>
    14 |         <TabsContent value="list">
  > 15 |           <EmployeeList />
       |            ^^^^^^^^^^^^
    16 |         </TabsContent>
    17 |         <TabsContent value="add">
    18 |           <EmployeeForm onSubmit={(data) => {

ERROR in src/modules/hr/EmployeeService.tsx:17:22
TS2322: Type '{ children: Element; value: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'value' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    15 |           <EmployeeList />
    16 |         </TabsContent>
  > 17 |         <TabsContent value="add">
       |                      ^^^^^
    18 |           <EmployeeForm onSubmit={(data) => {
    19 |             // TODO: Handle form submission
    20 |             console.log(data);

ERROR in src/modules/hr/pages/Departments.tsx:32:18
TS2322: Type 'ColumnDef<Department>[]' is not assignable to type 'ColumnDef<{ id: string; name: string; description: string; manager: string; employeeCount: number; status: string; }, unknown>[]'.
  Type 'ColumnDef<Department>' is not assignable to type 'ColumnDef<{ id: string; name: string; description: string; manager: string; employeeCount: number; status: string; }, unknown>'.
    Type 'ColumnDefBase<Department, unknown> & StringHeaderIdentifier' is not assignable to type 'ColumnDef<{ id: string; name: string; description: string; manager: string; employeeCount: number; status: string; }, unknown>'.
      Type 'ColumnDefBase<Department, unknown> & StringHeaderIdentifier' is not assignable to type 'AccessorFnColumnDefBase<{ id: string; name: string; description: string; manager: string; employeeCount: number; status: string; }, unknown> & IdIdentifier<{ id: string; name: string; description: string; manager: string; employeeCount: number; status: string; }, unknown>'.
        Property 'accessorFn' is missing in type 'ColumnDefBase<Department, unknown> & StringHeaderIdentifier' but required in type 'AccessorFnColumnDefBase<{ id: string; name: string; description: string; manager: string; employeeCount: number; status: string; }, unknown>'.
    30 |         <Button>Add Department</Button>
    31 |       </div>
  > 32 |       <DataTable columns={columns} data={data} />
       |                  ^^^^^^^
    33 |     </div>
    34 |   );
    35 | }

ERROR in src/modules/hr/pages/departments/columns.tsx:67:32
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    65 |       return (
    66 |         <DropdownMenu>
  > 67 |           <DropdownMenuTrigger asChild>
       |                                ^^^^^^^
    68 |             <Button variant="ghost" className="h-8 w-8 p-0">
    69 |               <span className="sr-only">Open menu</span>
    70 |               <MoreHorizontal className="h-4 w-4" />

ERROR in src/modules/hr/pages/departments/columns.tsx:70:16
TS2786: 'MoreHorizontal' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    68 |             <Button variant="ghost" className="h-8 w-8 p-0">
    69 |               <span className="sr-only">Open menu</span>
  > 70 |               <MoreHorizontal className="h-4 w-4" />
       |                ^^^^^^^^^^^^^^
    71 |             </Button>
    72 |           </DropdownMenuTrigger>
    73 |           <DropdownMenuContent align="end">

ERROR in src/modules/hr/pages/departments/columns.tsx:73:32
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    71 |             </Button>
    72 |           </DropdownMenuTrigger>
  > 73 |           <DropdownMenuContent align="end">
       |                                ^^^^^
    74 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
    75 |             <DropdownMenuItem
    76 |               onClick={() => navigator.clipboard.writeText(department.id)}

ERROR in src/modules/hr/pages/departments/columns.tsx:74:14
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
    72 |           </DropdownMenuTrigger>
    73 |           <DropdownMenuContent align="end">
  > 74 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
       |              ^^^^^^^^^^^^^^^^^
    75 |             <DropdownMenuItem
    76 |               onClick={() => navigator.clipboard.writeText(department.id)}
    77 |             >

ERROR in src/modules/hr/pages/Employees.tsx:40:18
TS2322: Type 'ColumnDef<Employee>[]' is not assignable to type 'ColumnDef<{ id: string; firstName: string; lastName: string; email: string; phone: string; department: string; position: string; hireDate: string; salary: number; status: string; }, unknown>[]'.
  Type 'ColumnDef<Employee>' is not assignable to type 'ColumnDef<{ id: string; firstName: string; lastName: string; email: string; phone: string; department: string; position: string; hireDate: string; salary: number; status: string; }, unknown>'.
    Type 'ColumnDefBase<Employee, unknown> & StringHeaderIdentifier' is not assignable to type 'ColumnDef<{ id: string; firstName: string; lastName: string; email: string; phone: string; department: string; position: string; hireDate: string; salary: number; status: string; }, unknown>'.
      Type 'ColumnDefBase<Employee, unknown> & StringHeaderIdentifier' is not assignable to type 'AccessorFnColumnDefBase<{ id: string; firstName: string; lastName: string; email: string; phone: string; department: string; position: string; hireDate: string; salary: number; status: string; }, unknown> & IdIdentifier<...>'.
        Property 'accessorFn' is missing in type 'ColumnDefBase<Employee, unknown> & StringHeaderIdentifier' but required in type 'AccessorFnColumnDefBase<{ id: string; firstName: string; lastName: string; email: string; phone: string; department: string; position: string; hireDate: string; salary: number; status: string; }, unknown>'.
    38 |         <Button>Add Employee</Button>
    39 |       </div>
  > 40 |       <DataTable columns={columns} data={data} />
       |                  ^^^^^^^
    41 |     </div>
    42 |   );
    43 | }

ERROR in src/modules/hr/pages/employees/columns.tsx:87:32
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    85 |       return (
    86 |         <DropdownMenu>
  > 87 |           <DropdownMenuTrigger asChild>
       |                                ^^^^^^^
    88 |             <Button variant="ghost" className="h-8 w-8 p-0">
    89 |               <span className="sr-only">Open menu</span>
    90 |               <MoreHorizontal className="h-4 w-4" />

ERROR in src/modules/hr/pages/employees/columns.tsx:90:16
TS2786: 'MoreHorizontal' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    88 |             <Button variant="ghost" className="h-8 w-8 p-0">
    89 |               <span className="sr-only">Open menu</span>
  > 90 |               <MoreHorizontal className="h-4 w-4" />
       |                ^^^^^^^^^^^^^^
    91 |             </Button>
    92 |           </DropdownMenuTrigger>
    93 |           <DropdownMenuContent align="end">

ERROR in src/modules/hr/pages/employees/columns.tsx:93:32
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    91 |             </Button>
    92 |           </DropdownMenuTrigger>
  > 93 |           <DropdownMenuContent align="end">
       |                                ^^^^^
    94 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
    95 |             <DropdownMenuItem
    96 |               onClick={() => navigator.clipboard.writeText(employee.id)}

ERROR in src/modules/hr/pages/employees/columns.tsx:94:14
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
    92 |           </DropdownMenuTrigger>
    93 |           <DropdownMenuContent align="end">
  > 94 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
       |              ^^^^^^^^^^^^^^^^^
    95 |             <DropdownMenuItem
    96 |               onClick={() => navigator.clipboard.writeText(employee.id)}
    97 |             >

ERROR in src/modules/hr/pages/leave-requests/columns.tsx:64:32
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    62 |       return (
    63 |         <DropdownMenu>
  > 64 |           <DropdownMenuTrigger asChild>
       |                                ^^^^^^^
    65 |             <Button variant="ghost" className="h-8 w-8 p-0">
    66 |               <span className="sr-only">Open menu</span>
    67 |               <MoreHorizontal className="h-4 w-4" />

ERROR in src/modules/hr/pages/leave-requests/columns.tsx:67:16
TS2786: 'MoreHorizontal' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    65 |             <Button variant="ghost" className="h-8 w-8 p-0">
    66 |               <span className="sr-only">Open menu</span>
  > 67 |               <MoreHorizontal className="h-4 w-4" />
       |                ^^^^^^^^^^^^^^
    68 |             </Button>
    69 |           </DropdownMenuTrigger>
    70 |           <DropdownMenuContent align="end">

ERROR in src/modules/hr/pages/leave-requests/columns.tsx:70:32
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    68 |             </Button>
    69 |           </DropdownMenuTrigger>
  > 70 |           <DropdownMenuContent align="end">
       |                                ^^^^^
    71 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
    72 |             <DropdownMenuItem
    73 |               onClick={() => navigator.clipboard.writeText(request.id)}

ERROR in src/modules/hr/pages/leave-requests/columns.tsx:71:14
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
    69 |           </DropdownMenuTrigger>
    70 |           <DropdownMenuContent align="end">
  > 71 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
       |              ^^^^^^^^^^^^^^^^^
    72 |             <DropdownMenuItem
    73 |               onClick={() => navigator.clipboard.writeText(request.id)}
    74 |             >

ERROR in src/modules/hr/pages/LeaveRequests.tsx:34:18
TS2322: Type 'ColumnDef<LeaveRequest>[]' is not assignable to type 'ColumnDef<{ id: string; employee: string; type: string; startDate: string; endDate: string; status: string; reason: string; }, unknown>[]'.
  Type 'ColumnDef<LeaveRequest>' is not assignable to type 'ColumnDef<{ id: string; employee: string; type: string; startDate: string; endDate: string; status: string; reason: string; }, unknown>'.
    Type 'ColumnDefBase<LeaveRequest, unknown> & StringHeaderIdentifier' is not assignable to type 'ColumnDef<{ id: string; employee: string; type: string; startDate: string; endDate: string; status: string; reason: string; }, unknown>'.
      Type 'ColumnDefBase<LeaveRequest, unknown> & StringHeaderIdentifier' is not assignable to type 'AccessorFnColumnDefBase<{ id: string; employee: string; type: string; startDate: string; endDate: string; status: string; reason: string; }, unknown> & IdIdentifier<{ id: string; employee: string; ... 4 more ...; reason: string; }, unknown>'.
        Property 'accessorFn' is missing in type 'ColumnDefBase<LeaveRequest, unknown> & StringHeaderIdentifier' but required in type 'AccessorFnColumnDefBase<{ id: string; employee: string; type: string; startDate: string; endDate: string; status: string; reason: string; }, unknown>'.
    32 |         <Button>New Request</Button>
    33 |       </div>
  > 34 |       <DataTable columns={columns} data={data} />
       |                  ^^^^^^^
    35 |     </div>
    36 |   );
    37 | }

ERROR in src/modules/hr/pages/Payroll.tsx:34:18
TS2322: Type 'ColumnDef<Payroll>[]' is not assignable to type 'ColumnDef<{ id: string; employee: string; department: string; position: string; salary: number; paymentDate: string; status: string; }, unknown>[]'.
  Type 'ColumnDef<Payroll>' is not assignable to type 'ColumnDef<{ id: string; employee: string; department: string; position: string; salary: number; paymentDate: string; status: string; }, unknown>'.
    Type 'ColumnDefBase<Payroll, unknown> & StringHeaderIdentifier' is not assignable to type 'ColumnDef<{ id: string; employee: string; department: string; position: string; salary: number; paymentDate: string; status: string; }, unknown>'.
      Type 'ColumnDefBase<Payroll, unknown> & StringHeaderIdentifier' is not assignable to type 'AccessorFnColumnDefBase<{ id: string; employee: string; department: string; position: string; salary: number; paymentDate: string; status: string; }, unknown> & IdIdentifier<{ id: string; ... 5 more ...; status: string; }, unknown>'.
        Property 'accessorFn' is missing in type 'ColumnDefBase<Payroll, unknown> & StringHeaderIdentifier' but required in type 'AccessorFnColumnDefBase<{ id: string; employee: string; department: string; position: string; salary: number; paymentDate: string; status: string; }, unknown>'.
    32 |         <Button>Process Payroll</Button>
    33 |       </div>
  > 34 |       <DataTable columns={columns} data={data} />
       |                  ^^^^^^^
    35 |     </div>
    36 |   );
    37 | }

ERROR in src/modules/hr/pages/payroll/columns.tsx:73:32
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    71 |       return (
    72 |         <DropdownMenu>
  > 73 |           <DropdownMenuTrigger asChild>
       |                                ^^^^^^^
    74 |             <Button variant="ghost" className="h-8 w-8 p-0">
    75 |               <span className="sr-only">Open menu</span>
    76 |               <MoreHorizontal className="h-4 w-4" />

ERROR in src/modules/hr/pages/payroll/columns.tsx:76:16
TS2786: 'MoreHorizontal' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    74 |             <Button variant="ghost" className="h-8 w-8 p-0">
    75 |               <span className="sr-only">Open menu</span>
  > 76 |               <MoreHorizontal className="h-4 w-4" />
       |                ^^^^^^^^^^^^^^
    77 |             </Button>
    78 |           </DropdownMenuTrigger>
    79 |           <DropdownMenuContent align="end">

ERROR in src/modules/hr/pages/payroll/columns.tsx:79:32
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    77 |             </Button>
    78 |           </DropdownMenuTrigger>
  > 79 |           <DropdownMenuContent align="end">
       |                                ^^^^^
    80 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
    81 |             <DropdownMenuItem
    82 |               onClick={() => navigator.clipboard.writeText(payroll.id)}

ERROR in src/modules/hr/pages/payroll/columns.tsx:80:14
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
    78 |           </DropdownMenuTrigger>
    79 |           <DropdownMenuContent align="end">
  > 80 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
       |              ^^^^^^^^^^^^^^^^^
    81 |             <DropdownMenuItem
    82 |               onClick={() => navigator.clipboard.writeText(payroll.id)}
    83 |             >

ERROR in src/modules/hr/pages/performance-reviews/columns.tsx:67:32
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    65 |       return (
    66 |         <DropdownMenu>
  > 67 |           <DropdownMenuTrigger asChild>
       |                                ^^^^^^^
    68 |             <Button variant="ghost" className="h-8 w-8 p-0">
    69 |               <span className="sr-only">Open menu</span>
    70 |               <MoreHorizontal className="h-4 w-4" />

ERROR in src/modules/hr/pages/performance-reviews/columns.tsx:70:16
TS2786: 'MoreHorizontal' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    68 |             <Button variant="ghost" className="h-8 w-8 p-0">
    69 |               <span className="sr-only">Open menu</span>
  > 70 |               <MoreHorizontal className="h-4 w-4" />
       |                ^^^^^^^^^^^^^^
    71 |             </Button>
    72 |           </DropdownMenuTrigger>
    73 |           <DropdownMenuContent align="end">

ERROR in src/modules/hr/pages/performance-reviews/columns.tsx:73:32
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    71 |             </Button>
    72 |           </DropdownMenuTrigger>
  > 73 |           <DropdownMenuContent align="end">
       |                                ^^^^^
    74 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
    75 |             <DropdownMenuItem
    76 |               onClick={() => navigator.clipboard.writeText(review.id)}

ERROR in src/modules/hr/pages/performance-reviews/columns.tsx:74:14
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
    72 |           </DropdownMenuTrigger>
    73 |           <DropdownMenuContent align="end">
  > 74 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
       |              ^^^^^^^^^^^^^^^^^
    75 |             <DropdownMenuItem
    76 |               onClick={() => navigator.clipboard.writeText(review.id)}
    77 |             >

ERROR in src/modules/hr/pages/PerformanceReviews.tsx:32:18
TS2322: Type 'ColumnDef<PerformanceReview>[]' is not assignable to type 'ColumnDef<{ id: string; employee: string; reviewer: string; reviewDate: string; rating: number; status: string; }, unknown>[]'.
  Type 'ColumnDef<PerformanceReview>' is not assignable to type 'ColumnDef<{ id: string; employee: string; reviewer: string; reviewDate: string; rating: number; status: string; }, unknown>'.
    Type 'ColumnDefBase<PerformanceReview, unknown> & StringHeaderIdentifier' is not assignable to type 'ColumnDef<{ id: string; employee: string; reviewer: string; reviewDate: string; rating: number; status: string; }, unknown>'.
      Type 'ColumnDefBase<PerformanceReview, unknown> & StringHeaderIdentifier' is not assignable to type 'AccessorFnColumnDefBase<{ id: string; employee: string; reviewer: string; reviewDate: string; rating: number; status: string; }, unknown> & IdIdentifier<{ id: string; employee: string; reviewer: string; reviewDate: string; rating: number; status: string; }, unknown>'.
        Property 'accessorFn' is missing in type 'ColumnDefBase<PerformanceReview, unknown> & StringHeaderIdentifier' but required in type 'AccessorFnColumnDefBase<{ id: string; employee: string; reviewer: string; reviewDate: string; rating: number; status: string; }, unknown>'.
    30 |         <Button>New Review</Button>
    31 |       </div>
  > 32 |       <DataTable columns={columns} data={data} />
       |                  ^^^^^^^
    33 |     </div>
    34 |   );
    35 | }

ERROR in src/modules/hr/pages/Positions.tsx:34:18
TS2322: Type 'ColumnDef<Position>[]' is not assignable to type 'ColumnDef<{ id: string; title: string; department: string; minSalary: number; maxSalary: number; description: string; status: string; }, unknown>[]'.
  Type 'ColumnDef<Position>' is not assignable to type 'ColumnDef<{ id: string; title: string; department: string; minSalary: number; maxSalary: number; description: string; status: string; }, unknown>'.
    Type 'ColumnDefBase<Position, unknown> & StringHeaderIdentifier' is not assignable to type 'ColumnDef<{ id: string; title: string; department: string; minSalary: number; maxSalary: number; description: string; status: string; }, unknown>'.
      Type 'ColumnDefBase<Position, unknown> & StringHeaderIdentifier' is not assignable to type 'AccessorFnColumnDefBase<{ id: string; title: string; department: string; minSalary: number; maxSalary: number; description: string; status: string; }, unknown> & IdIdentifier<{ ...; }, unknown>'.
        Property 'accessorFn' is missing in type 'ColumnDefBase<Position, unknown> & StringHeaderIdentifier' but required in type 'AccessorFnColumnDefBase<{ id: string; title: string; department: string; minSalary: number; maxSalary: number; description: string; status: string; }, unknown>'.
    32 |         <Button>Add Position</Button>
    33 |       </div>
  > 34 |       <DataTable columns={columns} data={data} />
       |                  ^^^^^^^
    35 |     </div>
    36 |   );
    37 | }

ERROR in src/modules/hr/pages/positions/columns.tsx:81:32
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    79 |       return (
    80 |         <DropdownMenu>
  > 81 |           <DropdownMenuTrigger asChild>
       |                                ^^^^^^^
    82 |             <Button variant="ghost" className="h-8 w-8 p-0">
    83 |               <span className="sr-only">Open menu</span>
    84 |               <MoreHorizontal className="h-4 w-4" />

ERROR in src/modules/hr/pages/positions/columns.tsx:84:16
TS2786: 'MoreHorizontal' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    82 |             <Button variant="ghost" className="h-8 w-8 p-0">
    83 |               <span className="sr-only">Open menu</span>
  > 84 |               <MoreHorizontal className="h-4 w-4" />
       |                ^^^^^^^^^^^^^^
    85 |             </Button>
    86 |           </DropdownMenuTrigger>
    87 |           <DropdownMenuContent align="end">

ERROR in src/modules/hr/pages/positions/columns.tsx:87:32
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    85 |             </Button>
    86 |           </DropdownMenuTrigger>
  > 87 |           <DropdownMenuContent align="end">
       |                                ^^^^^
    88 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
    89 |             <DropdownMenuItem
    90 |               onClick={() => navigator.clipboard.writeText(position.id)}

ERROR in src/modules/hr/pages/positions/columns.tsx:88:14
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
    86 |           </DropdownMenuTrigger>
    87 |           <DropdownMenuContent align="end">
  > 88 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
       |              ^^^^^^^^^^^^^^^^^
    89 |             <DropdownMenuItem
    90 |               onClick={() => navigator.clipboard.writeText(position.id)}
    91 |             >

ERROR in src/modules/hr/pages/Recruitment.tsx:4:25
TS2306: File 'C:/Stock_HR/frontend/src/modules/hr/pages/recruitment/columns.tsx' is not a module.
    2 | import { Button } from '@/components/ui/button';
    3 | import { DataTable } from '@/components/ui/data-table';
  > 4 | import { columns } from './recruitment/columns';
      |                         ^^^^^^^^^^^^^^^^^^^^^^^
    5 |
    6 | const data = [
    7 |   {

ERROR in src/modules/hr/pages/Recruitment.tsx:34:8
TS2741: Property 'searchKey' is missing in type '{ columns: any; data: { id: string; position: string; department: string; candidate: string; applicationDate: string; status: string; source: string; }[]; }' but required in type 'DataTableProps<{ id: string; position: string; department: string; candidate: string; applicationDate: string; status: string; source: string; }, unknown>'.
    32 |         <Button>New Position</Button>
    33 |       </div>
  > 34 |       <DataTable columns={columns} data={data} />
       |        ^^^^^^^^^
    35 |     </div>
    36 |   );
    37 | }

ERROR in src/modules/hr/pages/Reports.tsx:32:18
TS2322: Type 'ColumnDef<Report>[]' is not assignable to type 'ColumnDef<{ id: string; title: string; type: string; createdBy: string; createdDate: string; status: string; }, unknown>[]'.
  Type 'ColumnDef<Report>' is not assignable to type 'ColumnDef<{ id: string; title: string; type: string; createdBy: string; createdDate: string; status: string; }, unknown>'.
    Type 'ColumnDefBase<Report, unknown> & StringHeaderIdentifier' is not assignable to type 'ColumnDef<{ id: string; title: string; type: string; createdBy: string; createdDate: string; status: string; }, unknown>'.
      Type 'ColumnDefBase<Report, unknown> & StringHeaderIdentifier' is not assignable to type 'AccessorFnColumnDefBase<{ id: string; title: string; type: string; createdBy: string; createdDate: string; status: string; }, unknown> & IdIdentifier<{ id: string; title: string; type: string; createdBy: string; createdDate: string; status: string; }, unknown>'.
        Property 'accessorFn' is missing in type 'ColumnDefBase<Report, unknown> & StringHeaderIdentifier' but required in type 'AccessorFnColumnDefBase<{ id: string; title: string; type: string; createdBy: string; createdDate: string; status: string; }, unknown>'.
    30 |         <Button>Generate Report</Button>
    31 |       </div>
  > 32 |       <DataTable columns={columns} data={data} />
       |                  ^^^^^^^
    33 |     </div>
    34 |   );
    35 | }

ERROR in src/modules/hr/pages/reports/columns.tsx:59:32
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    57 |       return (
    58 |         <DropdownMenu>
  > 59 |           <DropdownMenuTrigger asChild>
       |                                ^^^^^^^
    60 |             <Button variant="ghost" className="h-8 w-8 p-0">
    61 |               <span className="sr-only">Open menu</span>
    62 |               <MoreHorizontal className="h-4 w-4" />

ERROR in src/modules/hr/pages/reports/columns.tsx:62:16
TS2786: 'MoreHorizontal' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    60 |             <Button variant="ghost" className="h-8 w-8 p-0">
    61 |               <span className="sr-only">Open menu</span>
  > 62 |               <MoreHorizontal className="h-4 w-4" />
       |                ^^^^^^^^^^^^^^
    63 |             </Button>
    64 |           </DropdownMenuTrigger>
    65 |           <DropdownMenuContent align="end">

ERROR in src/modules/hr/pages/reports/columns.tsx:65:32
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    63 |             </Button>
    64 |           </DropdownMenuTrigger>
  > 65 |           <DropdownMenuContent align="end">
       |                                ^^^^^
    66 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
    67 |             <DropdownMenuItem
    68 |               onClick={() => navigator.clipboard.writeText(report.id)}

ERROR in src/modules/hr/pages/reports/columns.tsx:66:14
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
    64 |           </DropdownMenuTrigger>
    65 |           <DropdownMenuContent align="end">
  > 66 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
       |              ^^^^^^^^^^^^^^^^^
    67 |             <DropdownMenuItem
    68 |               onClick={() => navigator.clipboard.writeText(report.id)}
    69 |             >

ERROR in src/modules/hr/pages/Settings.tsx:11:8
TS2307: Cannot find module '@/components/ui/form' or its corresponding type declarations.
     9 |   FormLabel,
    10 |   FormMessage,
  > 11 | } from '@/components/ui/form';
       |        ^^^^^^^^^^^^^^^^^^^^^^
    12 | import { Input } from '@/components/ui/input';
    13 | import { Switch } from '@/components/ui/switch';
    14 | import { useForm } from 'react-hook-form';

ERROR in src/modules/hr/pages/Settings.tsx:54:24
TS7031: Binding element 'field' implicitly has an 'any' type.
    52 |             control={form.control}
    53 |             name="companyName"
  > 54 |             render={({ field }) => (
       |                        ^^^^^
    55 |               <FormItem>
    56 |                 <FormLabel>Company Name</FormLabel>
    57 |                 <FormControl>

ERROR in src/modules/hr/pages/Settings.tsx:70:24
TS7031: Binding element 'field' implicitly has an 'any' type.
    68 |             control={form.control}
    69 |             name="defaultLeaveDays"
  > 70 |             render={({ field }) => (
       |                        ^^^^^
    71 |               <FormItem>
    72 |                 <FormLabel>Default Leave Days</FormLabel>
    73 |                 <FormControl>

ERROR in src/modules/hr/pages/Settings.tsx:91:24
TS7031: Binding element 'field' implicitly has an 'any' type.
    89 |             control={form.control}
    90 |             name="enableAutoApproval"
  > 91 |             render={({ field }) => (
       |                        ^^^^^
    92 |               <FormItem className="flex flex-row items-center justify-between rounded-lg border p-4">
    93 |                 <div className="space-y-0.5">
    94 |                   <FormLabel className="text-base">Auto-approval</FormLabel>

ERROR in src/modules/hr/pages/Settings.tsx:102:21
TS2322: Type '{ checked: any; onCheckedChange: any; }' is not assignable to type 'IntrinsicAttributes & SwitchProps & RefAttributes<HTMLInputElement>'.
  Property 'onCheckedChange' does not exist on type 'IntrinsicAttributes & SwitchProps & RefAttributes<HTMLInputElement>'.
    100 |                   <Switch
    101 |                     checked={field.value}
  > 102 |                     onCheckedChange={field.onChange}
        |                     ^^^^^^^^^^^^^^^
    103 |                   />
    104 |                 </FormControl>
    105 |               </FormItem>

ERROR in src/modules/hr/pages/Settings.tsx:111:24
TS7031: Binding element 'field' implicitly has an 'any' type.
    109 |             control={form.control}
    110 |             name="enableEmailNotifications"
  > 111 |             render={({ field }) => (
        |                        ^^^^^
    112 |               <FormItem className="flex flex-row items-center justify-between rounded-lg border p-4">
    113 |                 <div className="space-y-0.5">
    114 |                   <FormLabel className="text-base">Email Notifications</FormLabel>

ERROR in src/modules/hr/pages/Settings.tsx:122:21
TS2322: Type '{ checked: any; onCheckedChange: any; }' is not assignable to type 'IntrinsicAttributes & SwitchProps & RefAttributes<HTMLInputElement>'.
  Property 'onCheckedChange' does not exist on type 'IntrinsicAttributes & SwitchProps & RefAttributes<HTMLInputElement>'.
    120 |                   <Switch
    121 |                     checked={field.value}
  > 122 |                     onCheckedChange={field.onChange}
        |                     ^^^^^^^^^^^^^^^
    123 |                   />
    124 |                 </FormControl>
    125 |               </FormItem>

ERROR in src/modules/hr/pages/Settings.tsx:131:24
TS7031: Binding element 'field' implicitly has an 'any' type.
    129 |             control={form.control}
    130 |             name="payrollRunDate"
  > 131 |             render={({ field }) => (
        |                        ^^^^^
    132 |               <FormItem>
    133 |                 <FormLabel>Payroll Run Date</FormLabel>
    134 |                 <FormControl>

ERROR in src/modules/hr/pages/Training.tsx:34:18
TS2322: Type 'ColumnDef<Training>[]' is not assignable to type 'ColumnDef<{ id: string; title: string; trainer: string; startDate: string; endDate: string; location: string; status: string; }, unknown>[]'.
  Type 'ColumnDef<Training>' is not assignable to type 'ColumnDef<{ id: string; title: string; trainer: string; startDate: string; endDate: string; location: string; status: string; }, unknown>'.
    Type 'ColumnDefBase<Training, unknown> & StringHeaderIdentifier' is not assignable to type 'ColumnDef<{ id: string; title: string; trainer: string; startDate: string; endDate: string; location: string; status: string; }, unknown>'.
      Type 'ColumnDefBase<Training, unknown> & StringHeaderIdentifier' is not assignable to type 'AccessorFnColumnDefBase<{ id: string; title: string; trainer: string; startDate: string; endDate: string; location: string; status: string; }, unknown> & IdIdentifier<{ id: string; ... 5 more ...; status: string; }, unknown>'.
        Property 'accessorFn' is missing in type 'ColumnDefBase<Training, unknown> & StringHeaderIdentifier' but required in type 'AccessorFnColumnDefBase<{ id: string; title: string; trainer: string; startDate: string; endDate: string; location: string; status: string; }, unknown>'.
    32 |         <Button>New Training</Button>
    33 |       </div>
  > 34 |       <DataTable columns={columns} data={data} />
       |                  ^^^^^^^
    35 |     </div>
    36 |   );
    37 | }

ERROR in src/modules/hr/pages/training/columns.tsx:65:32
TS2322: Type '{ children: Element; asChild: true; }' is not assignable to type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
  Property 'asChild' does not exist on type 'IntrinsicAttributes & ButtonHTMLAttributes<HTMLButtonElement> & RefAttributes<HTMLButtonElement>'.
    63 |       return (
    64 |         <DropdownMenu>
  > 65 |           <DropdownMenuTrigger asChild>
       |                                ^^^^^^^
    66 |             <Button variant="ghost" className="h-8 w-8 p-0">
    67 |               <span className="sr-only">Open menu</span>
    68 |               <MoreHorizontal className="h-4 w-4" />

ERROR in src/modules/hr/pages/training/columns.tsx:68:16
TS2786: 'MoreHorizontal' cannot be used as a JSX component.
  Its type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not a valid JSX element type.
    Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("C:/Stock_HR/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'bigint' is not assignable to type 'ReactNode'.
    66 |             <Button variant="ghost" className="h-8 w-8 p-0">
    67 |               <span className="sr-only">Open menu</span>
  > 68 |               <MoreHorizontal className="h-4 w-4" />
       |                ^^^^^^^^^^^^^^
    69 |             </Button>
    70 |           </DropdownMenuTrigger>
    71 |           <DropdownMenuContent align="end">

ERROR in src/modules/hr/pages/training/columns.tsx:71:32
TS2322: Type '{ children: Element[]; align: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'align' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    69 |             </Button>
    70 |           </DropdownMenuTrigger>
  > 71 |           <DropdownMenuContent align="end">
       |                                ^^^^^
    72 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
    73 |             <DropdownMenuItem
    74 |               onClick={() => navigator.clipboard.writeText(training.id)}

ERROR in src/modules/hr/pages/training/columns.tsx:72:14
TS2559: Type '{ children: string; }' has no properties in common with type 'IntrinsicAttributes & { inset?: boolean | undefined; } & RefAttributes<never>'.
    70 |           </DropdownMenuTrigger>
    71 |           <DropdownMenuContent align="end">
  > 72 |             <DropdownMenuLabel>Actions</DropdownMenuLabel>
       |              ^^^^^^^^^^^^^^^^^
    73 |             <DropdownMenuItem
    74 |               onClick={() => navigator.clipboard.writeText(training.id)}
    75 |             >

ERROR in src/modules/hr/PositionForm.tsx:9:18
TS2305: Module '"@/components/ui/select"' has no exported member 'SelectContent'.
     7 | import { Label } from '@/components/ui/label';
     8 | import { Textarea } from '@/components/ui/textarea';
  >  9 | import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
       |                  ^^^^^^^^^^^^^
    10 | import { Position } from '@/types/position';
    11 |
    12 | const positionSchema = z.object({

ERROR in src/modules/hr/PositionForm.tsx:9:33
TS2305: Module '"@/components/ui/select"' has no exported member 'SelectItem'.
     7 | import { Label } from '@/components/ui/label';
     8 | import { Textarea } from '@/components/ui/textarea';
  >  9 | import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
       |                                 ^^^^^^^^^^
    10 | import { Position } from '@/types/position';
    11 |
    12 | const positionSchema = z.object({

ERROR in src/modules/hr/PositionForm.tsx:9:45
TS2305: Module '"@/components/ui/select"' has no exported member 'SelectTrigger'.
     7 | import { Label } from '@/components/ui/label';
     8 | import { Textarea } from '@/components/ui/textarea';
  >  9 | import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
       |                                             ^^^^^^^^^^^^^
    10 | import { Position } from '@/types/position';
    11 |
    12 | const positionSchema = z.object({

ERROR in src/modules/hr/PositionForm.tsx:9:60
TS2305: Module '"@/components/ui/select"' has no exported member 'SelectValue'.
     7 | import { Label } from '@/components/ui/label';
     8 | import { Textarea } from '@/components/ui/textarea';
  >  9 | import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
       |                                                            ^^^^^^^^^^^
    10 | import { Position } from '@/types/position';
    11 |
    12 | const positionSchema = z.object({

ERROR in src/modules/hr/PositionForm.tsx:44:11
TS2322: Type '{ error: string | undefined; onChange: ChangeHandler; onBlur: ChangeHandler; ref: RefCallBack; name: "title"; min?: string | number | undefined; ... 6 more ...; id: string; }' is not assignable to type 'IntrinsicAttributes & InputProps & RefAttributes<HTMLInputElement>'.
  Property 'error' does not exist on type 'IntrinsicAttributes & InputProps & RefAttributes<HTMLInputElement>'. Did you mean 'onError'?
    42 |           id="title"
    43 |           {...register('title')}
  > 44 |           error={errors.title?.message}
       |           ^^^^^
    45 |         />
    46 |       </div>
    47 |

ERROR in src/modules/hr/PositionForm.tsx:51:11
TS2322: Type '{ children: Element[]; onValueChange: (value: any) => void; defaultValue: any; }' is not assignable to type 'IntrinsicAttributes & SelectProps & RefAttributes<HTMLSelectElement>'.
  Property 'onValueChange' does not exist on type 'IntrinsicAttributes & SelectProps & RefAttributes<HTMLSelectElement>'. Did you mean 'onVolumeChange'?
    49 |         <Label htmlFor="department">Department</Label>
    50 |         <Select
  > 51 |           onValueChange={(value) => setValue('department', value)}
       |           ^^^^^^^^^^^^^
    52 |           defaultValue={initialData?.department}
    53 |         >
    54 |           <SelectTrigger>

ERROR in src/modules/hr/PositionForm.tsx:51:27
TS7006: Parameter 'value' implicitly has an 'any' type.
    49 |         <Label htmlFor="department">Department</Label>
    50 |         <Select
  > 51 |           onValueChange={(value) => setValue('department', value)}
       |                           ^^^^^
    52 |           defaultValue={initialData?.department}
    53 |         >
    54 |           <SelectTrigger>

ERROR in src/modules/hr/PositionForm.tsx:52:38
TS2551: Property 'department' does not exist on type 'Position'. Did you mean 'departmentId'?
    50 |         <Select
    51 |           onValueChange={(value) => setValue('department', value)}
  > 52 |           defaultValue={initialData?.department}
       |                                      ^^^^^^^^^^
    53 |         >
    54 |           <SelectTrigger>
    55 |             <SelectValue placeholder="Select department" />

ERROR in src/modules/hr/PositionForm.tsx:66:11
TS2322: Type '{ children: Element[]; onValueChange: (value: any) => void; defaultValue: any; }' is not assignable to type 'IntrinsicAttributes & SelectProps & RefAttributes<HTMLSelectElement>'.
  Property 'onValueChange' does not exist on type 'IntrinsicAttributes & SelectProps & RefAttributes<HTMLSelectElement>'. Did you mean 'onVolumeChange'?
    64 |         <Label htmlFor="level">Level</Label>
    65 |         <Select
  > 66 |           onValueChange={(value) => setValue('level', value)}
       |           ^^^^^^^^^^^^^
    67 |           defaultValue={initialData?.level}
    68 |         >
    69 |           <SelectTrigger>

ERROR in src/modules/hr/PositionForm.tsx:66:27
TS7006: Parameter 'value' implicitly has an 'any' type.
    64 |         <Label htmlFor="level">Level</Label>
    65 |         <Select
  > 66 |           onValueChange={(value) => setValue('level', value)}
       |                           ^^^^^
    67 |           defaultValue={initialData?.level}
    68 |         >
    69 |           <SelectTrigger>

ERROR in src/modules/hr/PositionForm.tsx:67:38
TS2339: Property 'level' does not exist on type 'Position'.
    65 |         <Select
    66 |           onValueChange={(value) => setValue('level', value)}
  > 67 |           defaultValue={initialData?.level}
       |                                      ^^^^^
    68 |         >
    69 |           <SelectTrigger>
    70 |             <SelectValue placeholder="Select level" />

ERROR in src/modules/hr/PositionForm.tsx:89:11
TS2322: Type '{ error: string | undefined; onChange: ChangeHandler; onBlur: ChangeHandler; ref: RefCallBack; name: "description"; min?: string | number | undefined; ... 6 more ...; id: string; }' is not assignable to type 'IntrinsicAttributes & TextareaProps & RefAttributes<HTMLTextAreaElement>'.
  Property 'error' does not exist on type 'IntrinsicAttributes & TextareaProps & RefAttributes<HTMLTextAreaElement>'. Did you mean 'onError'?
    87 |           id="description"
    88 |           {...register('description')}
  > 89 |           error={errors.description?.message}
       |           ^^^^^
    90 |         />
    91 |       </div>
    92 |

ERROR in src/modules/hr/PositionList.tsx:53:18
TS2322: Type 'ColumnDef<Position>[]' is not assignable to type 'ColumnDef<unknown, unknown>[]'.
  Type 'ColumnDef<Position>' is not assignable to type 'ColumnDef<unknown, unknown>'.
    Type 'ColumnDefBase<Position, unknown> & StringHeaderIdentifier' is not assignable to type 'ColumnDef<unknown, unknown>'.
      Type 'ColumnDefBase<Position, unknown> & StringHeaderIdentifier' is not assignable to type 'AccessorFnColumnDefBase<unknown, unknown> & IdIdentifier<unknown, unknown>'.
        Property 'accessorFn' is missing in type 'ColumnDefBase<Position, unknown> & StringHeaderIdentifier' but required in type 'AccessorFnColumnDefBase<unknown, unknown>'.
    51 |     <div className="container mx-auto py-6">
    52 |       <h1 className="text-2xl font-bold mb-4">Positions</h1>
  > 53 |       <DataTable columns={columns} data={positions} loading={loading} />
       |                  ^^^^^^^
    54 |     </div>
    55 |   );
    56 | };

ERROR in src/modules/hr/PositionService.tsx:14:22
TS2322: Type '{ children: Element; value: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'value' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    12 |           <TabsTrigger value="add">Add Position</TabsTrigger>
    13 |         </TabsList>
  > 14 |         <TabsContent value="list">
       |                      ^^^^^
    15 |           <PositionList />
    16 |         </TabsContent>
    17 |         <TabsContent value="add">

ERROR in src/modules/hr/PositionService.tsx:17:22
TS2322: Type '{ children: Element; value: string; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
  Property 'value' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.
    15 |           <PositionList />
    16 |         </TabsContent>
  > 17 |         <TabsContent value="add">
       |                      ^^^^^
    18 |           <PositionForm onSubmit={(data) => {
    19 |             // TODO: Handle form submission
    20 |             console.log(data);

ERROR in src/modules/shared/components/Layout.tsx:5:20
TS2307: Cannot find module './Navbar' or its corresponding type declarations.
    3 | import { Box, Container, CssBaseline } from '@mui/material';
    4 | import { useTheme } from '../../../hooks/useTheme';
  > 5 | import Navbar from './Navbar';
      |                    ^^^^^^^^^^
    6 | import Sidebar from './Sidebar';
    7 |
    8 | const Layout: React.FC = () => {

ERROR in src/modules/shared/components/Layout.tsx:6:21
TS2307: Cannot find module './Sidebar' or its corresponding type declarations.
    4 | import { useTheme } from '../../../hooks/useTheme';
    5 | import Navbar from './Navbar';
  > 6 | import Sidebar from './Sidebar';
      |                     ^^^^^^^^^^^
    7 |
    8 | const Layout: React.FC = () => {
    9 |   const { isDarkMode } = useTheme();

ERROR in src/modules/shared/config/routes.tsx:3:26
TS2307: Cannot find module '../types/user' or its corresponding type declarations.
    1 | import React from 'react';
    2 | import { RouteObject } from 'react-router-dom';
  > 3 | import { UserRole } from '../types/user';
      |                          ^^^^^^^^^^^^^^^
    4 |
    5 | // Stock Module
    6 | import StockList from '../../stock/pages/StockList';

ERROR in src/modules/shared/config/routes.tsx:26:38
TS2312: An interface can only extend an object type or intersection of object types with statically known members.
    24 | import Settings from '../../settings/pages/Settings';
    25 |
  > 26 | export interface RouteConfig extends RouteObject {
       |                                      ^^^^^^^^^^^
    27 |   roles?: UserRole[];
    28 |   permissions?: string[];
    29 |   children?: RouteConfig[];

ERROR in src/modules/shared/config/routes.tsx:36:5
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    34 | export const publicRoutes: RouteConfig[] = [
    35 |   {
  > 36 |     path: '/login',
       |     ^^^^
    37 |     element: <React.Suspense fallback={<div>Loading...</div>}>
    38 |       {React.createElement(React.lazy(() => import('../../auth/pages/Login')))}
    39 |     </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:42:5
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    40 |   },
    41 |   {
  > 42 |     path: '/register',
       |     ^^^^
    43 |     element: <React.Suspense fallback={<div>Loading...</div>}>
    44 |       {React.createElement(React.lazy(() => import('../../auth/pages/Register')))}
    45 |     </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:48:5
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    46 |   },
    47 |   {
  > 48 |     path: '/forgot-password',
       |     ^^^^
    49 |     element: <React.Suspense fallback={<div>Loading...</div>}>
    50 |       {React.createElement(React.lazy(() => import('../../auth/pages/ForgotPassword')))}
    51 |     </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:54:5
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    52 |   },
    53 |   {
  > 54 |     path: '/reset-password',
       |     ^^^^
    55 |     element: <React.Suspense fallback={<div>Loading...</div>}>
    56 |       {React.createElement(React.lazy(() => import('../../auth/pages/ResetPassword')))}
    57 |     </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:65:5
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    63 |   // Dashboard
    64 |   {
  > 65 |     path: '/dashboard',
       |     ^^^^
    66 |     element: <React.Suspense fallback={<div>Loading...</div>}>
    67 |       {React.createElement(React.lazy(() => import('../../dashboard/pages/Dashboard')))}
    68 |     </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:82:9
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    80 |     children: [
    81 |       {
  > 82 |         path: 'categories',
       |         ^^^^
    83 |         element: <React.Suspense fallback={<div>Loading...</div>}>
    84 |           {React.createElement(React.lazy(() => import('../../stock/pages/Categories')))}
    85 |         </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:90:9
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    88 |       },
    89 |       {
  > 90 |         path: 'suppliers',
       |         ^^^^
    91 |         element: <React.Suspense fallback={<div>Loading...</div>}>
    92 |           {React.createElement(React.lazy(() => import('../../stock/pages/Suppliers')))}
    93 |         </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:98:9
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
     96 |       },
     97 |       {
  >  98 |         path: 'movements',
        |         ^^^^
     99 |         element: <React.Suspense fallback={<div>Loading...</div>}>
    100 |           {React.createElement(React.lazy(() => import('../../stock/pages/Movements')))}
    101 |         </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:118:9
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    116 |     children: [
    117 |       {
  > 118 |         path: 'employees',
        |         ^^^^
    119 |         element: <React.Suspense fallback={<div>Loading...</div>}>
    120 |           <EmployeeService />
    121 |         </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:126:9
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    124 |       },
    125 |       {
  > 126 |         path: 'employees/:id',
        |         ^^^^
    127 |         element: <React.Suspense fallback={<div>Loading...</div>}>
    128 |           <EmployeeDetails />
    129 |         </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:134:9
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    132 |       },
    133 |       {
  > 134 |         path: 'departments',
        |         ^^^^
    135 |         element: <React.Suspense fallback={<div>Loading...</div>}>
    136 |           <DepartmentService />
    137 |         </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:142:9
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    140 |       },
    141 |       {
  > 142 |         path: 'positions',
        |         ^^^^
    143 |         element: <React.Suspense fallback={<div>Loading...</div>}>
    144 |           <PositionService />
    145 |         </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:162:9
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    160 |     children: [
    161 |       {
  > 162 |         path: 'invoices',
        |         ^^^^
    163 |         element: <React.Suspense fallback={<div>Loading...</div>}>
    164 |           {React.createElement(React.lazy(() => import('../../accounting/pages/Invoices')))}
    165 |         </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:170:9
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    168 |       },
    169 |       {
  > 170 |         path: 'contracts',
        |         ^^^^
    171 |         element: <React.Suspense fallback={<div>Loading...</div>}>
    172 |           {React.createElement(React.lazy(() => import('../../accounting/pages/Contracts')))}
    173 |         </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:178:9
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    176 |       },
    177 |       {
  > 178 |         path: 'proformas',
        |         ^^^^
    179 |         element: <React.Suspense fallback={<div>Loading...</div>}>
    180 |           {React.createElement(React.lazy(() => import('../../accounting/pages/Proformas')))}
    181 |         </React.Suspense>,

ERROR in src/modules/shared/config/routes.tsx:190:5
TS2353: Object literal may only specify known properties, and 'path' does not exist in type 'RouteConfig'.
    188 |   // Settings
    189 |   {
  > 190 |     path: '/settings',
        |     ^^^^
    191 |     element: <React.Suspense fallback={<div>Loading...</div>}>
    192 |       {React.createElement(React.lazy(() => import('../../settings/pages/Settings')))}
    193 |     </React.Suspense>,

ERROR in src/modules/shared/services/AssetService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | interface Asset {

ERROR in src/modules/shared/services/AssetTrackingService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 | import { statusManagementService } from './StatusManagementService';
    4 |

ERROR in src/modules/shared/services/AssetTrackingService.ts:124:9
TS2554: Expected 4 arguments, but got 6.
    122 |         newStatus,
    123 |         `ASSET_${newStatus.toUpperCase()}`,
  > 124 |         reason,
        |         ^^^^^^^
  > 125 |         userId
        | ^^^^^^^^^^^^^^^
    126 |       );
    127 |
    128 |       await api.patch(`/assets/${id}`, {

ERROR in src/modules/shared/services/AuditService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | export enum AuditAction {

ERROR in src/modules/shared/services/DashboardService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | export enum DashboardType {

ERROR in src/modules/shared/services/DepartmentService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | interface Department {

ERROR in src/modules/shared/services/EmployeeService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 | import { EmployeeStatus } from '../types/EmployeeStatus';
    4 |

ERROR in src/modules/shared/services/EventService.ts:115:14
TS2551: Property 'STOCK_ITEM_CREATED' does not exist on type 'typeof EventType'. Did you mean 'STOCK_ITEM_UPDATED'?
    113 |   [EventType.ASSET_STATUS_CHANGED]: { assetId: string; oldStatus: AssetStatus; newStatus: AssetStatus };
    114 |
  > 115 |   [EventType.STOCK_ITEM_CREATED]: { itemId: string; name: string; category: string };
        |              ^^^^^^^^^^^^^^^^^^
    116 |   [EventType.STOCK_ITEM_UPDATED]: { itemId: string; changes: Partial<{ name: string; category: string }> };
    117 |   [EventType.STOCK_ITEM_DELETED]: { itemId: string };
    118 |   [EventType.STOCK_MOVEMENT_CREATED]: { movementId: string; itemId: string; quantity: number; type: 'in' | 'out' | 'transfer'; userId: string };

ERROR in src/modules/shared/services/ExpenseService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | interface Expense {

ERROR in src/modules/shared/services/ExpenseTrackingService.ts:52:22
TS18046: 'response.data' is of type 'unknown'.
    50 |     try {
    51 |       const response = await api.post('/expenses', data);
  > 52 |       const result = response.data.data;
       |                      ^^^^^^^^^^^^^
    53 |
    54 |       // Emit event for cross-module communication
    55 |       eventService.emit(EventType.EXPENSE_CREATED, {

ERROR in src/modules/shared/services/ExpenseTrackingService.ts:73:14
TS18046: 'response.data' is of type 'unknown'.
    71 |     try {
    72 |       const response = await api.patch(`/expenses/${id}`, data);
  > 73 |       return response.data.data;
       |              ^^^^^^^^^^^^^
    74 |     } catch (error) {
    75 |       console.error('Failed to update expense:', error);
    76 |       throw error;

ERROR in src/modules/shared/services/ExpenseTrackingService.ts:83:22
TS18046: 'response.data' is of type 'unknown'.
    81 |     try {
    82 |       const response = await api.post(`/expenses/${id}/approve`, { approvedBy });
  > 83 |       const result = response.data.data;
       |                      ^^^^^^^^^^^^^
    84 |
    85 |       // Emit event for cross-module communication
    86 |       eventService.emit(EventType.EXPENSE_APPROVED, {

ERROR in src/modules/shared/services/ExpenseTrackingService.ts:110:14
TS18046: 'response.data' is of type 'unknown'.
    108 |     try {
    109 |       const response = await api.get('/expenses', { params: filters });
  > 110 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    111 |     } catch (error) {
    112 |       console.error('Failed to fetch expenses:', error);
    113 |       throw error;

ERROR in src/modules/shared/services/ExpenseTrackingService.ts:121:14
TS18046: 'response.data' is of type 'unknown'.
    119 |     try {
    120 |       const response = await api.get('/expense-categories');
  > 121 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    122 |     } catch (error) {
    123 |       console.error('Failed to fetch expense categories:', error);
    124 |       throw error;

ERROR in src/modules/shared/services/ExpenseTrackingService.ts:131:14
TS18046: 'response.data' is of type 'unknown'.
    129 |     try {
    130 |       const response = await api.post('/expense-categories', data);
  > 131 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    132 |     } catch (error) {
    133 |       console.error('Failed to create expense category:', error);
    134 |       throw error;

ERROR in src/modules/shared/services/ImportExportService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | export enum ImportExportType {

ERROR in src/modules/shared/services/InvoiceService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | interface Invoice {

ERROR in src/modules/shared/services/LoggingService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | export enum LogLevel {

ERROR in src/modules/shared/services/PositionService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | interface Position {

ERROR in src/modules/shared/services/ReportService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | export enum ReportType {

ERROR in src/modules/shared/services/SecurityService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | interface SecurityEvent {

ERROR in src/modules/shared/services/SettingsService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | export enum SettingType {

ERROR in src/modules/shared/services/StatusManagementService.ts:115:5
TS2322: Type 'unknown' is not assignable to type 'StatusChangeRecord'.
    113 |       reasonCode
    114 |     });
  > 115 |     return response.data;
        |     ^^^^^^
    116 |   }
    117 |
    118 |   async getStatusHistory(

ERROR in src/modules/shared/services/StatusManagementService.ts:123:5
TS2322: Type 'unknown' is not assignable to type 'StatusChangeRecord[]'.
    121 |   ): Promise<StatusChangeRecord[]> {
    122 |     const response = await api.get(`/status/history/${entityType}/${entityId}`);
  > 123 |     return response.data;
        |     ^^^^^^
    124 |   }
    125 |
    126 |   async getStatusReasons(

ERROR in src/modules/shared/services/StatusManagementService.ts:130:5
TS2322: Type 'unknown' is not assignable to type 'StatusChangeReason[]'.
    128 |   ): Promise<StatusChangeReason[]> {
    129 |     const response = await api.get(`/status/reasons/${type}`);
  > 130 |     return response.data;
        |     ^^^^^^
    131 |   }
    132 |
    133 |   private async handleEmployeeStatusChange(data: { employeeId: string; newStatus: EmployeeStatus }): Promise<void> {

ERROR in src/modules/shared/services/StockService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | interface StockItem {

ERROR in src/modules/shared/services/SystemService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | interface SystemInfo {

ERROR in src/modules/shared/services/UserService.ts:1:21
TS2307: Cannot find module '../../services/api' or its corresponding type declarations.
  > 1 | import { api } from '../../services/api';
      |                     ^^^^^^^^^^^^^^^^^^^^
    2 | import { eventService, EventType } from './EventService';
    3 |
    4 | interface User {

ERROR in src/modules/stock/pages/Dashboard.tsx:51:38
TS2554: Expected 0 arguments, but got 1.
    49 |         stockService.getAllInventoryItems(),
    50 |         stockService.getAllPurchaseOrders(),
  > 51 |         stockService.getAllMovements({ limit: 5 })
       |                                      ^^^^^^^^^^^^
    52 |       ]);
    53 |
    54 |       const lowStockItems = inventoryItems.filter(item => item.quantity <= item.minStockLevel);

ERROR in src/modules/stock/pages/Movements.tsx:99:38
TS2554: Expected 0 arguments, but got 1.
     97 |       setError(null);
     98 |       const [movementsData, itemsData] = await Promise.all([
  >  99 |         stockService.getAllMovements(filters),
        |                                      ^^^^^^^
    100 |         stockService.getAllInventoryItems(),
    101 |       ]);
    102 |       setMovements(movementsData);

ERROR in src/modules/stock/pages/Movements.tsx:126:26
TS2339: Property 'source' does not exist on type 'StockMovement'.
    124 |         quantity: movement.quantity,
    125 |         type: movement.type,
  > 126 |         source: movement.source || '',
        |                          ^^^^^^
    127 |         destination: movement.destination || '',
    128 |         notes: movement.notes || '',
    129 |       });

ERROR in src/modules/stock/pages/Movements.tsx:127:31
TS2339: Property 'destination' does not exist on type 'StockMovement'.
    125 |         type: movement.type,
    126 |         source: movement.source || '',
  > 127 |         destination: movement.destination || '',
        |                               ^^^^^^^^^^^
    128 |         notes: movement.notes || '',
    129 |       });
    130 |     } else {

ERROR in src/modules/stock/pages/Movements.tsx:203:60
TS2339: Property '_id' does not exist on type 'StockMovement'.
    201 |
    202 |       if (selectedMovement) {
  > 203 |         await stockService.updateMovement(selectedMovement._id, formData);
        |                                                            ^^^
    204 |         enqueueSnackbar('Movement updated successfully', { variant: 'success' });
    205 |       } else {
    206 |         await stockService.createMovement(formData);

ERROR in src/modules/stock/pages/Movements.tsx:226:28
TS2554: Expected 3 arguments, but got 1.
    224 |       setLoading(true);
    225 |       if (actionType === 'delete') {
  > 226 |         await stockService.deleteMovement(selectedMovement._id);
        |                            ^^^^^^^^^^^^^^
    227 |         enqueueSnackbar('Movement deleted successfully', { variant: 'success' });
    228 |       } else if (actionType === 'cancel') {
    229 |         await stockService.cancelMovement(selectedMovement._id);

ERROR in src/modules/stock/pages/Movements.tsx:226:60
TS2339: Property '_id' does not exist on type 'StockMovement'.
    224 |       setLoading(true);
    225 |       if (actionType === 'delete') {
  > 226 |         await stockService.deleteMovement(selectedMovement._id);
        |                                                            ^^^
    227 |         enqueueSnackbar('Movement deleted successfully', { variant: 'success' });
    228 |       } else if (actionType === 'cancel') {
    229 |         await stockService.cancelMovement(selectedMovement._id);

ERROR in src/modules/stock/pages/Movements.tsx:229:28
TS2554: Expected 3 arguments, but got 1.
    227 |         enqueueSnackbar('Movement deleted successfully', { variant: 'success' });
    228 |       } else if (actionType === 'cancel') {
  > 229 |         await stockService.cancelMovement(selectedMovement._id);
        |                            ^^^^^^^^^^^^^^
    230 |         enqueueSnackbar('Movement cancelled successfully', { variant: 'success' });
    231 |       }
    232 |       fetchData();

ERROR in src/modules/stock/pages/Movements.tsx:229:60
TS2339: Property '_id' does not exist on type 'StockMovement'.
    227 |         enqueueSnackbar('Movement deleted successfully', { variant: 'success' });
    228 |       } else if (actionType === 'cancel') {
  > 229 |         await stockService.cancelMovement(selectedMovement._id);
        |                                                            ^^^
    230 |         enqueueSnackbar('Movement cancelled successfully', { variant: 'success' });
    231 |       }
    232 |       fetchData();

ERROR in src/modules/stock/pages/Movements.tsx:342:39
TS2339: Property '_id' does not exist on type 'InventoryItem'.
    340 |                 <MenuItem value="">{t('common.all')}</MenuItem>
    341 |                 {inventoryItems.map((item) => (
  > 342 |                   <MenuItem key={item._id} value={item._id}>
        |                                       ^^^
    343 |                     {item.name}
    344 |                   </MenuItem>
    345 |                 ))}

ERROR in src/modules/stock/pages/Movements.tsx:342:56
TS2339: Property '_id' does not exist on type 'InventoryItem'.
    340 |                 <MenuItem value="">{t('common.all')}</MenuItem>
    341 |                 {inventoryItems.map((item) => (
  > 342 |                   <MenuItem key={item._id} value={item._id}>
        |                                                        ^^^
    343 |                     {item.name}
    344 |                   </MenuItem>
    345 |                 ))}

ERROR in src/modules/stock/pages/Movements.tsx:395:41
TS2339: Property '_id' does not exist on type 'StockMovement'.
    393 |             ) : (
    394 |               movements.map((movement) => (
  > 395 |                 <TableRow key={movement._id}>
        |                                         ^^^
    396 |                   <TableCell>{movement.reference}</TableCell>
    397 |                   <TableCell>
    398 |                     <Chip

ERROR in src/modules/stock/pages/Movements.tsx:406:55
TS2339: Property '_id' does not exist on type 'InventoryItem'.
    404 |                   <TableCell>{movement.quantity}</TableCell>
    405 |                   <TableCell>
  > 406 |                     {inventoryItems.find(item => item._id === movement.inventoryItem)?.name}
        |                                                       ^^^
    407 |                   </TableCell>
    408 |                   <TableCell>
    409 |                     <Chip

ERROR in src/modules/stock/pages/Movements.tsx:416:45
TS2339: Property 'name' does not exist on type 'string'.
    414 |                   </TableCell>
    415 |                   <TableCell>{format(new Date(movement.timestamp), 'dd/MM/yyyy HH:mm')}</TableCell>
  > 416 |                   <TableCell>{movement.user.name}</TableCell>
        |                                             ^^^^
    417 |                   <TableCell>
    418 |                     <Tooltip title={t('common.edit')}>
    419 |                       <IconButton

ERROR in src/modules/stock/pages/Movements.tsx:478:41
TS2339: Property '_id' does not exist on type 'InventoryItem'.
    476 |                 >
    477 |                   {inventoryItems.map((item) => (
  > 478 |                     <MenuItem key={item._id} value={item._id}>
        |                                         ^^^
    479 |                       {item.name}
    480 |                     </MenuItem>
    481 |                   ))}

ERROR in src/modules/stock/pages/Movements.tsx:478:58
TS2339: Property '_id' does not exist on type 'InventoryItem'.
    476 |                 >
    477 |                   {inventoryItems.map((item) => (
  > 478 |                     <MenuItem key={item._id} value={item._id}>
        |                                                          ^^^
    479 |                       {item.name}
    480 |                     </MenuItem>
    481 |                   ))}

ERROR in src/modules/stock/pages/PurchaseOrders.tsx:218:36
TS2339: Property '_id' does not exist on type 'PurchaseOrder'.
    216 |           <TableBody>
    217 |             {orders.map((order) => (
  > 218 |               <TableRow key={order._id}>
        |                                    ^^^
    219 |                 <TableCell>{order.reference}</TableCell>
    220 |                 <TableCell>
    221 |                   {suppliers.find(supplier => supplier._id === order.supplier)?.name}

ERROR in src/modules/stock/pages/PurchaseOrders.tsx:221:56
TS2339: Property '_id' does not exist on type 'Supplier'.
    219 |                 <TableCell>{order.reference}</TableCell>
    220 |                 <TableCell>
  > 221 |                   {suppliers.find(supplier => supplier._id === order.supplier)?.name}
        |                                                        ^^^
    222 |                 </TableCell>
    223 |                 <TableCell>
    224 |                   {new Intl.NumberFormat('en-US', {

ERROR in src/modules/stock/pages/PurchaseOrders.tsx:270:58
TS2339: Property '_id' does not exist on type 'Supplier'.
    268 |                   <Typography variant="subtitle2">{t('stock.purchaseOrders.supplier')}</Typography>
    269 |                   <Typography>
  > 270 |                     {suppliers.find(supplier => supplier._id === selectedOrder.supplier)?.name}
        |                                                          ^^^
    271 |                   </Typography>
    272 |                 </Grid>
    273 |                 <Grid item xs={12} md={6}>

ERROR in src/modules/stock/pages/PurchaseOrders.tsx:299:59
TS2339: Property '_id' does not exist on type 'InventoryItem'.
    297 |                           <TableRow key={index}>
    298 |                             <TableCell>
  > 299 |                               {inventoryItems.find(i => i._id === item.inventoryItem)?.name}
        |                                                           ^^^
    300 |                             </TableCell>
    301 |                             <TableCell align="right">{item.quantity}</TableCell>
    302 |                             <TableCell align="right">

ERROR in src/modules/stock/pages/PurchaseOrders.tsx:332:75
TS2339: Property '_id' does not exist on type 'PurchaseOrder'.
    330 |                       <Select
    331 |                         value={selectedOrder.status}
  > 332 |                         onChange={(e) => handleStatusUpdate(selectedOrder._id, e.target.value)}
        |                                                                           ^^^
    333 |                         label={t('stock.purchaseOrders.updateStatus')}
    334 |                       >
    335 |                         <MenuItem value="pending">{t('stock.purchaseOrders.status.pending')}</MenuItem>

ERROR in src/modules/stock/pages/PurchaseOrders.tsx:356:49
TS2339: Property '_id' does not exist on type 'Supplier'.
    354 |                     >
    355 |                       {suppliers.map((supplier) => (
  > 356 |                         <MenuItem key={supplier._id} value={supplier._id}>
        |                                                 ^^^
    357 |                           {supplier.name}
    358 |                         </MenuItem>
    359 |                       ))}

ERROR in src/modules/stock/pages/PurchaseOrders.tsx:356:70
TS2339: Property '_id' does not exist on type 'Supplier'.
    354 |                     >
    355 |                       {suppliers.map((supplier) => (
  > 356 |                         <MenuItem key={supplier._id} value={supplier._id}>
        |                                                                      ^^^
    357 |                           {supplier.name}
    358 |                         </MenuItem>
    359 |                       ))}

ERROR in src/modules/stock/pages/PurchaseOrders.tsx:395:54
TS2339: Property '_id' does not exist on type 'InventoryItem'.
    393 |                           >
    394 |                             {inventoryItems.map((invItem) => (
  > 395 |                               <MenuItem key={invItem._id} value={invItem._id}>
        |                                                      ^^^
    396 |                                 {invItem.name}
    397 |                               </MenuItem>
    398 |                             ))}

ERROR in src/modules/stock/pages/PurchaseOrders.tsx:395:74
TS2339: Property '_id' does not exist on type 'InventoryItem'.
    393 |                           >
    394 |                             {inventoryItems.map((invItem) => (
  > 395 |                               <MenuItem key={invItem._id} value={invItem._id}>
        |                                                                          ^^^
    396 |                                 {invItem.name}
    397 |                               </MenuItem>
    398 |                             ))}

ERROR in src/modules/stock/pages/StockList.tsx:128:44
TS2345: Argument of type 'AxiosXHR<unknown>' is not assignable to parameter of type 'ApiResponse<StockItem[]>'.
  Types of property 'data' are incompatible.
    Type 'unknown' is not assignable to type 'StockItem[]'.
    126 |       setLoading(true);
    127 |       const response = await api.get('/stock', { params: filters });
  > 128 |       setItems(getApiResponse<StockItem[]>(response));
        |                                            ^^^^^^^^
    129 |     } catch (error) {
    130 |       setError(handleApiError(error).message);
    131 |     } finally {

ERROR in src/modules/stock/pages/Suppliers.tsx:75:9
TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.
    73 |       setFormData({
    74 |         name: supplier.name,
  > 75 |         contactPerson: supplier.contactPerson,
       |         ^^^^^^^^^^^^^
    76 |         email: supplier.email,
    77 |         phone: supplier.phone,
    78 |         address: supplier.address,

ERROR in src/modules/stock/pages/Suppliers.tsx:76:9
TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.
    74 |         name: supplier.name,
    75 |         contactPerson: supplier.contactPerson,
  > 76 |         email: supplier.email,
       |         ^^^^^
    77 |         phone: supplier.phone,
    78 |         address: supplier.address,
    79 |         taxId: supplier.taxId || '',

ERROR in src/modules/stock/pages/Suppliers.tsx:77:9
TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.
    75 |         contactPerson: supplier.contactPerson,
    76 |         email: supplier.email,
  > 77 |         phone: supplier.phone,
       |         ^^^^^
    78 |         address: supplier.address,
    79 |         taxId: supplier.taxId || '',
    80 |       });

ERROR in src/modules/stock/pages/Suppliers.tsx:78:9
TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.
    76 |         email: supplier.email,
    77 |         phone: supplier.phone,
  > 78 |         address: supplier.address,
       |         ^^^^^^^
    79 |         taxId: supplier.taxId || '',
    80 |       });
    81 |     } else {

ERROR in src/modules/stock/pages/Suppliers.tsx:79:25
TS2339: Property 'taxId' does not exist on type 'Supplier'.
    77 |         phone: supplier.phone,
    78 |         address: supplier.address,
  > 79 |         taxId: supplier.taxId || '',
       |                         ^^^^^
    80 |       });
    81 |     } else {
    82 |       setEditingSupplier(null);

ERROR in src/modules/stock/pages/Suppliers.tsx:118:59
TS2339: Property '_id' does not exist on type 'Supplier'.
    116 |
    117 |       if (editingSupplier) {
  > 118 |         await stockService.updateSupplier(editingSupplier._id, formData);
        |                                                           ^^^
    119 |       } else {
    120 |         await stockService.createSupplier(formData);
    121 |       }

ERROR in src/modules/stock/pages/Suppliers.tsx:189:39
TS2339: Property '_id' does not exist on type 'Supplier'.
    187 |           <TableBody>
    188 |             {suppliers.map((supplier) => (
  > 189 |               <TableRow key={supplier._id}>
        |                                       ^^^
    190 |                 <TableCell>{supplier.name}</TableCell>
    191 |                 <TableCell>{supplier.contactPerson}</TableCell>
    192 |                 <TableCell>{supplier.email}</TableCell>

ERROR in src/modules/stock/pages/Suppliers.tsx:196:37
TS2339: Property 'status' does not exist on type 'Supplier'.
    194 |                 <TableCell>
    195 |                   <Chip
  > 196 |                     label={supplier.status === 'active' ? t('common.active') : t('common.inactive')}
        |                                     ^^^^^^
    197 |                     color={supplier.status === 'active' ? 'success' : 'error'}
    198 |                     size="small"
    199 |                   />

ERROR in src/modules/stock/pages/Suppliers.tsx:197:37
TS2339: Property 'status' does not exist on type 'Supplier'.
    195 |                   <Chip
    196 |                     label={supplier.status === 'active' ? t('common.active') : t('common.inactive')}
  > 197 |                     color={supplier.status === 'active' ? 'success' : 'error'}
        |                                     ^^^^^^
    198 |                     size="small"
    199 |                   />
    200 |                 </TableCell>

ERROR in src/modules/stock/pages/Suppliers.tsx:213:50
TS2339: Property 'status' does not exist on type 'Supplier'.
    211 |                           </IconButton>
    212 |                         </Tooltip>
  > 213 |                         <Tooltip title={supplier.status === 'active' ? t('common.deactivate') : t('common.activate')}>
        |                                                  ^^^^^^
    214 |                           <IconButton
    215 |                             size="small"
    216 |                             onClick={() => handleToggleStatus(supplier._id)}

ERROR in src/modules/stock/pages/Suppliers.tsx:216:72
TS2339: Property '_id' does not exist on type 'Supplier'.
    214 |                           <IconButton
    215 |                             size="small"
  > 216 |                             onClick={() => handleToggleStatus(supplier._id)}
        |                                                                        ^^^
    217 |                           >
    218 |                             {supplier.status === 'active' ? <BlockIcon /> : <CheckCircleIcon />}
    219 |                           </IconButton>

ERROR in src/modules/stock/pages/Suppliers.tsx:218:39
TS2339: Property 'status' does not exist on type 'Supplier'.
    216 |                             onClick={() => handleToggleStatus(supplier._id)}
    217 |                           >
  > 218 |                             {supplier.status === 'active' ? <BlockIcon /> : <CheckCircleIcon />}
        |                                       ^^^^^^
    219 |                           </IconButton>
    220 |                         </Tooltip>
    221 |                       </>

ERROR in src/pages/Contracts.tsx:38:10
TS2614: Module '"../utils/api"' has no exported member 'api'. Did you mean to use 'import api from "../utils/api"' instead?
    36 | import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';
    37 | import KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';
  > 38 | import { api } from '../utils/api';
       |          ^^^
    39 | import GradientButton from '../components/ui/GradientButton';
    40 | import {
    41 |   gradientText,

ERROR in src/pages/Inventory.tsx:40:10
TS2614: Module '"../utils/api"' has no exported member 'api'. Did you mean to use 'import api from "../utils/api"' instead?
    38 | import { useTranslation } from '../hooks/useTranslation';
    39 | import GradientButton from '../components/ui/GradientButton';
  > 40 | import { api } from '../utils/api';
       |          ^^^
    41 | import {
    42 |   gradientText,
    43 |   pageContainer,

ERROR in src/pages/Invoices.tsx:41:10
TS2614: Module '"../utils/api"' has no exported member 'api'. Did you mean to use 'import api from "../utils/api"' instead?
    39 | } from '@mui/icons-material';
    40 | import GradientButton from '../components/ui/GradientButton';
  > 41 | import { api } from '../utils/api';
       |          ^^^
    42 | import {
    43 |   gradientText,
    44 |   pageContainer,

ERROR in src/pages/Login.tsx:6:10
TS2305: Module '"../store/slices/authSlice"' has no exported member 'login'.
    4 | import { useTranslation } from 'react-i18next';
    5 | import { Box, Button, TextField, Typography, Paper } from '@mui/material';
  > 6 | import { login } from '../store/slices/authSlice';
      |          ^^^^^
    7 | import { authService } from '../services/authService';
    8 |
    9 | const Login: React.FC = () => {

ERROR in src/pages/Proforma.tsx:121:19
TS18046: 'response.data' is of type 'unknown'.
    119 |       setLoading(true);
    120 |       const response = await api.get('/proformas');
  > 121 |       setInvoices(response.data.data.proformaInvoices || []);
        |                   ^^^^^^^^^^^^^
    122 |     } catch (err) {
    123 |       setError(err instanceof Error ? err.message : 'Failed to fetch proforma invoices');
    124 |     } finally {

ERROR in src/pages/StockMovementList.tsx:31:125
TS2307: Cannot find module '../services/stockMovementService' or its corresponding type declarations.
    29 | import { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon, Cancel as CancelIcon } from '@mui/icons-material';
    30 | import { DatePicker } from '@mui/x-date-pickers';
  > 31 | import { stockMovementService, StockMovement, StockMovementFilters, StockMovementCreateData, StockMovementUpdateData } from '../services/stockMovementService';
       |                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    32 | import { useSnackbar } from 'notistack';
    33 | import { format } from 'date-fns';
    34 | import StockMovementForm from '../components/StockMovementForm';

ERROR in src/pages/StockMovementList.tsx:215:38
TS2339: Property 'status' does not exist on type 'StockMovementFilters'.
    213 |                     <InputLabel>Status</InputLabel>
    214 |                     <Select
  > 215 |                       value={filters.status || ''}
        |                                      ^^^^^^
    216 |                       onChange={(e) => handleFilterChange('status', e.target.value)}
    217 |                       label="Status"
    218 |                     >

ERROR in src/pages/StockMovementList.tsx:216:59
TS2345: Argument of type '"status"' is not assignable to parameter of type 'keyof StockMovementFilters'.
    214 |                     <Select
    215 |                       value={filters.status || ''}
  > 216 |                       onChange={(e) => handleFilterChange('status', e.target.value)}
        |                                                           ^^^^^^^^
    217 |                       label="Status"
    218 |                     >
    219 |                       <MenuItem value="">All</MenuItem>

ERROR in src/routes.tsx:27:8
TS2613: Module '"C:/Stock_HR/frontend/src/modules/hr/pages/Dashboard"' has no default export. Did you mean to use 'import { HRDashboard } from "C:/Stock_HR/frontend/src/modules/hr/pages/Dashboard"' instead?
    25 |
    26 | // HR Module
  > 27 | import HRDashboard from './modules/hr/pages/Dashboard';
       |        ^^^^^^^^^^^
    28 | import Employees from './modules/hr/pages/Employees';
    29 | import Departments from './modules/hr/pages/Departments';
    30 | import Positions from './modules/hr/pages/Positions';

ERROR in src/routes.tsx:37:22
TS2307: Cannot find module './modules/accounting/pages/Proforma' or its corresponding type declarations.
    35 | import AccountingDashboard from './modules/accounting/pages/Dashboard';
    36 | import Invoices from './modules/accounting/pages/Invoices';
  > 37 | import Proforma from './modules/accounting/pages/Proforma';
       |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    38 | import Contracts from './modules/accounting/pages/Contracts';
    39 | import JournalEntries from './modules/accounting/pages/JournalEntries';
    40 | import ChartOfAccounts from './modules/accounting/pages/ChartOfAccounts';

ERROR in src/routes.tsx:39:28
TS2307: Cannot find module './modules/accounting/pages/JournalEntries' or its corresponding type declarations.
    37 | import Proforma from './modules/accounting/pages/Proforma';
    38 | import Contracts from './modules/accounting/pages/Contracts';
  > 39 | import JournalEntries from './modules/accounting/pages/JournalEntries';
       |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    40 | import ChartOfAccounts from './modules/accounting/pages/ChartOfAccounts';
    41 | import FinancialStatements from './modules/accounting/pages/FinancialStatements';
    42 |

ERROR in src/routes.tsx:40:29
TS2307: Cannot find module './modules/accounting/pages/ChartOfAccounts' or its corresponding type declarations.
    38 | import Contracts from './modules/accounting/pages/Contracts';
    39 | import JournalEntries from './modules/accounting/pages/JournalEntries';
  > 40 | import ChartOfAccounts from './modules/accounting/pages/ChartOfAccounts';
       |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    41 | import FinancialStatements from './modules/accounting/pages/FinancialStatements';
    42 |
    43 | // Settings

ERROR in src/routes.tsx:41:33
TS2307: Cannot find module './modules/accounting/pages/FinancialStatements' or its corresponding type declarations.
    39 | import JournalEntries from './modules/accounting/pages/JournalEntries';
    40 | import ChartOfAccounts from './modules/accounting/pages/ChartOfAccounts';
  > 41 | import FinancialStatements from './modules/accounting/pages/FinancialStatements';
       |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    42 |
    43 | // Settings
    44 | import Settings from './pages/Settings';

ERROR in src/routes/index.tsx:11:23
TS2307: Cannot find module '../modules/stock/pages/Inventory' or its corresponding type declarations.
     9 | import Movements from '../modules/stock/pages/Movements';
    10 | import PurchaseOrders from '../modules/stock/pages/PurchaseOrders';
  > 11 | import Inventory from '../modules/stock/pages/Inventory';
       |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    12 | import Login from '../modules/auth/pages/Login';
    13 | import NotFound from '../modules/shared/pages/NotFound';
    14 |

ERROR in src/services/accountingService.ts:89:23
TS2339: Property 'CANCELLED' does not exist on type 'typeof InvoiceStatus'.
    87 |         'invoices',
    88 |         id,
  > 89 |         InvoiceStatus.CANCELLED,
       |                       ^^^^^^^^^
    90 |         'INVOICE_CANCELLED',
    91 |         reason,
    92 |         userId

ERROR in src/services/accountingService.ts:91:9
TS2554: Expected 4 arguments, but got 6.
    89 |         InvoiceStatus.CANCELLED,
    90 |         'INVOICE_CANCELLED',
  > 91 |         reason,
       |         ^^^^^^^
  > 92 |         userId
       | ^^^^^^^^^^^^^^^
    93 |       );
    94 |
    95 |       // Update the invoice in the database

ERROR in src/services/accountingService.ts:97:31
TS2339: Property 'CANCELLED' does not exist on type 'typeof InvoiceStatus'.
     95 |       // Update the invoice in the database
     96 |       await api.patch(`/accounting/invoices/${id}`, {
  >  97 |         status: InvoiceStatus.CANCELLED,
        |                               ^^^^^^^^^
     98 |         reason
     99 |       });
    100 |     } catch (error) {

ERROR in src/services/accountingService.ts:106:9
TS2393: Duplicate function implementation.
    104 |
    105 |   // Add method to handle invoice status changes
  > 106 |   async updateInvoiceStatus(
        |         ^^^^^^^^^^^^^^^^^^^
    107 |     id: string,
    108 |     newStatus: InvoiceStatus,
    109 |     reason: string,

ERROR in src/services/accountingService.ts:119:9
TS2554: Expected 4 arguments, but got 6.
    117 |         newStatus,
    118 |         `INVOICE_${newStatus.toUpperCase()}`,
  > 119 |         reason,
        |         ^^^^^^^
  > 120 |         userId
        | ^^^^^^^^^^^^^^^
    121 |       );
    122 |
    123 |       // Update the invoice in the database

ERROR in src/services/accountingService.ts:128:14
TS18046: 'response.data' is of type 'unknown'.
    126 |         reason
    127 |       });
  > 128 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    129 |     } catch (error) {
    130 |       this.handleError(error);
    131 |     }

ERROR in src/services/accountingService.ts:135:9
TS2393: Duplicate function implementation.
    133 |
    134 |   // Add method to handle invoice void
  > 135 |   async voidInvoice(
        |         ^^^^^^^^^^^
    136 |     id: string,
    137 |     reason: string,
    138 |     userId: string

ERROR in src/services/accountingService.ts:147:9
TS2554: Expected 4 arguments, but got 6.
    145 |         InvoiceStatus.VOID,
    146 |         'INVOICE_VOID',
  > 147 |         reason,
        |         ^^^^^^^
  > 148 |         userId
        | ^^^^^^^^^^^^^^^
    149 |       );
    150 |
    151 |       // Update the invoice in the database

ERROR in src/services/accountingService.ts:155:14
TS18046: 'response.data' is of type 'unknown'.
    153 |         reason
    154 |       });
  > 155 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    156 |     } catch (error) {
    157 |       this.handleError(error);
    158 |     }

ERROR in src/services/accountingService.ts:170:9
TS2554: Expected 4 arguments, but got 6.
    168 |         ExpenseStatus.REJECTED,
    169 |         'EXPENSE_REJECTED',
  > 170 |         reason,
        |         ^^^^^^^
  > 171 |         userId
        | ^^^^^^^^^^^^^^^
    172 |       );
    173 |
    174 |       // Update the expense in the database

ERROR in src/services/accountingService.ts:198:9
TS2554: Expected 4 arguments, but got 6.
    196 |         newStatus,
    197 |         `EXPENSE_${newStatus.toUpperCase()}`,
  > 198 |         reason,
        |         ^^^^^^^
  > 199 |         userId
        | ^^^^^^^^^^^^^^^
    200 |       );
    201 |
    202 |       // Update the expense in the database

ERROR in src/services/accountingService.ts:209:14
TS18046: 'response.data' is of type 'unknown'.
    207 |         [`${newStatus}At`]: new Date().toISOString()
    208 |       });
  > 209 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    210 |     } catch (error) {
    211 |       this.handleError(error);
    212 |     }

ERROR in src/services/accountingService.ts:221:14
TS18046: 'response.data' is of type 'unknown'.
    219 |         deletedBy: userId
    220 |       });
  > 221 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    222 |     } catch (error) {
    223 |       this.handleError(error);
    224 |     }

ERROR in src/services/accountingService.ts:231:14
TS18046: 'response.data' is of type 'unknown'.
    229 |     try {
    230 |       const response = await api.patch(`/accounting/expenses/${id}/restore`);
  > 231 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    232 |     } catch (error) {
    233 |       this.handleError(error);
    234 |     }

ERROR in src/services/accountingService.ts:248:14
TS18046: 'response.data' is of type 'unknown'.
    246 |     try {
    247 |       const response = await api.get('/accounting/expenses', { params: filters });
  > 248 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    249 |     } catch (error) {
    250 |       this.handleError(error);
    251 |     }

ERROR in src/services/accountingService.ts:264:20
TS2551: Property 'createExpense' does not exist on type 'AccountingService'. Did you mean 'restoreExpense'?
    262 |       if (data.type === 'out') {
    263 |         // Create an expense for outgoing stock
  > 264 |         await this.createExpense({
        |                    ^^^^^^^^^^^^^
    265 |           amount: data.quantity * data.unitPrice,
    266 |           category: 'stock',
    267 |           description: `Stock movement: ${data.movementId}`,

ERROR in src/services/accountingService.ts:289:18
TS2339: Property 'createAuditLog' does not exist on type 'AccountingService'.
    287 |     try {
    288 |       // Create audit log entry
  > 289 |       await this.createAuditLog(
        |                  ^^^^^^^^^^^^^^
    290 |         'invoices',
    291 |         id,
    292 |         'CANCELLED',

ERROR in src/services/accountingService.ts:306:9
TS2393: Duplicate function implementation.
    304 |   }
    305 |
  > 306 |   async updateInvoiceStatus(id: string, newStatus: string, reason: string, userId: string) {
        |         ^^^^^^^^^^^^^^^^^^^
    307 |     try {
    308 |       // Create audit log entry
    309 |       await this.createAuditLog(

ERROR in src/services/accountingService.ts:309:18
TS2339: Property 'createAuditLog' does not exist on type 'AccountingService'.
    307 |     try {
    308 |       // Create audit log entry
  > 309 |       await this.createAuditLog(
        |                  ^^^^^^^^^^^^^^
    310 |         'invoices',
    311 |         id,
    312 |         newStatus,

ERROR in src/services/accountingService.ts:326:9
TS2393: Duplicate function implementation.
    324 |   }
    325 |
  > 326 |   async voidInvoice(id: string, reason: string, userId: string) {
        |         ^^^^^^^^^^^
    327 |     try {
    328 |       // Create audit log entry
    329 |       await this.createAuditLog(

ERROR in src/services/accountingService.ts:329:18
TS2339: Property 'createAuditLog' does not exist on type 'AccountingService'.
    327 |     try {
    328 |       // Create audit log entry
  > 329 |       await this.createAuditLog(
        |                  ^^^^^^^^^^^^^^
    330 |         'invoices',
    331 |         id,
    332 |         'VOID',

ERROR in src/services/api.ts:15:7
TS18048: 'config.headers' is possibly 'undefined'.
    13 |     const token = localStorage.getItem('token');
    14 |     if (token) {
  > 15 |       config.headers.Authorization = `Bearer ${token}`;
       |       ^^^^^^^^^^^^^^
    16 |     }
    17 |     return config;
    18 |   },

ERROR in src/services/authService.ts:18:42
TS2345: Argument of type 'AxiosXHR<unknown>' is not assignable to parameter of type 'ApiResponse<UserProfile>'.
  Types of property 'data' are incompatible.
    Type 'unknown' is not assignable to type 'UserProfile'.
    16 |     try {
    17 |       const response = await api.post('/auth/login', credentials);
  > 18 |       return getApiResponse<UserProfile>(response);
       |                                          ^^^^^^^^
    19 |     } catch (error) {
    20 |       throw handleApiError(error);
    21 |     }

ERROR in src/services/authService.ts:27:42
TS2345: Argument of type 'AxiosXHR<unknown>' is not assignable to parameter of type 'ApiResponse<UserProfile>'.
  Types of property 'data' are incompatible.
    Type 'unknown' is not assignable to type 'UserProfile'.
    25 |     try {
    26 |       const response = await api.get('/auth/profile');
  > 27 |       return getApiResponse<UserProfile>(response);
       |                                          ^^^^^^^^
    28 |     } catch (error) {
    29 |       throw handleApiError(error);
    30 |     }

ERROR in src/services/contractService.ts:186:14
TS18046: 'response.data' is of type 'unknown'.
    184 |     try {
    185 |       const response = await api.post('/license/validate', data);
  > 186 |       return response.data.valid;
        |              ^^^^^^^^^^^^^
    187 |     } catch (error) {
    188 |       throw this.handleError(error);
    189 |     }

ERROR in src/services/hrService.ts:58:9
TS2554: Expected 4 arguments, but got 6.
    56 |         EmployeeStatus.TERMINATED,
    57 |         'EMPLOYEE_TERMINATED',
  > 58 |         reason,
       |         ^^^^^^^
  > 59 |         userId
       | ^^^^^^^^^^^^^^^
    60 |       );
    61 |
    62 |       // Update the employee in the database

ERROR in src/services/hrService.ts:73:9
TS2393: Duplicate function implementation.
    71 |
    72 |   // Add method to handle employee status changes
  > 73 |   async updateEmployeeStatus(
       |         ^^^^^^^^^^^^^^^^^^^^
    74 |     id: string,
    75 |     newStatus: EmployeeStatus,
    76 |     reason: string,

ERROR in src/services/hrService.ts:86:9
TS2554: Expected 4 arguments, but got 6.
    84 |         newStatus,
    85 |         `EMPLOYEE_${newStatus.toUpperCase()}`,
  > 86 |         reason,
       |         ^^^^^^^
  > 87 |         userId
       | ^^^^^^^^^^^^^^^
    88 |       );
    89 |
    90 |       // Update the employee in the database

ERROR in src/services/hrService.ts:95:14
TS18046: 'response.data' is of type 'unknown'.
    93 |         reason
    94 |       });
  > 95 |       return response.data.data;
       |              ^^^^^^^^^^^^^
    96 |     } catch (error) {
    97 |       this.handleError(error);
    98 |     }

ERROR in src/services/hrService.ts:102:9
TS2393: Duplicate function implementation.
    100 |
    101 |   // Add method to handle employee retirement
  > 102 |   async retireEmployee(
        |         ^^^^^^^^^^^^^^
    103 |     id: string,
    104 |     retirementDate: string,
    105 |     reason: string,

ERROR in src/services/hrService.ts:115:9
TS2554: Expected 4 arguments, but got 6.
    113 |         EmployeeStatus.RETIRED,
    114 |         'EMPLOYEE_RETIRED',
  > 115 |         reason,
        |         ^^^^^^^
  > 116 |         userId
        | ^^^^^^^^^^^^^^^
    117 |       );
    118 |
    119 |       // Update the employee in the database

ERROR in src/services/hrService.ts:125:14
TS18046: 'response.data' is of type 'unknown'.
    123 |         reason
    124 |       });
  > 125 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    126 |     } catch (error) {
    127 |       this.handleError(error);
    128 |     }

ERROR in src/services/hrService.ts:132:9
TS2393: Duplicate function implementation.
    130 |
    131 |   // Add method to handle employee suspension
  > 132 |   async suspendEmployee(
        |         ^^^^^^^^^^^^^^^
    133 |     id: string,
    134 |     suspensionStartDate: string,
    135 |     suspensionEndDate: string,

ERROR in src/services/hrService.ts:146:9
TS2554: Expected 4 arguments, but got 6.
    144 |         EmployeeStatus.SUSPENDED,
    145 |         'EMPLOYEE_SUSPENDED',
  > 146 |         reason,
        |         ^^^^^^^
  > 147 |         userId
        | ^^^^^^^^^^^^^^^
    148 |       );
    149 |
    150 |       // Update the employee in the database

ERROR in src/services/hrService.ts:157:14
TS18046: 'response.data' is of type 'unknown'.
    155 |         reason
    156 |       });
  > 157 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    158 |     } catch (error) {
    159 |       this.handleError(error);
    160 |     }

ERROR in src/services/hrService.ts:164:9
TS2393: Duplicate function implementation.
    162 |
    163 |   // Add method to handle employee death
  > 164 |   async markEmployeeDeceased(
        |         ^^^^^^^^^^^^^^^^^^^^
    165 |     id: string,
    166 |     dateOfDeath: string,
    167 |     reason: string,

ERROR in src/services/hrService.ts:177:9
TS2554: Expected 4 arguments, but got 6.
    175 |         EmployeeStatus.DECEASED,
    176 |         'EMPLOYEE_DECEASED',
  > 177 |         reason,
        |         ^^^^^^^
  > 178 |         userId
        | ^^^^^^^^^^^^^^^
    179 |       );
    180 |
    181 |       // Update the employee in the database

ERROR in src/services/hrService.ts:187:14
TS18046: 'response.data' is of type 'unknown'.
    185 |         reason
    186 |       });
  > 187 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    188 |     } catch (error) {
    189 |       this.handleError(error);
    190 |     }

ERROR in src/services/hrService.ts:221:18
TS2339: Property 'createAuditLog' does not exist on type 'HRService'.
    219 |     try {
    220 |       // Create audit log entry
  > 221 |       await this.createAuditLog(
        |                  ^^^^^^^^^^^^^^
    222 |         'employees',
    223 |         id,
    224 |         'TERMINATED',

ERROR in src/services/hrService.ts:238:9
TS2393: Duplicate function implementation.
    236 |   }
    237 |
  > 238 |   async updateEmployeeStatus(id: string, newStatus: string, reason: string, userId: string) {
        |         ^^^^^^^^^^^^^^^^^^^^
    239 |     try {
    240 |       // Create audit log entry
    241 |       await this.createAuditLog(

ERROR in src/services/hrService.ts:241:18
TS2339: Property 'createAuditLog' does not exist on type 'HRService'.
    239 |     try {
    240 |       // Create audit log entry
  > 241 |       await this.createAuditLog(
        |                  ^^^^^^^^^^^^^^
    242 |         'employees',
    243 |         id,
    244 |         newStatus,

ERROR in src/services/hrService.ts:258:9
TS2393: Duplicate function implementation.
    256 |   }
    257 |
  > 258 |   async retireEmployee(id: string, reason: string, userId: string) {
        |         ^^^^^^^^^^^^^^
    259 |     try {
    260 |       // Create audit log entry
    261 |       await this.createAuditLog(

ERROR in src/services/hrService.ts:261:18
TS2339: Property 'createAuditLog' does not exist on type 'HRService'.
    259 |     try {
    260 |       // Create audit log entry
  > 261 |       await this.createAuditLog(
        |                  ^^^^^^^^^^^^^^
    262 |         'employees',
    263 |         id,
    264 |         'RETIRED',

ERROR in src/services/hrService.ts:278:9
TS2393: Duplicate function implementation.
    276 |   }
    277 |
  > 278 |   async suspendEmployee(id: string, reason: string, userId: string) {
        |         ^^^^^^^^^^^^^^^
    279 |     try {
    280 |       // Create audit log entry
    281 |       await this.createAuditLog(

ERROR in src/services/hrService.ts:281:18
TS2339: Property 'createAuditLog' does not exist on type 'HRService'.
    279 |     try {
    280 |       // Create audit log entry
  > 281 |       await this.createAuditLog(
        |                  ^^^^^^^^^^^^^^
    282 |         'employees',
    283 |         id,
    284 |         'SUSPENDED',

ERROR in src/services/hrService.ts:298:9
TS2393: Duplicate function implementation.
    296 |   }
    297 |
  > 298 |   async markEmployeeDeceased(id: string, reason: string, userId: string) {
        |         ^^^^^^^^^^^^^^^^^^^^
    299 |     try {
    300 |       // Create audit log entry
    301 |       await this.createAuditLog(

ERROR in src/services/hrService.ts:301:18
TS2339: Property 'createAuditLog' does not exist on type 'HRService'.
    299 |     try {
    300 |       // Create audit log entry
  > 301 |       await this.createAuditLog(
        |                  ^^^^^^^^^^^^^^
    302 |         'employees',
    303 |         id,
    304 |         'DECEASED',

ERROR in src/services/messagingService.ts:72:20
TS18046: 'uploadResponse.data' is of type 'unknown'.
    70 |           }
    71 |         });
  > 72 |         imageUrl = uploadResponse.data.url;
       |                    ^^^^^^^^^^^^^^^^^^^
    73 |       }
    74 |
    75 |       const response = await api.post('/api/messages', {

ERROR in src/services/messagingService.ts:82:7
TS2322: Type 'unknown' is not assignable to type 'Message'.
    80 |       });
    81 |
  > 82 |       return response.data;
       |       ^^^^^^
    83 |     } catch (error) {
    84 |       console.error('Error sending message:', error);
    85 |       throw error;

ERROR in src/services/messagingService.ts:92:7
TS2322: Type 'unknown' is not assignable to type 'Message[]'.
    90 |     try {
    91 |       const response = await api.get('/api/messages');
  > 92 |       return response.data;
       |       ^^^^^^
    93 |     } catch (error) {
    94 |       console.error('Error fetching messages:', error);
    95 |       throw error;

ERROR in src/services/stockAccessTokenService.ts:34:38
TS2345: Argument of type 'unknown' is not assignable to parameter of type 'AccessToken'.
    32 |
    33 |       const token = response.data;
  > 34 |       this.tokens.set(inventoryItem, token);
       |                                      ^^^^^
    35 |       return token;
    36 |     } catch (error) {
    37 |       console.error('Failed to request access token:', error);

ERROR in src/services/stockAccessTokenService.ts:35:7
TS2322: Type 'unknown' is not assignable to type 'AccessToken | null'.
    33 |       const token = response.data;
    34 |       this.tokens.set(inventoryItem, token);
  > 35 |       return token;
       |       ^^^^^^
    36 |     } catch (error) {
    37 |       console.error('Failed to request access token:', error);
    38 |       return null;

ERROR in src/services/stockAccessTokenService.ts:46:43
TS2802: Type 'MapIterator<[string, AccessToken]>' can only be iterated through when using the '--downlevelIteration' flag or with a '--target' of 'es2015' or higher.
    44 |       await api.delete(`/stock/access-tokens/${token}`);
    45 |       // Find and remove the token from our map
  > 46 |       for (const [itemId, storedToken] of this.tokens.entries()) {
       |                                           ^^^^^^^^^^^^^^^^^^^^^
    47 |         if (storedToken.token === token) {
    48 |           this.tokens.delete(itemId);
    49 |           break;

ERROR in src/services/stockAccessTokenService.ts:61:43
TS2802: Type 'MapIterator<[string, AccessToken]>' can only be iterated through when using the '--downlevelIteration' flag or with a '--target' of 'es2015' or higher.
    59 |       await api.post(`/stock/access-tokens/${token}/cancel`);
    60 |       // Find and remove the token from our map
  > 61 |       for (const [itemId, storedToken] of this.tokens.entries()) {
       |                                           ^^^^^^^^^^^^^^^^^^^^^
    62 |         if (storedToken.token === token) {
    63 |           this.tokens.delete(itemId);
    64 |           break;

ERROR in src/services/stockService.ts:111:14
TS18046: 'response.data' is of type 'unknown'.
    109 |     try {
    110 |       const response = await api.get('/stock/categories');
  > 111 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    112 |     } catch (error) {
    113 |       this.handleError(error);
    114 |     }

ERROR in src/services/stockService.ts:120:14
TS18046: 'response.data' is of type 'unknown'.
    118 |     try {
    119 |       const response = await api.post('/stock/categories', data);
  > 120 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    121 |     } catch (error) {
    122 |       this.handleError(error);
    123 |     }

ERROR in src/services/stockService.ts:129:14
TS18046: 'response.data' is of type 'unknown'.
    127 |     try {
    128 |       const response = await api.patch(`/stock/categories/${id}`, data);
  > 129 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    130 |     } catch (error) {
    131 |       this.handleError(error);
    132 |     }

ERROR in src/services/stockService.ts:147:14
TS18046: 'response.data' is of type 'unknown'.
    145 |     try {
    146 |       const response = await api.get('/stock/suppliers');
  > 147 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    148 |     } catch (error) {
    149 |       this.handleError(error);
    150 |     }

ERROR in src/services/stockService.ts:163:14
TS18046: 'response.data' is of type 'unknown'.
    161 |     try {
    162 |       const response = await api.post('/stock/suppliers', data);
  > 163 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    164 |     } catch (error) {
    165 |       this.handleError(error);
    166 |     }

ERROR in src/services/stockService.ts:172:14
TS18046: 'response.data' is of type 'unknown'.
    170 |     try {
    171 |       const response = await api.patch(`/stock/suppliers/${id}`, data);
  > 172 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    173 |     } catch (error) {
    174 |       this.handleError(error);
    175 |     }

ERROR in src/services/stockService.ts:181:14
TS18046: 'response.data' is of type 'unknown'.
    179 |     try {
    180 |       const response = await api.patch(`/stock/suppliers/${id}/toggle-status`);
  > 181 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    182 |     } catch (error) {
    183 |       this.handleError(error);
    184 |     }

ERROR in src/services/stockService.ts:191:14
TS18046: 'response.data' is of type 'unknown'.
    189 |     try {
    190 |       const response = await api.get('/stock/movements');
  > 191 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    192 |     } catch (error) {
    193 |       this.handleError(error);
    194 |     }

ERROR in src/services/stockService.ts:200:14
TS18046: 'response.data' is of type 'unknown'.
    198 |     try {
    199 |       const response = await api.get(`/stock/movements/${id}`);
  > 200 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    201 |     } catch (error) {
    202 |       this.handleError(error);
    203 |     }

ERROR in src/services/stockService.ts:219:21
TS18046: 'response.data' is of type 'unknown'.
    217 |       });
    218 |
  > 219 |       const token = response.data.data;
        |                     ^^^^^^^^^^^^^
    220 |       this.activeTokens.set(inventoryItemId, token);
    221 |
    222 |       // Set up auto-expiration

ERROR in src/services/stockService.ts:252:20
TS2339: Property 'createExpense' does not exist on type 'StockService'.
    250 |       if (data.type === 'out') {
    251 |         // Create an expense for outgoing stock
  > 252 |         await this.createExpense({
        |                    ^^^^^^^^^^^^^
    253 |           amount: data.quantity * data.unitPrice,
    254 |           category: 'stock',
    255 |           description: `Stock movement: ${data.movementId}`,

ERROR in src/services/stockService.ts:253:40
TS2339: Property 'unitPrice' does not exist on type 'Omit<StockMovement, "user" | "status" | "id" | "timestamp">'.
    251 |         // Create an expense for outgoing stock
    252 |         await this.createExpense({
  > 253 |           amount: data.quantity * data.unitPrice,
        |                                        ^^^^^^^^^
    254 |           category: 'stock',
    255 |           description: `Stock movement: ${data.movementId}`,
    256 |         });

ERROR in src/services/stockService.ts:255:48
TS2339: Property 'movementId' does not exist on type 'Omit<StockMovement, "user" | "status" | "id" | "timestamp">'.
    253 |           amount: data.quantity * data.unitPrice,
    254 |           category: 'stock',
  > 255 |           description: `Stock movement: ${data.movementId}`,
        |                                                ^^^^^^^^^^
    256 |         });
    257 |       }
    258 |

ERROR in src/services/stockService.ts:269:14
TS18046: 'response.data' is of type 'unknown'.
    267 |     try {
    268 |       const response = await api.patch(`/stock/movements/${id}`, data);
  > 269 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    270 |     } catch (error) {
    271 |       this.handleError(error);
    272 |     }

ERROR in src/services/stockService.ts:278:9
TS2353: Object literal may only specify known properties, and 'data' does not exist in type 'AxiosXHRConfigBase<unknown>'.
    276 |     try {
    277 |       await api.delete(`/stock/movements/${id}`, {
  > 278 |         data: { reason, userId }
        |         ^^^^
    279 |       });
    280 |     } catch (error) {
    281 |       this.handleError(error);

ERROR in src/services/stockService.ts:291:14
TS18046: 'response.data' is of type 'unknown'.
    289 |         userId
    290 |       });
  > 291 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    292 |     } catch (error) {
    293 |       this.handleError(error);
    294 |     }

ERROR in src/services/stockService.ts:301:14
TS18046: 'response.data' is of type 'unknown'.
    299 |     try {
    300 |       const response = await api.get('/stock/purchase-orders');
  > 301 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    302 |     } catch (error) {
    303 |       this.handleError(error);
    304 |     }

ERROR in src/services/stockService.ts:310:14
TS18046: 'response.data' is of type 'unknown'.
    308 |     try {
    309 |       const response = await api.get(`/stock/purchase-orders/${id}`);
  > 310 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    311 |     } catch (error) {
    312 |       this.handleError(error);
    313 |     }

ERROR in src/services/stockService.ts:324:14
TS18046: 'response.data' is of type 'unknown'.
    322 |     try {
    323 |       const response = await api.post('/stock/purchase-orders', data);
  > 324 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    325 |     } catch (error) {
    326 |       this.handleError(error);
    327 |     }

ERROR in src/services/stockService.ts:342:21
TS18046: 'response.data' is of type 'unknown'.
    340 |       });
    341 |
  > 342 |       const token = response.data.data;
        |                     ^^^^^^^^^^^^^
    343 |       this.activePurchaseOrderTokens.set(purchaseOrderId, token);
    344 |
    345 |       // Set up auto-expiration

ERROR in src/services/stockService.ts:379:14
TS18046: 'response.data' is of type 'unknown'.
    377 |         receivedItems
    378 |       });
  > 379 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    380 |     } catch (error) {
    381 |       this.handleError(error);
    382 |     }

ERROR in src/services/stockService.ts:397:14
TS18046: 'response.data' is of type 'unknown'.
    395 |     try {
    396 |       const response = await api.get('/stock/inventory');
  > 397 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    398 |     } catch (error) {
    399 |       this.handleError(error);
    400 |     }

ERROR in src/services/stockService.ts:406:14
TS18046: 'response.data' is of type 'unknown'.
    404 |     try {
    405 |       const response = await api.get(`/stock/inventory/${id}`);
  > 406 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    407 |     } catch (error) {
    408 |       this.handleError(error);
    409 |     }

ERROR in src/services/stockService.ts:426:14
TS18046: 'response.data' is of type 'unknown'.
    424 |     try {
    425 |       const response = await api.post('/stock/inventory', data);
  > 426 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    427 |     } catch (error) {
    428 |       this.handleError(error);
    429 |     }

ERROR in src/services/stockService.ts:435:14
TS18046: 'response.data' is of type 'unknown'.
    433 |     try {
    434 |       const response = await api.patch(`/stock/inventory/${id}`, data);
  > 435 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    436 |     } catch (error) {
    437 |       this.handleError(error);
    438 |     }

ERROR in src/services/stockService.ts:461:14
TS18046: 'response.data' is of type 'unknown'.
    459 |         userId
    460 |       });
  > 461 |       return response.data.data;
        |              ^^^^^^^^^^^^^
    462 |     } catch (error) {
    463 |       this.handleError(error);
    464 |     }

ERROR in src/services/userService.ts:39:14
TS18046: 'response.data' is of type 'unknown'.
    37 |         headers: this.getHeaders(),
    38 |       });
  > 39 |       return response.data.data.users;
       |              ^^^^^^^^^^^^^
    40 |     } catch (error) {
    41 |       throw this.handleError(error);
    42 |     }

ERROR in src/services/userService.ts:50:14
TS18046: 'response.data' is of type 'unknown'.
    48 |         headers: this.getHeaders(),
    49 |       });
  > 50 |       return response.data.data.user;
       |              ^^^^^^^^^^^^^
    51 |     } catch (error) {
    52 |       throw this.handleError(error);
    53 |     }

ERROR in src/services/userService.ts:61:14
TS18046: 'response.data' is of type 'unknown'.
    59 |         headers: this.getHeaders(),
    60 |       });
  > 61 |       return response.data.data.user;
       |              ^^^^^^^^^^^^^
    62 |     } catch (error) {
    63 |       throw this.handleError(error);
    64 |     }

ERROR in src/services/userService.ts:72:14
TS18046: 'response.data' is of type 'unknown'.
    70 |         headers: this.getHeaders(),
    71 |       });
  > 72 |       return response.data.data.user;
       |              ^^^^^^^^^^^^^
    73 |     } catch (error) {
    74 |       throw this.handleError(error);
    75 |     }

ERROR in src/services/userService.ts:93:14
TS18046: 'response.data' is of type 'unknown'.
    91 |         headers: this.getHeaders(),
    92 |       });
  > 93 |       return response.data.data.user;
       |              ^^^^^^^^^^^^^
    94 |     } catch (error) {
    95 |       throw this.handleError(error);
    96 |     }

ERROR in src/services/userService.ts:104:14
TS18046: 'response.data' is of type 'unknown'.
    102 |         headers: this.getHeaders(),
    103 |       });
  > 104 |       return response.data.data.user;
        |              ^^^^^^^^^^^^^
    105 |     } catch (error) {
    106 |       throw this.handleError(error);
    107 |     }

ERROR in src/utils/api.ts:5:24
TS2339: Property 'env' does not exist on type 'ImportMeta'.
    3 |
    4 | const api = axios.create({
  > 5 |   baseURL: import.meta.env.VITE_API_URL || 'http://localhost:3000/api',
      |                        ^^^
    6 |   headers: {
    7 |     'Content-Type': 'application/json',
    8 |   },

ERROR in src/utils/api.ts:16:7
TS18048: 'config.headers' is possibly 'undefined'.
    14 |     const token = localStorage.getItem('token');
    15 |     if (token) {
  > 16 |       config.headers.Authorization = `Bearer ${token}`;
       |       ^^^^^^^^^^^^^^
    17 |     }
    18 |     return config;
    19 |   },

ERROR in src/utils/api.ts:36:13
TS2339: Property 'isAxiosError' does not exist on type 'AxiosStatic'.
    34 |
    35 | export const handleApiError = (error: unknown): ErrorResponse => {
  > 36 |   if (axios.isAxiosError(error)) {
       |             ^^^^^^^^^^^^
    37 |     return {
    38 |       message: error.response?.data?.message || error.message,
    39 |       status: error.response?.status || 500,

ERROR in src/utils/api.ts:38:16
TS18046: 'error' is of type 'unknown'.
    36 |   if (axios.isAxiosError(error)) {
    37 |     return {
  > 38 |       message: error.response?.data?.message || error.message,
       |                ^^^^^
    39 |       status: error.response?.status || 500,
    40 |     };
    41 |   }

ERROR in src/utils/api.ts:38:49
TS18046: 'error' is of type 'unknown'.
    36 |   if (axios.isAxiosError(error)) {
    37 |     return {
  > 38 |       message: error.response?.data?.message || error.message,
       |                                                 ^^^^^
    39 |       status: error.response?.status || 500,
    40 |     };
    41 |   }

ERROR in src/utils/api.ts:39:15
TS18046: 'error' is of type 'unknown'.
    37 |     return {
    38 |       message: error.response?.data?.message || error.message,
  > 39 |       status: error.response?.status || 500,
       |               ^^^^^
    40 |     };
    41 |   }
    42 |   return {

